{
    "folders": [
        {
            "description": "Folder for sensitiveDataObject", 
            "collection_name": "IOT3_API3", 
            "collection": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "id": "610df4c9-6f6b-4de6-9e18-16647e0db98a", 
            "collection_id": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "order": [
                "5c0749c0-cc94-44b3-b92c-6bab6eb2ea450", 
                "5c0749c0-cc94-44b3-b92c-6bab6eb2ea4508", 
                "5c0749c0-cc94-44b3-b92c-6bab6eb2ea4519", 
                "5c0749c0-cc94-44b3-b92c-6bab6eb2ea45210", 
                "bf9d03e6-6023-4c1f-b80c-2c17648521e9221", 
                "e01a23c5-4d3a-446a-a219-4e84142bfb16229", 
                "eb7ea081-7cf8-4a8f-87d0-834a7628aff3237"
            ], 
            "name": "sensitiveDataObject"
        }, 
        {
            "description": "Folder for secureConnection", 
            "collection_name": "IOT3_API3", 
            "collection": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "id": "54744cc5-ace9-48b0-b2e7-b8479297249d", 
            "collection_id": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "order": [
                "66c0bba8-b2e8-47ac-8623-378aa676680c1", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c011", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c112", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c213", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c314", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c415", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c516", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c617", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c718", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c819", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c920", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c1021", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c1122", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c1223", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c1324", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c1425", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c1526", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c1627", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c1728", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c1829", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c1930", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c2031", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c2132", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c2233", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c2334", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c2435", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c2536", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c2637", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c2738", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c2839", 
                "66c0bba8-b2e8-47ac-8623-378aa676680c2940", 
                "41b5282c-fca1-4678-9e4f-e6f739cf9ba9222", 
                "7a11e6e4-a282-414e-86c8-e672c11af5ca230", 
                "2ea2bb84-4b76-490c-9b39-2f4c4db5fcdd238"
            ], 
            "name": "secureConnection"
        }, 
        {
            "description": "Folder for hash", 
            "collection_name": "IOT3_API3", 
            "collection": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "id": "938739e4-942d-46bd-9f15-3ef3a553ac9e", 
            "collection_id": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "order": [
                "0ca30268-672b-4dd5-bd12-fc3d1c6c65572", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c6557041", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c6557142", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c6557243", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c6557344", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c6557445", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c6557546", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c6557647", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c6557748", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c6557849", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c6557950", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c65571051", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c65571152", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c65571253", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c65571354", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c65571455", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c65571556", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c65571657", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c65571758", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c65571859", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c65571960", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c65572061", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c65572162", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c65572263", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c65572364", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c65572465", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c65572566", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c65572667", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c65572768", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c65572869", 
                "0ca30268-672b-4dd5-bd12-fc3d1c6c65572970", 
                "fb932148-b15a-41d6-966d-2552c98b90b1223", 
                "324d54b5-b59d-4cc6-a00b-2e8f8a66dda8231", 
                "ef5debc9-ca95-4f12-bc4e-1eddbadc97d9239"
            ], 
            "name": "hash"
        }, 
        {
            "description": "Folder for identity", 
            "collection_name": "IOT3_API3", 
            "collection": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "id": "a6390a58-ac8b-48c3-bbab-f3e87608d412", 
            "collection_id": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "order": [
                "50d4e407-ad03-4b2f-ad51-343e16a32b513", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b51071", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b51172", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b51273", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b51374", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b51475", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b51576", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b51677", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b51778", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b51879", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b51980", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b511081", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b511182", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b511283", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b511384", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b511485", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b511586", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b511687", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b511788", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b511889", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b511990", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b512091", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b512192", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b512293", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b512394", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b512495", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b512596", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b512697", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b512798", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b512899", 
                "50d4e407-ad03-4b2f-ad51-343e16a32b5129100", 
                "e8b25f41-2702-4dd9-bd4a-eb5b309245eb224", 
                "6c64b157-876f-44a3-91f9-3e9ec7c8d79b232", 
                "95a7508e-da95-4db2-8784-c01b46e35419240"
            ], 
            "name": "identity"
        }, 
        {
            "description": "Folder for rand", 
            "collection_name": "IOT3_API3", 
            "collection": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "id": "64a9db47-0dd8-41d7-bb8a-b2c4da0ab970", 
            "collection_id": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "order": [
                "004f2cd9-4344-40b7-aa83-824f1080fca24", 
                "004f2cd9-4344-40b7-aa83-824f1080fca20101", 
                "004f2cd9-4344-40b7-aa83-824f1080fca21102", 
                "004f2cd9-4344-40b7-aa83-824f1080fca22103", 
                "004f2cd9-4344-40b7-aa83-824f1080fca23104", 
                "004f2cd9-4344-40b7-aa83-824f1080fca24105", 
                "004f2cd9-4344-40b7-aa83-824f1080fca25106", 
                "004f2cd9-4344-40b7-aa83-824f1080fca26107", 
                "004f2cd9-4344-40b7-aa83-824f1080fca27108", 
                "004f2cd9-4344-40b7-aa83-824f1080fca28109", 
                "004f2cd9-4344-40b7-aa83-824f1080fca29110", 
                "004f2cd9-4344-40b7-aa83-824f1080fca210111", 
                "004f2cd9-4344-40b7-aa83-824f1080fca211112", 
                "004f2cd9-4344-40b7-aa83-824f1080fca212113", 
                "004f2cd9-4344-40b7-aa83-824f1080fca213114", 
                "004f2cd9-4344-40b7-aa83-824f1080fca214115", 
                "004f2cd9-4344-40b7-aa83-824f1080fca215116", 
                "004f2cd9-4344-40b7-aa83-824f1080fca216117", 
                "004f2cd9-4344-40b7-aa83-824f1080fca217118", 
                "004f2cd9-4344-40b7-aa83-824f1080fca218119", 
                "004f2cd9-4344-40b7-aa83-824f1080fca219120", 
                "004f2cd9-4344-40b7-aa83-824f1080fca220121", 
                "004f2cd9-4344-40b7-aa83-824f1080fca221122", 
                "004f2cd9-4344-40b7-aa83-824f1080fca222123", 
                "004f2cd9-4344-40b7-aa83-824f1080fca223124", 
                "004f2cd9-4344-40b7-aa83-824f1080fca224125", 
                "004f2cd9-4344-40b7-aa83-824f1080fca225126", 
                "004f2cd9-4344-40b7-aa83-824f1080fca226127", 
                "004f2cd9-4344-40b7-aa83-824f1080fca227128", 
                "004f2cd9-4344-40b7-aa83-824f1080fca228129", 
                "004f2cd9-4344-40b7-aa83-824f1080fca229130", 
                "20eb17fc-030c-45b0-a497-9646f6e177a4225", 
                "9b5bd1b9-a5e3-4e1d-ad8b-430fc59c6780233", 
                "b2b93601-ef24-42ce-bee2-ed3f304fd584241"
            ], 
            "name": "rand"
        }, 
        {
            "description": "Folder for cipher", 
            "collection_name": "IOT3_API3", 
            "collection": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "id": "4b146d9c-4f0a-4b8c-ac8e-b72746dcac9b", 
            "collection_id": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "order": [
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c5", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c0131", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c1132", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c2133", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c3134", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c4135", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c5136", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c6137", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c7138", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c8139", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c9140", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c10141", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c11142", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c12143", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c13144", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c14145", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c15146", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c16147", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c17148", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c18149", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c19150", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c20151", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c21152", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c22153", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c23154", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c24155", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c25156", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c26157", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c27158", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c28159", 
                "d26ed1e0-0ce8-4863-8652-f8f868e51a2c29160", 
                "bfdf5eb2-3017-4ad6-8c18-e216a24f77c8226", 
                "363a7097-6a30-4c47-bf81-1e64d2c820f7234", 
                "ab38af4a-d680-42b4-a163-b0128bbf2305242"
            ], 
            "name": "cipher"
        }, 
        {
            "description": "Folder for connectionInstance", 
            "collection_name": "IOT3_API3", 
            "collection": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "id": "49b19448-288b-4124-9295-66f548866f40", 
            "collection_id": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "order": [
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d6", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d0161", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d1162", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d2163", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d3164", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d4165", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d5166", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d6167", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d7168", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d8169", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d9170", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d10171", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d11172", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d12173", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d13174", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d14175", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d15176", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d16177", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d17178", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d18179", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d19180", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d20181", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d21182", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d22183", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d23184", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d24185", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d25186", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d26187", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d27188", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d28189", 
                "15d8a3f6-782d-44f4-b815-c5186b7a4a1d29190", 
                "f8571c7f-84f4-49ec-9a3a-c2347e77660b227", 
                "aa8aa373-3e5b-422a-a6c2-67969ccbaacb235", 
                "4d4041c3-fc80-48c2-983d-28c5871d8bbc243"
            ], 
            "name": "connectionInstance"
        }, 
        {
            "description": "Folder for signature", 
            "collection_name": "IOT3_API3", 
            "collection": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "id": "6985cd88-9808-401e-be28-0122f3a9db27", 
            "collection_id": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "order": [
                "41939792-f695-4e3b-ba69-11b88d49cbaa7", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa0191", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa1192", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa2193", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa3194", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa4195", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa5196", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa6197", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa7198", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa8199", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa9200", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa10201", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa11202", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa12203", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa13204", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa14205", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa15206", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa16207", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa17208", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa18209", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa19210", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa20211", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa21212", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa22213", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa23214", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa24215", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa25216", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa26217", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa27218", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa28219", 
                "41939792-f695-4e3b-ba69-11b88d49cbaa29220", 
                "b44b819e-0b3c-4579-a2e2-e62d3153283d228", 
                "a96219de-1865-49e2-9661-b3111ab9413d236", 
                "389e4e7c-805f-4be0-a98c-30dc23f85820244"
            ], 
            "name": "signature"
        }
    ], 
    "description": "The ETSI IOT Bandwidth Management API described using OpenAPI", 
    "timestamp": 1413302258635, 
    "id": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
    "synced": false, 
    "requests": [
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/sensitiveDataObject?ToAddress={{ToAddress}}&FromId={{FromId}}", 
            "name": "TC_200", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432541, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveDataObjectInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"labels\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['labels']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['resourceName']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/1?query=/iot3/example/sensitiveDataObject?ToAddress={{ToAddress}}?FromId={{FromId}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "5c0749c0-cc94-44b3-b92c-6bab6eb2ea450", 
            "description": "This method retrieves information about a list of sensitiveDataObject resources"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?ToAddress={{ToAddress}}&FromId={{FromId}}&Operation={{Operation}}&RequestId={{RequestId}}&ResourceType={{ResourceType}}&OriginatingTimestamp={{OriginatingTimestamp}}&ReqExpirationTimestamp={{ReqExpirationTimestamp}}&ResExpirationTimestamp={{ResExpirationTimestamp}}&EventCategory={{EventCategory}}&OperationalExecutionTime={{OperationalExecutionTime}}&ResponseType={{ResponseType}}&ResultPersistence={{ResultPersistence}}&ResultContent={{ResultContent}}&DeliveryAggregation={{DeliveryAggregation}}&GroupRequestIdentifier={{GroupRequestIdentifier}}&FilterCriteria={{FilterCriteria}}&DesiredIdentifierResultType={{DesiredIdentifierResultType}}&TokenRequestIndicator={{TokenRequestIndicator}}&Tokens={{Tokens}}&TokenIDs={{TokenIDs}}&RoleIDs={{RoleIDs}}&LocalTokenIDs={{LocalTokenIDs}}&ReleaseVersionIndicator={{ReleaseVersionIndicator}}&VendorInformation={{VendorInformation}}&GroupRequestTargetMembers={{GroupRequestTargetMembers}}&AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}&AuthorizationSignature={{AuthorizationSignature}}&AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}&SemanticQueryIndicator={{SemanticQueryIndicator}}", 
            "name": "TC_200", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/2?query=/iot3/example/secureConnection?ToAddress={{ToAddress}}?FromId={{FromId}}?Operation={{Operation}}?RequestId={{RequestId}}?ResourceType={{ResourceType}}?OriginatingTimestamp={{OriginatingTimestamp}}?ReqExpirationTimestamp={{ReqExpirationTimestamp}}?ResExpirationTimestamp={{ResExpirationTimestamp}}?EventCategory={{EventCategory}}?OperationalExecutionTime={{OperationalExecutionTime}}?ResponseType={{ResponseType}}?ResultPersistence={{ResultPersistence}}?ResultContent={{ResultContent}}?DeliveryAggregation={{DeliveryAggregation}}?GroupRequestIdentifier={{GroupRequestIdentifier}}?FilterCriteria={{FilterCriteria}}?DesiredIdentifierResultType={{DesiredIdentifierResultType}}?TokenRequestIndicator={{TokenRequestIndicator}}?Tokens={{Tokens}}?TokenIDs={{TokenIDs}}?RoleIDs={{RoleIDs}}?LocalTokenIDs={{LocalTokenIDs}}?ReleaseVersionIndicator={{ReleaseVersionIndicator}}?VendorInformation={{VendorInformation}}?GroupRequestTargetMembers={{GroupRequestTargetMembers}}?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}?AuthorizationSignature={{AuthorizationSignature}}?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}?SemanticQueryIndicator={{SemanticQueryIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    pm.environment.set(\"Operation\",currentData.Operation);", 
                            "    pm.environment.set(\"RequestId\",currentData.RequestId);", 
                            "    pm.environment.set(\"ResourceType\",currentData.ResourceType);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.OriginatingTimestamp);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.ReqExpirationTimestamp);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.ResExpirationTimestamp);", 
                            "    pm.environment.set(\"EventCategory\",currentData.EventCategory);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.OperationalExecutionTime);", 
                            "    pm.environment.set(\"ResponseType\",currentData.ResponseType);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.ResultPersistence);", 
                            "    pm.environment.set(\"ResultContent\",currentData.ResultContent);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.DeliveryAggregation);", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.GroupRequestIdentifier);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.FilterCriteria);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.DesiredIdentifierResultType);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.TokenRequestIndicator);", 
                            "    pm.environment.set(\"Tokens\",currentData.Tokens);", 
                            "    pm.environment.set(\"TokenIDs\",currentData.TokenIDs);", 
                            "    pm.environment.set(\"RoleIDs\",currentData.RoleIDs);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.LocalTokenIDs);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.ReleaseVersionIndicator);", 
                            "    pm.environment.set(\"VendorInformation\",currentData.VendorInformation);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.GroupRequestTargetMembers);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.AuthorizationSignatureIndicator);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.AuthorizationSignature);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.AuthorizationRelationshipIndicator);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.SemanticQueryIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c1", 
            "description": "This method retrieves information about a list of secureConnection resources"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?ToAddress={{ToAddress}}&FromId={{FromId}}&Operation={{Operation}}&RequestId={{RequestId}}&ResourceType={{ResourceType}}&OriginatingTimestamp={{OriginatingTimestamp}}&ReqExpirationTimestamp={{ReqExpirationTimestamp}}&ResExpirationTimestamp={{ResExpirationTimestamp}}&EventCategory={{EventCategory}}&OperationalExecutionTime={{OperationalExecutionTime}}&ResponseType={{ResponseType}}&ResultPersistence={{ResultPersistence}}&ResultContent={{ResultContent}}&DeliveryAggregation={{DeliveryAggregation}}&GroupRequestIdentifier={{GroupRequestIdentifier}}&FilterCriteria={{FilterCriteria}}&DesiredIdentifierResultType={{DesiredIdentifierResultType}}&TokenRequestIndicator={{TokenRequestIndicator}}&Tokens={{Tokens}}&TokenIDs={{TokenIDs}}&RoleIDs={{RoleIDs}}&LocalTokenIDs={{LocalTokenIDs}}&ReleaseVersionIndicator={{ReleaseVersionIndicator}}&VendorInformation={{VendorInformation}}&GroupRequestTargetMembers={{GroupRequestTargetMembers}}&AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}&AuthorizationSignature={{AuthorizationSignature}}&AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}&SemanticQueryIndicator={{SemanticQueryIndicator}}", 
            "name": "TC_200", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/3?query=/iot3/example/hash?ToAddress={{ToAddress}}?FromId={{FromId}}?Operation={{Operation}}?RequestId={{RequestId}}?ResourceType={{ResourceType}}?OriginatingTimestamp={{OriginatingTimestamp}}?ReqExpirationTimestamp={{ReqExpirationTimestamp}}?ResExpirationTimestamp={{ResExpirationTimestamp}}?EventCategory={{EventCategory}}?OperationalExecutionTime={{OperationalExecutionTime}}?ResponseType={{ResponseType}}?ResultPersistence={{ResultPersistence}}?ResultContent={{ResultContent}}?DeliveryAggregation={{DeliveryAggregation}}?GroupRequestIdentifier={{GroupRequestIdentifier}}?FilterCriteria={{FilterCriteria}}?DesiredIdentifierResultType={{DesiredIdentifierResultType}}?TokenRequestIndicator={{TokenRequestIndicator}}?Tokens={{Tokens}}?TokenIDs={{TokenIDs}}?RoleIDs={{RoleIDs}}?LocalTokenIDs={{LocalTokenIDs}}?ReleaseVersionIndicator={{ReleaseVersionIndicator}}?VendorInformation={{VendorInformation}}?GroupRequestTargetMembers={{GroupRequestTargetMembers}}?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}?AuthorizationSignature={{AuthorizationSignature}}?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}?SemanticQueryIndicator={{SemanticQueryIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    pm.environment.set(\"Operation\",currentData.Operation);", 
                            "    pm.environment.set(\"RequestId\",currentData.RequestId);", 
                            "    pm.environment.set(\"ResourceType\",currentData.ResourceType);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.OriginatingTimestamp);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.ReqExpirationTimestamp);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.ResExpirationTimestamp);", 
                            "    pm.environment.set(\"EventCategory\",currentData.EventCategory);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.OperationalExecutionTime);", 
                            "    pm.environment.set(\"ResponseType\",currentData.ResponseType);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.ResultPersistence);", 
                            "    pm.environment.set(\"ResultContent\",currentData.ResultContent);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.DeliveryAggregation);", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.GroupRequestIdentifier);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.FilterCriteria);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.DesiredIdentifierResultType);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.TokenRequestIndicator);", 
                            "    pm.environment.set(\"Tokens\",currentData.Tokens);", 
                            "    pm.environment.set(\"TokenIDs\",currentData.TokenIDs);", 
                            "    pm.environment.set(\"RoleIDs\",currentData.RoleIDs);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.LocalTokenIDs);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.ReleaseVersionIndicator);", 
                            "    pm.environment.set(\"VendorInformation\",currentData.VendorInformation);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.GroupRequestTargetMembers);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.AuthorizationSignatureIndicator);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.AuthorizationSignature);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.AuthorizationRelationshipIndicator);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.SemanticQueryIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c65572", 
            "description": "This method retrieves information about a list of hash resources"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?ToAddress={{ToAddress}}&FromId={{FromId}}&Operation={{Operation}}&RequestId={{RequestId}}&ResourceType={{ResourceType}}&OriginatingTimestamp={{OriginatingTimestamp}}&ReqExpirationTimestamp={{ReqExpirationTimestamp}}&ResExpirationTimestamp={{ResExpirationTimestamp}}&EventCategory={{EventCategory}}&OperationalExecutionTime={{OperationalExecutionTime}}&ResponseType={{ResponseType}}&ResultPersistence={{ResultPersistence}}&ResultContent={{ResultContent}}&DeliveryAggregation={{DeliveryAggregation}}&GroupRequestIdentifier={{GroupRequestIdentifier}}&FilterCriteria={{FilterCriteria}}&DesiredIdentifierResultType={{DesiredIdentifierResultType}}&TokenRequestIndicator={{TokenRequestIndicator}}&Tokens={{Tokens}}&TokenIDs={{TokenIDs}}&RoleIDs={{RoleIDs}}&LocalTokenIDs={{LocalTokenIDs}}&ReleaseVersionIndicator={{ReleaseVersionIndicator}}&VendorInformation={{VendorInformation}}&GroupRequestTargetMembers={{GroupRequestTargetMembers}}&AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}&AuthorizationSignature={{AuthorizationSignature}}&AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}&SemanticQueryIndicator={{SemanticQueryIndicator}}", 
            "name": "TC_200", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/4?query=/iot3/example/identity?ToAddress={{ToAddress}}?FromId={{FromId}}?Operation={{Operation}}?RequestId={{RequestId}}?ResourceType={{ResourceType}}?OriginatingTimestamp={{OriginatingTimestamp}}?ReqExpirationTimestamp={{ReqExpirationTimestamp}}?ResExpirationTimestamp={{ResExpirationTimestamp}}?EventCategory={{EventCategory}}?OperationalExecutionTime={{OperationalExecutionTime}}?ResponseType={{ResponseType}}?ResultPersistence={{ResultPersistence}}?ResultContent={{ResultContent}}?DeliveryAggregation={{DeliveryAggregation}}?GroupRequestIdentifier={{GroupRequestIdentifier}}?FilterCriteria={{FilterCriteria}}?DesiredIdentifierResultType={{DesiredIdentifierResultType}}?TokenRequestIndicator={{TokenRequestIndicator}}?Tokens={{Tokens}}?TokenIDs={{TokenIDs}}?RoleIDs={{RoleIDs}}?LocalTokenIDs={{LocalTokenIDs}}?ReleaseVersionIndicator={{ReleaseVersionIndicator}}?VendorInformation={{VendorInformation}}?GroupRequestTargetMembers={{GroupRequestTargetMembers}}?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}?AuthorizationSignature={{AuthorizationSignature}}?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}?SemanticQueryIndicator={{SemanticQueryIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    pm.environment.set(\"Operation\",currentData.Operation);", 
                            "    pm.environment.set(\"RequestId\",currentData.RequestId);", 
                            "    pm.environment.set(\"ResourceType\",currentData.ResourceType);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.OriginatingTimestamp);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.ReqExpirationTimestamp);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.ResExpirationTimestamp);", 
                            "    pm.environment.set(\"EventCategory\",currentData.EventCategory);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.OperationalExecutionTime);", 
                            "    pm.environment.set(\"ResponseType\",currentData.ResponseType);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.ResultPersistence);", 
                            "    pm.environment.set(\"ResultContent\",currentData.ResultContent);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.DeliveryAggregation);", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.GroupRequestIdentifier);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.FilterCriteria);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.DesiredIdentifierResultType);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.TokenRequestIndicator);", 
                            "    pm.environment.set(\"Tokens\",currentData.Tokens);", 
                            "    pm.environment.set(\"TokenIDs\",currentData.TokenIDs);", 
                            "    pm.environment.set(\"RoleIDs\",currentData.RoleIDs);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.LocalTokenIDs);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.ReleaseVersionIndicator);", 
                            "    pm.environment.set(\"VendorInformation\",currentData.VendorInformation);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.GroupRequestTargetMembers);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.AuthorizationSignatureIndicator);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.AuthorizationSignature);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.AuthorizationRelationshipIndicator);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.SemanticQueryIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b513", 
            "description": "This method retrieves information about a list of identity resources"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?ToAddress={{ToAddress}}&FromId={{FromId}}&Operation={{Operation}}&RequestId={{RequestId}}&ResourceType={{ResourceType}}&OriginatingTimestamp={{OriginatingTimestamp}}&ReqExpirationTimestamp={{ReqExpirationTimestamp}}&ResExpirationTimestamp={{ResExpirationTimestamp}}&EventCategory={{EventCategory}}&OperationalExecutionTime={{OperationalExecutionTime}}&ResponseType={{ResponseType}}&ResultPersistence={{ResultPersistence}}&ResultContent={{ResultContent}}&DeliveryAggregation={{DeliveryAggregation}}&GroupRequestIdentifier={{GroupRequestIdentifier}}&FilterCriteria={{FilterCriteria}}&DesiredIdentifierResultType={{DesiredIdentifierResultType}}&TokenRequestIndicator={{TokenRequestIndicator}}&Tokens={{Tokens}}&TokenIDs={{TokenIDs}}&RoleIDs={{RoleIDs}}&LocalTokenIDs={{LocalTokenIDs}}&ReleaseVersionIndicator={{ReleaseVersionIndicator}}&VendorInformation={{VendorInformation}}&GroupRequestTargetMembers={{GroupRequestTargetMembers}}&AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}&AuthorizationSignature={{AuthorizationSignature}}&AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}&SemanticQueryIndicator={{SemanticQueryIndicator}}", 
            "name": "TC_200", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/5?query=/iot3/example/rand?ToAddress={{ToAddress}}?FromId={{FromId}}?Operation={{Operation}}?RequestId={{RequestId}}?ResourceType={{ResourceType}}?OriginatingTimestamp={{OriginatingTimestamp}}?ReqExpirationTimestamp={{ReqExpirationTimestamp}}?ResExpirationTimestamp={{ResExpirationTimestamp}}?EventCategory={{EventCategory}}?OperationalExecutionTime={{OperationalExecutionTime}}?ResponseType={{ResponseType}}?ResultPersistence={{ResultPersistence}}?ResultContent={{ResultContent}}?DeliveryAggregation={{DeliveryAggregation}}?GroupRequestIdentifier={{GroupRequestIdentifier}}?FilterCriteria={{FilterCriteria}}?DesiredIdentifierResultType={{DesiredIdentifierResultType}}?TokenRequestIndicator={{TokenRequestIndicator}}?Tokens={{Tokens}}?TokenIDs={{TokenIDs}}?RoleIDs={{RoleIDs}}?LocalTokenIDs={{LocalTokenIDs}}?ReleaseVersionIndicator={{ReleaseVersionIndicator}}?VendorInformation={{VendorInformation}}?GroupRequestTargetMembers={{GroupRequestTargetMembers}}?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}?AuthorizationSignature={{AuthorizationSignature}}?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}?SemanticQueryIndicator={{SemanticQueryIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    pm.environment.set(\"Operation\",currentData.Operation);", 
                            "    pm.environment.set(\"RequestId\",currentData.RequestId);", 
                            "    pm.environment.set(\"ResourceType\",currentData.ResourceType);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.OriginatingTimestamp);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.ReqExpirationTimestamp);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.ResExpirationTimestamp);", 
                            "    pm.environment.set(\"EventCategory\",currentData.EventCategory);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.OperationalExecutionTime);", 
                            "    pm.environment.set(\"ResponseType\",currentData.ResponseType);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.ResultPersistence);", 
                            "    pm.environment.set(\"ResultContent\",currentData.ResultContent);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.DeliveryAggregation);", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.GroupRequestIdentifier);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.FilterCriteria);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.DesiredIdentifierResultType);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.TokenRequestIndicator);", 
                            "    pm.environment.set(\"Tokens\",currentData.Tokens);", 
                            "    pm.environment.set(\"TokenIDs\",currentData.TokenIDs);", 
                            "    pm.environment.set(\"RoleIDs\",currentData.RoleIDs);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.LocalTokenIDs);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.ReleaseVersionIndicator);", 
                            "    pm.environment.set(\"VendorInformation\",currentData.VendorInformation);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.GroupRequestTargetMembers);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.AuthorizationSignatureIndicator);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.AuthorizationSignature);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.AuthorizationRelationshipIndicator);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.SemanticQueryIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca24", 
            "description": "This method retrieves information about a list of rand resources"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?ToAddress={{ToAddress}}&FromId={{FromId}}&Operation={{Operation}}&RequestId={{RequestId}}&ResourceType={{ResourceType}}&OriginatingTimestamp={{OriginatingTimestamp}}&ReqExpirationTimestamp={{ReqExpirationTimestamp}}&ResExpirationTimestamp={{ResExpirationTimestamp}}&EventCategory={{EventCategory}}&OperationalExecutionTime={{OperationalExecutionTime}}&ResponseType={{ResponseType}}&ResultPersistence={{ResultPersistence}}&ResultContent={{ResultContent}}&DeliveryAggregation={{DeliveryAggregation}}&GroupRequestIdentifier={{GroupRequestIdentifier}}&FilterCriteria={{FilterCriteria}}&DesiredIdentifierResultType={{DesiredIdentifierResultType}}&TokenRequestIndicator={{TokenRequestIndicator}}&Tokens={{Tokens}}&TokenIDs={{TokenIDs}}&RoleIDs={{RoleIDs}}&LocalTokenIDs={{LocalTokenIDs}}&ReleaseVersionIndicator={{ReleaseVersionIndicator}}&VendorInformation={{VendorInformation}}&GroupRequestTargetMembers={{GroupRequestTargetMembers}}&AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}&AuthorizationSignature={{AuthorizationSignature}}&AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}&SemanticQueryIndicator={{SemanticQueryIndicator}}", 
            "name": "TC_200", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/6?query=/iot3/example/cipher?ToAddress={{ToAddress}}?FromId={{FromId}}?Operation={{Operation}}?RequestId={{RequestId}}?ResourceType={{ResourceType}}?OriginatingTimestamp={{OriginatingTimestamp}}?ReqExpirationTimestamp={{ReqExpirationTimestamp}}?ResExpirationTimestamp={{ResExpirationTimestamp}}?EventCategory={{EventCategory}}?OperationalExecutionTime={{OperationalExecutionTime}}?ResponseType={{ResponseType}}?ResultPersistence={{ResultPersistence}}?ResultContent={{ResultContent}}?DeliveryAggregation={{DeliveryAggregation}}?GroupRequestIdentifier={{GroupRequestIdentifier}}?FilterCriteria={{FilterCriteria}}?DesiredIdentifierResultType={{DesiredIdentifierResultType}}?TokenRequestIndicator={{TokenRequestIndicator}}?Tokens={{Tokens}}?TokenIDs={{TokenIDs}}?RoleIDs={{RoleIDs}}?LocalTokenIDs={{LocalTokenIDs}}?ReleaseVersionIndicator={{ReleaseVersionIndicator}}?VendorInformation={{VendorInformation}}?GroupRequestTargetMembers={{GroupRequestTargetMembers}}?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}?AuthorizationSignature={{AuthorizationSignature}}?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}?SemanticQueryIndicator={{SemanticQueryIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    pm.environment.set(\"Operation\",currentData.Operation);", 
                            "    pm.environment.set(\"RequestId\",currentData.RequestId);", 
                            "    pm.environment.set(\"ResourceType\",currentData.ResourceType);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.OriginatingTimestamp);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.ReqExpirationTimestamp);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.ResExpirationTimestamp);", 
                            "    pm.environment.set(\"EventCategory\",currentData.EventCategory);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.OperationalExecutionTime);", 
                            "    pm.environment.set(\"ResponseType\",currentData.ResponseType);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.ResultPersistence);", 
                            "    pm.environment.set(\"ResultContent\",currentData.ResultContent);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.DeliveryAggregation);", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.GroupRequestIdentifier);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.FilterCriteria);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.DesiredIdentifierResultType);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.TokenRequestIndicator);", 
                            "    pm.environment.set(\"Tokens\",currentData.Tokens);", 
                            "    pm.environment.set(\"TokenIDs\",currentData.TokenIDs);", 
                            "    pm.environment.set(\"RoleIDs\",currentData.RoleIDs);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.LocalTokenIDs);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.ReleaseVersionIndicator);", 
                            "    pm.environment.set(\"VendorInformation\",currentData.VendorInformation);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.GroupRequestTargetMembers);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.AuthorizationSignatureIndicator);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.AuthorizationSignature);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.AuthorizationRelationshipIndicator);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.SemanticQueryIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c5", 
            "description": "This method retrieves information about a list of cipher resources"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?ToAddress={{ToAddress}}&FromId={{FromId}}&Operation={{Operation}}&RequestId={{RequestId}}&ResourceType={{ResourceType}}&OriginatingTimestamp={{OriginatingTimestamp}}&ReqExpirationTimestamp={{ReqExpirationTimestamp}}&ResExpirationTimestamp={{ResExpirationTimestamp}}&EventCategory={{EventCategory}}&OperationalExecutionTime={{OperationalExecutionTime}}&ResponseType={{ResponseType}}&ResultPersistence={{ResultPersistence}}&ResultContent={{ResultContent}}&DeliveryAggregation={{DeliveryAggregation}}&GroupRequestIdentifier={{GroupRequestIdentifier}}&FilterCriteria={{FilterCriteria}}&DesiredIdentifierResultType={{DesiredIdentifierResultType}}&TokenRequestIndicator={{TokenRequestIndicator}}&Tokens={{Tokens}}&TokenIDs={{TokenIDs}}&RoleIDs={{RoleIDs}}&LocalTokenIDs={{LocalTokenIDs}}&ReleaseVersionIndicator={{ReleaseVersionIndicator}}&VendorInformation={{VendorInformation}}&GroupRequestTargetMembers={{GroupRequestTargetMembers}}&AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}&AuthorizationSignature={{AuthorizationSignature}}&AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}&SemanticQueryIndicator={{SemanticQueryIndicator}}", 
            "name": "TC_200", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/7?query=/iot3/example/connectionInstance?ToAddress={{ToAddress}}?FromId={{FromId}}?Operation={{Operation}}?RequestId={{RequestId}}?ResourceType={{ResourceType}}?OriginatingTimestamp={{OriginatingTimestamp}}?ReqExpirationTimestamp={{ReqExpirationTimestamp}}?ResExpirationTimestamp={{ResExpirationTimestamp}}?EventCategory={{EventCategory}}?OperationalExecutionTime={{OperationalExecutionTime}}?ResponseType={{ResponseType}}?ResultPersistence={{ResultPersistence}}?ResultContent={{ResultContent}}?DeliveryAggregation={{DeliveryAggregation}}?GroupRequestIdentifier={{GroupRequestIdentifier}}?FilterCriteria={{FilterCriteria}}?DesiredIdentifierResultType={{DesiredIdentifierResultType}}?TokenRequestIndicator={{TokenRequestIndicator}}?Tokens={{Tokens}}?TokenIDs={{TokenIDs}}?RoleIDs={{RoleIDs}}?LocalTokenIDs={{LocalTokenIDs}}?ReleaseVersionIndicator={{ReleaseVersionIndicator}}?VendorInformation={{VendorInformation}}?GroupRequestTargetMembers={{GroupRequestTargetMembers}}?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}?AuthorizationSignature={{AuthorizationSignature}}?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}?SemanticQueryIndicator={{SemanticQueryIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    pm.environment.set(\"Operation\",currentData.Operation);", 
                            "    pm.environment.set(\"RequestId\",currentData.RequestId);", 
                            "    pm.environment.set(\"ResourceType\",currentData.ResourceType);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.OriginatingTimestamp);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.ReqExpirationTimestamp);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.ResExpirationTimestamp);", 
                            "    pm.environment.set(\"EventCategory\",currentData.EventCategory);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.OperationalExecutionTime);", 
                            "    pm.environment.set(\"ResponseType\",currentData.ResponseType);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.ResultPersistence);", 
                            "    pm.environment.set(\"ResultContent\",currentData.ResultContent);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.DeliveryAggregation);", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.GroupRequestIdentifier);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.FilterCriteria);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.DesiredIdentifierResultType);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.TokenRequestIndicator);", 
                            "    pm.environment.set(\"Tokens\",currentData.Tokens);", 
                            "    pm.environment.set(\"TokenIDs\",currentData.TokenIDs);", 
                            "    pm.environment.set(\"RoleIDs\",currentData.RoleIDs);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.LocalTokenIDs);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.ReleaseVersionIndicator);", 
                            "    pm.environment.set(\"VendorInformation\",currentData.VendorInformation);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.GroupRequestTargetMembers);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.AuthorizationSignatureIndicator);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.AuthorizationSignature);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.AuthorizationRelationshipIndicator);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.SemanticQueryIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d6", 
            "description": "This method retrieves information about a list of connectionInstance resources"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?ToAddress={{ToAddress}}&FromId={{FromId}}&Operation={{Operation}}&RequestId={{RequestId}}&ResourceType={{ResourceType}}&OriginatingTimestamp={{OriginatingTimestamp}}&ReqExpirationTimestamp={{ReqExpirationTimestamp}}&ResExpirationTimestamp={{ResExpirationTimestamp}}&EventCategory={{EventCategory}}&OperationalExecutionTime={{OperationalExecutionTime}}&ResponseType={{ResponseType}}&ResultPersistence={{ResultPersistence}}&ResultContent={{ResultContent}}&DeliveryAggregation={{DeliveryAggregation}}&GroupRequestIdentifier={{GroupRequestIdentifier}}&FilterCriteria={{FilterCriteria}}&DesiredIdentifierResultType={{DesiredIdentifierResultType}}&TokenRequestIndicator={{TokenRequestIndicator}}&Tokens={{Tokens}}&TokenIDs={{TokenIDs}}&RoleIDs={{RoleIDs}}&LocalTokenIDs={{LocalTokenIDs}}&ReleaseVersionIndicator={{ReleaseVersionIndicator}}&VendorInformation={{VendorInformation}}&GroupRequestTargetMembers={{GroupRequestTargetMembers}}&AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}&AuthorizationSignature={{AuthorizationSignature}}&AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}&SemanticQueryIndicator={{SemanticQueryIndicator}}", 
            "name": "TC_200", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/8?query=/iot3/example/signature?ToAddress={{ToAddress}}?FromId={{FromId}}?Operation={{Operation}}?RequestId={{RequestId}}?ResourceType={{ResourceType}}?OriginatingTimestamp={{OriginatingTimestamp}}?ReqExpirationTimestamp={{ReqExpirationTimestamp}}?ResExpirationTimestamp={{ResExpirationTimestamp}}?EventCategory={{EventCategory}}?OperationalExecutionTime={{OperationalExecutionTime}}?ResponseType={{ResponseType}}?ResultPersistence={{ResultPersistence}}?ResultContent={{ResultContent}}?DeliveryAggregation={{DeliveryAggregation}}?GroupRequestIdentifier={{GroupRequestIdentifier}}?FilterCriteria={{FilterCriteria}}?DesiredIdentifierResultType={{DesiredIdentifierResultType}}?TokenRequestIndicator={{TokenRequestIndicator}}?Tokens={{Tokens}}?TokenIDs={{TokenIDs}}?RoleIDs={{RoleIDs}}?LocalTokenIDs={{LocalTokenIDs}}?ReleaseVersionIndicator={{ReleaseVersionIndicator}}?VendorInformation={{VendorInformation}}?GroupRequestTargetMembers={{GroupRequestTargetMembers}}?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}?AuthorizationSignature={{AuthorizationSignature}}?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}?SemanticQueryIndicator={{SemanticQueryIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    pm.environment.set(\"Operation\",currentData.Operation);", 
                            "    pm.environment.set(\"RequestId\",currentData.RequestId);", 
                            "    pm.environment.set(\"ResourceType\",currentData.ResourceType);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.OriginatingTimestamp);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.ReqExpirationTimestamp);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.ResExpirationTimestamp);", 
                            "    pm.environment.set(\"EventCategory\",currentData.EventCategory);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.OperationalExecutionTime);", 
                            "    pm.environment.set(\"ResponseType\",currentData.ResponseType);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.ResultPersistence);", 
                            "    pm.environment.set(\"ResultContent\",currentData.ResultContent);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.DeliveryAggregation);", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.GroupRequestIdentifier);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.FilterCriteria);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.DesiredIdentifierResultType);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.TokenRequestIndicator);", 
                            "    pm.environment.set(\"Tokens\",currentData.Tokens);", 
                            "    pm.environment.set(\"TokenIDs\",currentData.TokenIDs);", 
                            "    pm.environment.set(\"RoleIDs\",currentData.RoleIDs);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.LocalTokenIDs);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.ReleaseVersionIndicator);", 
                            "    pm.environment.set(\"VendorInformation\",currentData.VendorInformation);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.GroupRequestTargetMembers);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.AuthorizationSignatureIndicator);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.AuthorizationSignature);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.AuthorizationRelationshipIndicator);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.SemanticQueryIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa7", 
            "description": "This method retrieves information about a list of signature resources"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of sensitiveDataObject resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/sensitiveDataObject?ToAddress={{ToAddress}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveDataObjectInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"labels\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['labels']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['resourceName']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/9?query=/iot3/example/sensitiveDataObject?ToAddress={{ToAddress}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432541, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "5c0749c0-cc94-44b3-b92c-6bab6eb2ea4508", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of sensitiveDataObject resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/sensitiveDataObject?FromId={{FromId}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveDataObjectInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"labels\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['labels']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['resourceName']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/10?query=/iot3/example/sensitiveDataObject?FromId={{FromId}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432541, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "5c0749c0-cc94-44b3-b92c-6bab6eb2ea4519", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of sensitiveDataObject resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/sensitiveDataObject", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveDataObjectInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"labels\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['labels']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['resourceName']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/11?query=/iot3/example/sensitiveDataObject',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432541, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "5c0749c0-cc94-44b3-b92c-6bab6eb2ea45210", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?ToAddress={{ToAddress}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/12?query=/iot3/example/secureConnection?ToAddress={{ToAddress}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c011", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?FromId={{FromId}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/13?query=/iot3/example/secureConnection?FromId={{FromId}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c112", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?Operation={{Operation}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/14?query=/iot3/example/secureConnection?Operation={{Operation}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"Operation\",currentData.Operation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c213", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?RequestId={{RequestId}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/15?query=/iot3/example/secureConnection?RequestId={{RequestId}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"RequestId\",currentData.RequestId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c314", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?ResourceType={{ResourceType}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/16?query=/iot3/example/secureConnection?ResourceType={{ResourceType}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResourceType\",currentData.ResourceType);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c415", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?OriginatingTimestamp={{OriginatingTimestamp}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/17?query=/iot3/example/secureConnection?OriginatingTimestamp={{OriginatingTimestamp}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.OriginatingTimestamp);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c516", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?ReqExpirationTimestamp={{ReqExpirationTimestamp}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/18?query=/iot3/example/secureConnection?ReqExpirationTimestamp={{ReqExpirationTimestamp}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.ReqExpirationTimestamp);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c617", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?ResExpirationTimestamp={{ResExpirationTimestamp}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/19?query=/iot3/example/secureConnection?ResExpirationTimestamp={{ResExpirationTimestamp}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.ResExpirationTimestamp);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c718", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?EventCategory={{EventCategory}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/20?query=/iot3/example/secureConnection?EventCategory={{EventCategory}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"EventCategory\",currentData.EventCategory);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c819", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?OperationalExecutionTime={{OperationalExecutionTime}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/21?query=/iot3/example/secureConnection?OperationalExecutionTime={{OperationalExecutionTime}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.OperationalExecutionTime);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c920", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?ResponseType={{ResponseType}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/22?query=/iot3/example/secureConnection?ResponseType={{ResponseType}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResponseType\",currentData.ResponseType);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c1021", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?ResultPersistence={{ResultPersistence}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/23?query=/iot3/example/secureConnection?ResultPersistence={{ResultPersistence}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.ResultPersistence);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c1122", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?ResultContent={{ResultContent}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/24?query=/iot3/example/secureConnection?ResultContent={{ResultContent}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResultContent\",currentData.ResultContent);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c1223", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?DeliveryAggregation={{DeliveryAggregation}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/25?query=/iot3/example/secureConnection?DeliveryAggregation={{DeliveryAggregation}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.DeliveryAggregation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c1324", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?GroupRequestIdentifier={{GroupRequestIdentifier}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/26?query=/iot3/example/secureConnection?GroupRequestIdentifier={{GroupRequestIdentifier}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.GroupRequestIdentifier);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c1425", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?FilterCriteria={{FilterCriteria}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/27?query=/iot3/example/secureConnection?FilterCriteria={{FilterCriteria}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.FilterCriteria);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c1526", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?DesiredIdentifierResultType={{DesiredIdentifierResultType}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/28?query=/iot3/example/secureConnection?DesiredIdentifierResultType={{DesiredIdentifierResultType}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.DesiredIdentifierResultType);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c1627", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?TokenRequestIndicator={{TokenRequestIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/29?query=/iot3/example/secureConnection?TokenRequestIndicator={{TokenRequestIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.TokenRequestIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c1728", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?Tokens={{Tokens}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/30?query=/iot3/example/secureConnection?Tokens={{Tokens}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"Tokens\",currentData.Tokens);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c1829", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?TokenIDs={{TokenIDs}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/31?query=/iot3/example/secureConnection?TokenIDs={{TokenIDs}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"TokenIDs\",currentData.TokenIDs);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c1930", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?RoleIDs={{RoleIDs}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/32?query=/iot3/example/secureConnection?RoleIDs={{RoleIDs}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"RoleIDs\",currentData.RoleIDs);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c2031", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?LocalTokenIDs={{LocalTokenIDs}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/33?query=/iot3/example/secureConnection?LocalTokenIDs={{LocalTokenIDs}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.LocalTokenIDs);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c2132", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?ReleaseVersionIndicator={{ReleaseVersionIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/34?query=/iot3/example/secureConnection?ReleaseVersionIndicator={{ReleaseVersionIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.ReleaseVersionIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c2233", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?VendorInformation={{VendorInformation}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/35?query=/iot3/example/secureConnection?VendorInformation={{VendorInformation}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"VendorInformation\",currentData.VendorInformation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c2334", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?GroupRequestTargetMembers={{GroupRequestTargetMembers}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/36?query=/iot3/example/secureConnection?GroupRequestTargetMembers={{GroupRequestTargetMembers}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.GroupRequestTargetMembers);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c2435", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/37?query=/iot3/example/secureConnection?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.AuthorizationSignatureIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c2536", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?AuthorizationSignature={{AuthorizationSignature}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/38?query=/iot3/example/secureConnection?AuthorizationSignature={{AuthorizationSignature}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.AuthorizationSignature);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c2637", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/39?query=/iot3/example/secureConnection?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.AuthorizationRelationshipIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c2738", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?SemanticQueryIndicator={{SemanticQueryIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/40?query=/iot3/example/secureConnection?SemanticQueryIndicator={{SemanticQueryIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.SemanticQueryIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c2839", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of secureConnection resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/41?query=/iot3/example/secureConnection',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "66c0bba8-b2e8-47ac-8623-378aa676680c2940", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?ToAddress={{ToAddress}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/42?query=/iot3/example/hash?ToAddress={{ToAddress}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c6557041", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?FromId={{FromId}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/43?query=/iot3/example/hash?FromId={{FromId}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c6557142", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?Operation={{Operation}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/44?query=/iot3/example/hash?Operation={{Operation}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"Operation\",currentData.Operation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c6557243", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?RequestId={{RequestId}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/45?query=/iot3/example/hash?RequestId={{RequestId}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"RequestId\",currentData.RequestId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c6557344", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?ResourceType={{ResourceType}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/46?query=/iot3/example/hash?ResourceType={{ResourceType}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResourceType\",currentData.ResourceType);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c6557445", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?OriginatingTimestamp={{OriginatingTimestamp}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/47?query=/iot3/example/hash?OriginatingTimestamp={{OriginatingTimestamp}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.OriginatingTimestamp);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c6557546", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?ReqExpirationTimestamp={{ReqExpirationTimestamp}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/48?query=/iot3/example/hash?ReqExpirationTimestamp={{ReqExpirationTimestamp}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.ReqExpirationTimestamp);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c6557647", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?ResExpirationTimestamp={{ResExpirationTimestamp}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/49?query=/iot3/example/hash?ResExpirationTimestamp={{ResExpirationTimestamp}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.ResExpirationTimestamp);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c6557748", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?EventCategory={{EventCategory}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/50?query=/iot3/example/hash?EventCategory={{EventCategory}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"EventCategory\",currentData.EventCategory);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c6557849", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?OperationalExecutionTime={{OperationalExecutionTime}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/51?query=/iot3/example/hash?OperationalExecutionTime={{OperationalExecutionTime}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.OperationalExecutionTime);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c6557950", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?ResponseType={{ResponseType}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/52?query=/iot3/example/hash?ResponseType={{ResponseType}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResponseType\",currentData.ResponseType);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c65571051", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?ResultPersistence={{ResultPersistence}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/53?query=/iot3/example/hash?ResultPersistence={{ResultPersistence}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.ResultPersistence);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c65571152", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?ResultContent={{ResultContent}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/54?query=/iot3/example/hash?ResultContent={{ResultContent}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResultContent\",currentData.ResultContent);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c65571253", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?DeliveryAggregation={{DeliveryAggregation}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/55?query=/iot3/example/hash?DeliveryAggregation={{DeliveryAggregation}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.DeliveryAggregation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c65571354", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?GroupRequestIdentifier={{GroupRequestIdentifier}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/56?query=/iot3/example/hash?GroupRequestIdentifier={{GroupRequestIdentifier}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.GroupRequestIdentifier);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c65571455", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?FilterCriteria={{FilterCriteria}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/57?query=/iot3/example/hash?FilterCriteria={{FilterCriteria}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.FilterCriteria);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c65571556", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?DesiredIdentifierResultType={{DesiredIdentifierResultType}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/58?query=/iot3/example/hash?DesiredIdentifierResultType={{DesiredIdentifierResultType}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.DesiredIdentifierResultType);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c65571657", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?TokenRequestIndicator={{TokenRequestIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/59?query=/iot3/example/hash?TokenRequestIndicator={{TokenRequestIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.TokenRequestIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c65571758", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?Tokens={{Tokens}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/60?query=/iot3/example/hash?Tokens={{Tokens}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"Tokens\",currentData.Tokens);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c65571859", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?TokenIDs={{TokenIDs}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/61?query=/iot3/example/hash?TokenIDs={{TokenIDs}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"TokenIDs\",currentData.TokenIDs);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c65571960", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?RoleIDs={{RoleIDs}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/62?query=/iot3/example/hash?RoleIDs={{RoleIDs}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"RoleIDs\",currentData.RoleIDs);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c65572061", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?LocalTokenIDs={{LocalTokenIDs}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/63?query=/iot3/example/hash?LocalTokenIDs={{LocalTokenIDs}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.LocalTokenIDs);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c65572162", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?ReleaseVersionIndicator={{ReleaseVersionIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/64?query=/iot3/example/hash?ReleaseVersionIndicator={{ReleaseVersionIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.ReleaseVersionIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c65572263", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?VendorInformation={{VendorInformation}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/65?query=/iot3/example/hash?VendorInformation={{VendorInformation}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"VendorInformation\",currentData.VendorInformation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c65572364", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?GroupRequestTargetMembers={{GroupRequestTargetMembers}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/66?query=/iot3/example/hash?GroupRequestTargetMembers={{GroupRequestTargetMembers}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.GroupRequestTargetMembers);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c65572465", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/67?query=/iot3/example/hash?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.AuthorizationSignatureIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c65572566", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?AuthorizationSignature={{AuthorizationSignature}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/68?query=/iot3/example/hash?AuthorizationSignature={{AuthorizationSignature}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.AuthorizationSignature);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c65572667", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/69?query=/iot3/example/hash?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.AuthorizationRelationshipIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c65572768", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?SemanticQueryIndicator={{SemanticQueryIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/70?query=/iot3/example/hash?SemanticQueryIndicator={{SemanticQueryIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.SemanticQueryIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c65572869", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of hash resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/71?query=/iot3/example/hash',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "0ca30268-672b-4dd5-bd12-fc3d1c6c65572970", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?ToAddress={{ToAddress}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/72?query=/iot3/example/identity?ToAddress={{ToAddress}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b51071", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?FromId={{FromId}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/73?query=/iot3/example/identity?FromId={{FromId}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b51172", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?Operation={{Operation}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/74?query=/iot3/example/identity?Operation={{Operation}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"Operation\",currentData.Operation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b51273", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?RequestId={{RequestId}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/75?query=/iot3/example/identity?RequestId={{RequestId}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"RequestId\",currentData.RequestId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b51374", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?ResourceType={{ResourceType}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/76?query=/iot3/example/identity?ResourceType={{ResourceType}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResourceType\",currentData.ResourceType);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b51475", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?OriginatingTimestamp={{OriginatingTimestamp}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/77?query=/iot3/example/identity?OriginatingTimestamp={{OriginatingTimestamp}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.OriginatingTimestamp);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b51576", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?ReqExpirationTimestamp={{ReqExpirationTimestamp}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/78?query=/iot3/example/identity?ReqExpirationTimestamp={{ReqExpirationTimestamp}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.ReqExpirationTimestamp);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b51677", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?ResExpirationTimestamp={{ResExpirationTimestamp}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/79?query=/iot3/example/identity?ResExpirationTimestamp={{ResExpirationTimestamp}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.ResExpirationTimestamp);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b51778", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?EventCategory={{EventCategory}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/80?query=/iot3/example/identity?EventCategory={{EventCategory}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"EventCategory\",currentData.EventCategory);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b51879", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?OperationalExecutionTime={{OperationalExecutionTime}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/81?query=/iot3/example/identity?OperationalExecutionTime={{OperationalExecutionTime}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.OperationalExecutionTime);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b51980", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?ResponseType={{ResponseType}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/82?query=/iot3/example/identity?ResponseType={{ResponseType}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResponseType\",currentData.ResponseType);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b511081", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?ResultPersistence={{ResultPersistence}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/83?query=/iot3/example/identity?ResultPersistence={{ResultPersistence}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.ResultPersistence);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b511182", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?ResultContent={{ResultContent}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/84?query=/iot3/example/identity?ResultContent={{ResultContent}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResultContent\",currentData.ResultContent);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b511283", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?DeliveryAggregation={{DeliveryAggregation}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/85?query=/iot3/example/identity?DeliveryAggregation={{DeliveryAggregation}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.DeliveryAggregation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b511384", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?GroupRequestIdentifier={{GroupRequestIdentifier}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/86?query=/iot3/example/identity?GroupRequestIdentifier={{GroupRequestIdentifier}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.GroupRequestIdentifier);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b511485", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?FilterCriteria={{FilterCriteria}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/87?query=/iot3/example/identity?FilterCriteria={{FilterCriteria}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.FilterCriteria);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b511586", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?DesiredIdentifierResultType={{DesiredIdentifierResultType}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/88?query=/iot3/example/identity?DesiredIdentifierResultType={{DesiredIdentifierResultType}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.DesiredIdentifierResultType);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b511687", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?TokenRequestIndicator={{TokenRequestIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/89?query=/iot3/example/identity?TokenRequestIndicator={{TokenRequestIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.TokenRequestIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b511788", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?Tokens={{Tokens}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/90?query=/iot3/example/identity?Tokens={{Tokens}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"Tokens\",currentData.Tokens);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b511889", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?TokenIDs={{TokenIDs}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/91?query=/iot3/example/identity?TokenIDs={{TokenIDs}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"TokenIDs\",currentData.TokenIDs);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b511990", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?RoleIDs={{RoleIDs}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/92?query=/iot3/example/identity?RoleIDs={{RoleIDs}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"RoleIDs\",currentData.RoleIDs);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b512091", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?LocalTokenIDs={{LocalTokenIDs}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/93?query=/iot3/example/identity?LocalTokenIDs={{LocalTokenIDs}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.LocalTokenIDs);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b512192", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?ReleaseVersionIndicator={{ReleaseVersionIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/94?query=/iot3/example/identity?ReleaseVersionIndicator={{ReleaseVersionIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.ReleaseVersionIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b512293", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?VendorInformation={{VendorInformation}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/95?query=/iot3/example/identity?VendorInformation={{VendorInformation}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"VendorInformation\",currentData.VendorInformation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b512394", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?GroupRequestTargetMembers={{GroupRequestTargetMembers}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/96?query=/iot3/example/identity?GroupRequestTargetMembers={{GroupRequestTargetMembers}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.GroupRequestTargetMembers);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b512495", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/97?query=/iot3/example/identity?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.AuthorizationSignatureIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b512596", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?AuthorizationSignature={{AuthorizationSignature}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/98?query=/iot3/example/identity?AuthorizationSignature={{AuthorizationSignature}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.AuthorizationSignature);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b512697", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/99?query=/iot3/example/identity?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.AuthorizationRelationshipIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b512798", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?SemanticQueryIndicator={{SemanticQueryIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/100?query=/iot3/example/identity?SemanticQueryIndicator={{SemanticQueryIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.SemanticQueryIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b512899", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of identity resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/101?query=/iot3/example/identity',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "50d4e407-ad03-4b2f-ad51-343e16a32b5129100", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?ToAddress={{ToAddress}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/102?query=/iot3/example/rand?ToAddress={{ToAddress}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca20101", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?FromId={{FromId}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/103?query=/iot3/example/rand?FromId={{FromId}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca21102", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?Operation={{Operation}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/104?query=/iot3/example/rand?Operation={{Operation}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"Operation\",currentData.Operation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca22103", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?RequestId={{RequestId}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/105?query=/iot3/example/rand?RequestId={{RequestId}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"RequestId\",currentData.RequestId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca23104", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?ResourceType={{ResourceType}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/106?query=/iot3/example/rand?ResourceType={{ResourceType}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResourceType\",currentData.ResourceType);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca24105", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?OriginatingTimestamp={{OriginatingTimestamp}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/107?query=/iot3/example/rand?OriginatingTimestamp={{OriginatingTimestamp}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.OriginatingTimestamp);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca25106", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?ReqExpirationTimestamp={{ReqExpirationTimestamp}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/108?query=/iot3/example/rand?ReqExpirationTimestamp={{ReqExpirationTimestamp}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.ReqExpirationTimestamp);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca26107", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?ResExpirationTimestamp={{ResExpirationTimestamp}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/109?query=/iot3/example/rand?ResExpirationTimestamp={{ResExpirationTimestamp}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.ResExpirationTimestamp);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca27108", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?EventCategory={{EventCategory}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/110?query=/iot3/example/rand?EventCategory={{EventCategory}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"EventCategory\",currentData.EventCategory);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca28109", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?OperationalExecutionTime={{OperationalExecutionTime}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/111?query=/iot3/example/rand?OperationalExecutionTime={{OperationalExecutionTime}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.OperationalExecutionTime);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca29110", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?ResponseType={{ResponseType}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/112?query=/iot3/example/rand?ResponseType={{ResponseType}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResponseType\",currentData.ResponseType);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca210111", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?ResultPersistence={{ResultPersistence}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/113?query=/iot3/example/rand?ResultPersistence={{ResultPersistence}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.ResultPersistence);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca211112", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?ResultContent={{ResultContent}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/114?query=/iot3/example/rand?ResultContent={{ResultContent}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResultContent\",currentData.ResultContent);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca212113", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?DeliveryAggregation={{DeliveryAggregation}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/115?query=/iot3/example/rand?DeliveryAggregation={{DeliveryAggregation}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.DeliveryAggregation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca213114", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?GroupRequestIdentifier={{GroupRequestIdentifier}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/116?query=/iot3/example/rand?GroupRequestIdentifier={{GroupRequestIdentifier}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.GroupRequestIdentifier);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca214115", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?FilterCriteria={{FilterCriteria}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/117?query=/iot3/example/rand?FilterCriteria={{FilterCriteria}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.FilterCriteria);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca215116", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?DesiredIdentifierResultType={{DesiredIdentifierResultType}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/118?query=/iot3/example/rand?DesiredIdentifierResultType={{DesiredIdentifierResultType}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.DesiredIdentifierResultType);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca216117", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?TokenRequestIndicator={{TokenRequestIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/119?query=/iot3/example/rand?TokenRequestIndicator={{TokenRequestIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.TokenRequestIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca217118", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?Tokens={{Tokens}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/120?query=/iot3/example/rand?Tokens={{Tokens}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"Tokens\",currentData.Tokens);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca218119", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?TokenIDs={{TokenIDs}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/121?query=/iot3/example/rand?TokenIDs={{TokenIDs}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"TokenIDs\",currentData.TokenIDs);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca219120", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?RoleIDs={{RoleIDs}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/122?query=/iot3/example/rand?RoleIDs={{RoleIDs}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"RoleIDs\",currentData.RoleIDs);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca220121", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?LocalTokenIDs={{LocalTokenIDs}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/123?query=/iot3/example/rand?LocalTokenIDs={{LocalTokenIDs}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.LocalTokenIDs);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca221122", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?ReleaseVersionIndicator={{ReleaseVersionIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/124?query=/iot3/example/rand?ReleaseVersionIndicator={{ReleaseVersionIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.ReleaseVersionIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca222123", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?VendorInformation={{VendorInformation}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/125?query=/iot3/example/rand?VendorInformation={{VendorInformation}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"VendorInformation\",currentData.VendorInformation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca223124", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?GroupRequestTargetMembers={{GroupRequestTargetMembers}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/126?query=/iot3/example/rand?GroupRequestTargetMembers={{GroupRequestTargetMembers}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.GroupRequestTargetMembers);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca224125", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/127?query=/iot3/example/rand?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.AuthorizationSignatureIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca225126", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?AuthorizationSignature={{AuthorizationSignature}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/128?query=/iot3/example/rand?AuthorizationSignature={{AuthorizationSignature}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.AuthorizationSignature);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca226127", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/129?query=/iot3/example/rand?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.AuthorizationRelationshipIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca227128", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?SemanticQueryIndicator={{SemanticQueryIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/130?query=/iot3/example/rand?SemanticQueryIndicator={{SemanticQueryIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.SemanticQueryIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca228129", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of rand resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/131?query=/iot3/example/rand',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "004f2cd9-4344-40b7-aa83-824f1080fca229130", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?ToAddress={{ToAddress}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/132?query=/iot3/example/cipher?ToAddress={{ToAddress}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c0131", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?FromId={{FromId}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/133?query=/iot3/example/cipher?FromId={{FromId}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c1132", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?Operation={{Operation}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/134?query=/iot3/example/cipher?Operation={{Operation}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"Operation\",currentData.Operation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c2133", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?RequestId={{RequestId}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/135?query=/iot3/example/cipher?RequestId={{RequestId}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"RequestId\",currentData.RequestId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c3134", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?ResourceType={{ResourceType}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/136?query=/iot3/example/cipher?ResourceType={{ResourceType}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResourceType\",currentData.ResourceType);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c4135", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?OriginatingTimestamp={{OriginatingTimestamp}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/137?query=/iot3/example/cipher?OriginatingTimestamp={{OriginatingTimestamp}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.OriginatingTimestamp);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c5136", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?ReqExpirationTimestamp={{ReqExpirationTimestamp}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/138?query=/iot3/example/cipher?ReqExpirationTimestamp={{ReqExpirationTimestamp}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.ReqExpirationTimestamp);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c6137", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?ResExpirationTimestamp={{ResExpirationTimestamp}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/139?query=/iot3/example/cipher?ResExpirationTimestamp={{ResExpirationTimestamp}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.ResExpirationTimestamp);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c7138", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?EventCategory={{EventCategory}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/140?query=/iot3/example/cipher?EventCategory={{EventCategory}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"EventCategory\",currentData.EventCategory);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c8139", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?OperationalExecutionTime={{OperationalExecutionTime}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/141?query=/iot3/example/cipher?OperationalExecutionTime={{OperationalExecutionTime}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.OperationalExecutionTime);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c9140", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?ResponseType={{ResponseType}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/142?query=/iot3/example/cipher?ResponseType={{ResponseType}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResponseType\",currentData.ResponseType);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c10141", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?ResultPersistence={{ResultPersistence}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/143?query=/iot3/example/cipher?ResultPersistence={{ResultPersistence}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.ResultPersistence);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c11142", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?ResultContent={{ResultContent}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/144?query=/iot3/example/cipher?ResultContent={{ResultContent}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResultContent\",currentData.ResultContent);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c12143", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?DeliveryAggregation={{DeliveryAggregation}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/145?query=/iot3/example/cipher?DeliveryAggregation={{DeliveryAggregation}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.DeliveryAggregation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c13144", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?GroupRequestIdentifier={{GroupRequestIdentifier}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/146?query=/iot3/example/cipher?GroupRequestIdentifier={{GroupRequestIdentifier}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.GroupRequestIdentifier);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c14145", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?FilterCriteria={{FilterCriteria}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/147?query=/iot3/example/cipher?FilterCriteria={{FilterCriteria}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.FilterCriteria);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c15146", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?DesiredIdentifierResultType={{DesiredIdentifierResultType}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/148?query=/iot3/example/cipher?DesiredIdentifierResultType={{DesiredIdentifierResultType}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.DesiredIdentifierResultType);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c16147", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?TokenRequestIndicator={{TokenRequestIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/149?query=/iot3/example/cipher?TokenRequestIndicator={{TokenRequestIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.TokenRequestIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c17148", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?Tokens={{Tokens}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/150?query=/iot3/example/cipher?Tokens={{Tokens}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"Tokens\",currentData.Tokens);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c18149", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?TokenIDs={{TokenIDs}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/151?query=/iot3/example/cipher?TokenIDs={{TokenIDs}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"TokenIDs\",currentData.TokenIDs);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c19150", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?RoleIDs={{RoleIDs}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/152?query=/iot3/example/cipher?RoleIDs={{RoleIDs}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"RoleIDs\",currentData.RoleIDs);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c20151", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?LocalTokenIDs={{LocalTokenIDs}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/153?query=/iot3/example/cipher?LocalTokenIDs={{LocalTokenIDs}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.LocalTokenIDs);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c21152", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?ReleaseVersionIndicator={{ReleaseVersionIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/154?query=/iot3/example/cipher?ReleaseVersionIndicator={{ReleaseVersionIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.ReleaseVersionIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c22153", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?VendorInformation={{VendorInformation}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/155?query=/iot3/example/cipher?VendorInformation={{VendorInformation}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"VendorInformation\",currentData.VendorInformation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c23154", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?GroupRequestTargetMembers={{GroupRequestTargetMembers}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/156?query=/iot3/example/cipher?GroupRequestTargetMembers={{GroupRequestTargetMembers}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.GroupRequestTargetMembers);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c24155", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/157?query=/iot3/example/cipher?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.AuthorizationSignatureIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c25156", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?AuthorizationSignature={{AuthorizationSignature}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/158?query=/iot3/example/cipher?AuthorizationSignature={{AuthorizationSignature}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.AuthorizationSignature);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c26157", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/159?query=/iot3/example/cipher?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.AuthorizationRelationshipIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c27158", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?SemanticQueryIndicator={{SemanticQueryIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/160?query=/iot3/example/cipher?SemanticQueryIndicator={{SemanticQueryIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.SemanticQueryIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c28159", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of cipher resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/161?query=/iot3/example/cipher',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "d26ed1e0-0ce8-4863-8652-f8f868e51a2c29160", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?ToAddress={{ToAddress}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/162?query=/iot3/example/connectionInstance?ToAddress={{ToAddress}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d0161", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?FromId={{FromId}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/163?query=/iot3/example/connectionInstance?FromId={{FromId}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d1162", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?Operation={{Operation}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/164?query=/iot3/example/connectionInstance?Operation={{Operation}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"Operation\",currentData.Operation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d2163", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?RequestId={{RequestId}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/165?query=/iot3/example/connectionInstance?RequestId={{RequestId}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"RequestId\",currentData.RequestId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d3164", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?ResourceType={{ResourceType}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/166?query=/iot3/example/connectionInstance?ResourceType={{ResourceType}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResourceType\",currentData.ResourceType);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d4165", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?OriginatingTimestamp={{OriginatingTimestamp}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/167?query=/iot3/example/connectionInstance?OriginatingTimestamp={{OriginatingTimestamp}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.OriginatingTimestamp);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d5166", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?ReqExpirationTimestamp={{ReqExpirationTimestamp}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/168?query=/iot3/example/connectionInstance?ReqExpirationTimestamp={{ReqExpirationTimestamp}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.ReqExpirationTimestamp);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d6167", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?ResExpirationTimestamp={{ResExpirationTimestamp}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/169?query=/iot3/example/connectionInstance?ResExpirationTimestamp={{ResExpirationTimestamp}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.ResExpirationTimestamp);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d7168", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?EventCategory={{EventCategory}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/170?query=/iot3/example/connectionInstance?EventCategory={{EventCategory}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"EventCategory\",currentData.EventCategory);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d8169", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?OperationalExecutionTime={{OperationalExecutionTime}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/171?query=/iot3/example/connectionInstance?OperationalExecutionTime={{OperationalExecutionTime}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.OperationalExecutionTime);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d9170", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?ResponseType={{ResponseType}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/172?query=/iot3/example/connectionInstance?ResponseType={{ResponseType}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResponseType\",currentData.ResponseType);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d10171", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?ResultPersistence={{ResultPersistence}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/173?query=/iot3/example/connectionInstance?ResultPersistence={{ResultPersistence}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.ResultPersistence);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d11172", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?ResultContent={{ResultContent}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/174?query=/iot3/example/connectionInstance?ResultContent={{ResultContent}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResultContent\",currentData.ResultContent);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d12173", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?DeliveryAggregation={{DeliveryAggregation}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/175?query=/iot3/example/connectionInstance?DeliveryAggregation={{DeliveryAggregation}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.DeliveryAggregation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d13174", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?GroupRequestIdentifier={{GroupRequestIdentifier}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/176?query=/iot3/example/connectionInstance?GroupRequestIdentifier={{GroupRequestIdentifier}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.GroupRequestIdentifier);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d14175", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?FilterCriteria={{FilterCriteria}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/177?query=/iot3/example/connectionInstance?FilterCriteria={{FilterCriteria}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.FilterCriteria);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d15176", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?DesiredIdentifierResultType={{DesiredIdentifierResultType}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/178?query=/iot3/example/connectionInstance?DesiredIdentifierResultType={{DesiredIdentifierResultType}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.DesiredIdentifierResultType);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d16177", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?TokenRequestIndicator={{TokenRequestIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/179?query=/iot3/example/connectionInstance?TokenRequestIndicator={{TokenRequestIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.TokenRequestIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d17178", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?Tokens={{Tokens}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/180?query=/iot3/example/connectionInstance?Tokens={{Tokens}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"Tokens\",currentData.Tokens);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d18179", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?TokenIDs={{TokenIDs}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/181?query=/iot3/example/connectionInstance?TokenIDs={{TokenIDs}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"TokenIDs\",currentData.TokenIDs);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d19180", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?RoleIDs={{RoleIDs}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/182?query=/iot3/example/connectionInstance?RoleIDs={{RoleIDs}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"RoleIDs\",currentData.RoleIDs);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d20181", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?LocalTokenIDs={{LocalTokenIDs}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/183?query=/iot3/example/connectionInstance?LocalTokenIDs={{LocalTokenIDs}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.LocalTokenIDs);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d21182", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?ReleaseVersionIndicator={{ReleaseVersionIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/184?query=/iot3/example/connectionInstance?ReleaseVersionIndicator={{ReleaseVersionIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.ReleaseVersionIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d22183", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?VendorInformation={{VendorInformation}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/185?query=/iot3/example/connectionInstance?VendorInformation={{VendorInformation}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"VendorInformation\",currentData.VendorInformation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d23184", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?GroupRequestTargetMembers={{GroupRequestTargetMembers}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/186?query=/iot3/example/connectionInstance?GroupRequestTargetMembers={{GroupRequestTargetMembers}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.GroupRequestTargetMembers);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d24185", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/187?query=/iot3/example/connectionInstance?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.AuthorizationSignatureIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d25186", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?AuthorizationSignature={{AuthorizationSignature}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/188?query=/iot3/example/connectionInstance?AuthorizationSignature={{AuthorizationSignature}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.AuthorizationSignature);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d26187", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/189?query=/iot3/example/connectionInstance?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.AuthorizationRelationshipIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d27188", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?SemanticQueryIndicator={{SemanticQueryIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/190?query=/iot3/example/connectionInstance?SemanticQueryIndicator={{SemanticQueryIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.SemanticQueryIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d28189", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of connectionInstance resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/191?query=/iot3/example/connectionInstance',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "15d8a3f6-782d-44f4-b815-c5186b7a4a1d29190", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?ToAddress={{ToAddress}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/192?query=/iot3/example/signature?ToAddress={{ToAddress}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa0191", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?FromId={{FromId}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/193?query=/iot3/example/signature?FromId={{FromId}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa1192", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?Operation={{Operation}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/194?query=/iot3/example/signature?Operation={{Operation}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"Operation\",currentData.Operation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa2193", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?RequestId={{RequestId}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/195?query=/iot3/example/signature?RequestId={{RequestId}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"RequestId\",currentData.RequestId);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa3194", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?ResourceType={{ResourceType}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/196?query=/iot3/example/signature?ResourceType={{ResourceType}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResourceType\",currentData.ResourceType);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa4195", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?OriginatingTimestamp={{OriginatingTimestamp}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/197?query=/iot3/example/signature?OriginatingTimestamp={{OriginatingTimestamp}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.OriginatingTimestamp);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa5196", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?ReqExpirationTimestamp={{ReqExpirationTimestamp}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/198?query=/iot3/example/signature?ReqExpirationTimestamp={{ReqExpirationTimestamp}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.ReqExpirationTimestamp);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa6197", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?ResExpirationTimestamp={{ResExpirationTimestamp}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/199?query=/iot3/example/signature?ResExpirationTimestamp={{ResExpirationTimestamp}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.ResExpirationTimestamp);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa7198", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?EventCategory={{EventCategory}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/200?query=/iot3/example/signature?EventCategory={{EventCategory}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"EventCategory\",currentData.EventCategory);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa8199", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?OperationalExecutionTime={{OperationalExecutionTime}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/201?query=/iot3/example/signature?OperationalExecutionTime={{OperationalExecutionTime}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.OperationalExecutionTime);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa9200", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?ResponseType={{ResponseType}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/202?query=/iot3/example/signature?ResponseType={{ResponseType}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResponseType\",currentData.ResponseType);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa10201", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?ResultPersistence={{ResultPersistence}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/203?query=/iot3/example/signature?ResultPersistence={{ResultPersistence}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.ResultPersistence);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa11202", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?ResultContent={{ResultContent}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/204?query=/iot3/example/signature?ResultContent={{ResultContent}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ResultContent\",currentData.ResultContent);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa12203", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?DeliveryAggregation={{DeliveryAggregation}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/205?query=/iot3/example/signature?DeliveryAggregation={{DeliveryAggregation}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.DeliveryAggregation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa13204", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?GroupRequestIdentifier={{GroupRequestIdentifier}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/206?query=/iot3/example/signature?GroupRequestIdentifier={{GroupRequestIdentifier}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.GroupRequestIdentifier);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa14205", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?FilterCriteria={{FilterCriteria}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/207?query=/iot3/example/signature?FilterCriteria={{FilterCriteria}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.FilterCriteria);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa15206", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?DesiredIdentifierResultType={{DesiredIdentifierResultType}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/208?query=/iot3/example/signature?DesiredIdentifierResultType={{DesiredIdentifierResultType}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.DesiredIdentifierResultType);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa16207", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?TokenRequestIndicator={{TokenRequestIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/209?query=/iot3/example/signature?TokenRequestIndicator={{TokenRequestIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.TokenRequestIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa17208", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?Tokens={{Tokens}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/210?query=/iot3/example/signature?Tokens={{Tokens}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"Tokens\",currentData.Tokens);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa18209", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?TokenIDs={{TokenIDs}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/211?query=/iot3/example/signature?TokenIDs={{TokenIDs}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"TokenIDs\",currentData.TokenIDs);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa19210", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?RoleIDs={{RoleIDs}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/212?query=/iot3/example/signature?RoleIDs={{RoleIDs}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"RoleIDs\",currentData.RoleIDs);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa20211", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?LocalTokenIDs={{LocalTokenIDs}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/213?query=/iot3/example/signature?LocalTokenIDs={{LocalTokenIDs}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.LocalTokenIDs);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa21212", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?ReleaseVersionIndicator={{ReleaseVersionIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/214?query=/iot3/example/signature?ReleaseVersionIndicator={{ReleaseVersionIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.ReleaseVersionIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa22213", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?VendorInformation={{VendorInformation}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/215?query=/iot3/example/signature?VendorInformation={{VendorInformation}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"VendorInformation\",currentData.VendorInformation);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa23214", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?GroupRequestTargetMembers={{GroupRequestTargetMembers}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/216?query=/iot3/example/signature?GroupRequestTargetMembers={{GroupRequestTargetMembers}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.GroupRequestTargetMembers);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa24215", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/217?query=/iot3/example/signature?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.AuthorizationSignatureIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa25216", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?AuthorizationSignature={{AuthorizationSignature}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/218?query=/iot3/example/signature?AuthorizationSignature={{AuthorizationSignature}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.AuthorizationSignature);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa26217", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/219?query=/iot3/example/signature?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.AuthorizationRelationshipIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa27218", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?SemanticQueryIndicator={{SemanticQueryIndicator}}", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/220?query=/iot3/example/signature?SemanticQueryIndicator={{SemanticQueryIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.SemanticQueryIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa28219", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "description": "This method retrieves information about a list of signature resources", 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature", 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/221?query=/iot3/example/signature',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "GET", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "pathVariables": {}, 
            "preRequestScript": "", 
            "data": [], 
            "id": "41939792-f695-4e3b-ba69-11b88d49cbaa29220", 
            "name": "TC_200"
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/sensitiveDataObject", 
            "name": "TC_201", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"sensitiveDataObjectInfo\": {\n        \"content\": {\n            \"resourceType\": \"{{resourceType}}\",\n            \"accessControlPolicyIDs\": \"{{accessControlPolicyIDs}}\",\n            \"labels\": \"{{labels}}\",\n            \"creationTime\": \"{{creationTime}}\",\n            \"parentID\": \"{{parentID}}\",\n            \"lastModifiedTime\": \"{{lastModifiedTime}}\",\n            \"expirationTime\": \"{{expirationTime}}\",\n            \"resourceID\": \"{{resourceID}}\"\n        },\n        \"FromId\": \"{{FromId}}\",\n        \"ToAddress\": \"{{ToAddress}}\",\n        \"resourceName\": \"{{resourceName}}\"\n    }\n}", 
            "time": 1560272432542, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(201)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveDataObjectInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"labels\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['labels']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['resourceName']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_csv/1?query=/iot3/example/sensitiveDataObject&header=sensitiveDataObjectInfo',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"resourceType\",currentData[\"sensitiveDataObjectInfo.content.resourceType\"]);", 
                            "    pm.environment.set(\"accessControlPolicyIDs\",currentData[\"sensitiveDataObjectInfo.content.accessControlPolicyIDs\"]);", 
                            "    pm.environment.set(\"labels\",currentData[\"sensitiveDataObjectInfo.content.labels\"]);", 
                            "    pm.environment.set(\"creationTime\",currentData[\"sensitiveDataObjectInfo.content.creationTime\"]);", 
                            "    pm.environment.set(\"parentID\",currentData[\"sensitiveDataObjectInfo.content.parentID\"]);", 
                            "    pm.environment.set(\"lastModifiedTime\",currentData[\"sensitiveDataObjectInfo.content.lastModifiedTime\"]);", 
                            "    pm.environment.set(\"resourceID\",currentData[\"sensitiveDataObjectInfo.content.resourceID\"]);", 
                            "    pm.environment.set(\"expirationTime\",currentData[\"sensitiveDataObjectInfo.content.expirationTime\"]);", 
                            "    pm.environment.set(\"FromId\",currentData[\"sensitiveDataObjectInfo.FromId\"]);", 
                            "    pm.environment.set(\"ToAddress\",currentData[\"sensitiveDataObjectInfo.ToAddress\"]);", 
                            "    pm.environment.set(\"resourceName\",currentData[\"sensitiveDataObjectInfo.resourceName\"]);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "POST", 
            "preRequestScript": "", 
            "data": [], 
            "id": "bf9d03e6-6023-4c1f-b80c-2c17648521e9221", 
            "description": "This method is used to create a sensitiveDataObject resource."
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection", 
            "name": "TC_201", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"secureConnectionInfo\": {\n        \"ResponseType\": \"{{ResponseType}}\",\n        \"GroupRequestIdentifier\": \"{{GroupRequestIdentifier}}\",\n        \"ToAddress\": \"{{ToAddress}}\",\n        \"OriginatingTimestamp\": \"{{OriginatingTimestamp}}\",\n        \"TokenRequestIndicator\": \"{{TokenRequestIndicator}}\",\n        \"GroupRequestTargetMembers\": \"{{GroupRequestTargetMembers}}\",\n        \"ResultContent\": \"{{ResultContent}}\",\n        \"SemanticQueryIndicator\": \"{{SemanticQueryIndicator}}\",\n        \"AuthorizationSignature\": \"{{AuthorizationSignature}}\",\n        \"OperationalExecutionTime\": \"{{OperationalExecutionTime}}\",\n        \"FromId\": \"{{FromId}}\",\n        \"RequestId\": \"{{RequestId}}\",\n        \"ReqExpirationTimestamp\": \"{{ReqExpirationTimestamp}}\",\n        \"EventCategory\": \"{{EventCategory}}\",\n        \"TokenIDs\": \"{{TokenIDs}}\",\n        \"RoleIDs\": \"{{RoleIDs}}\",\n        \"Tokens\": \"{{Tokens}}\",\n        \"resourceType\": \"{{resourceType}}\",\n        \"AuthorizationSignatureIndicator\": \"{{AuthorizationSignatureIndicator}}\",\n        \"LocalTokenIDs\": \"{{LocalTokenIDs}}\",\n        \"DeliveryAggregation\": \"{{DeliveryAggregation}}\",\n        \"content\": {\n            \"cipherSuite\": \"{{cipherSuite}}\",\n            \"currentNrOfInstances\": \"{{currentNrOfInstances}}\",\n            \"resourceType\": \"{{resourceType}}\",\n            \"accessControlPolicyIDs\": \"{{accessControlPolicyIDs}}\",\n            \"keyData\": \"{{keyData}}\",\n            \"maxNrOfInstances\": \"{{maxNrOfInstances}}\",\n            \"creationTime\": \"{{creationTime}}\",\n            \"connectionType\": \"{{connectionType}}\",\n            \"parentID\": \"{{parentID}}\",\n            \"lastModifiedTime\": \"{{lastModifiedTime}}\",\n            \"resourceName\": \"{{resourceName}}\",\n            \"expirationTime\": \"{{expirationTime}}\",\n            \"resourceID\": \"{{resourceID}}\",\n            \"keyInformation\": \"{{keyInformation}}\"\n        },\n        \"ReleaseVersionIndicator\": \"{{ReleaseVersionIndicator}}\",\n        \"DesiredIdentifierResultType\": \"{{DesiredIdentifierResultType}}\",\n        \"ResExpirationTimestamp\": \"{{ResExpirationTimestamp}}\",\n        \"VendorInformation\": \"{{VendorInformation}}\",\n        \"Operation\": \"{{Operation}}\",\n        \"ResultPersistence\": \"{{ResultPersistence}}\",\n        \"AuthorizationRelationshipIndicator\": \"{{AuthorizationRelationshipIndicator}}\",\n        \"FilterCriteria\": \"{{FilterCriteria}}\"\n    }\n}", 
            "time": 1560272432543, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(201)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_csv/1?query=/iot3/example/secureConnection&header=secureConnectionInfo',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData[\"secureConnectionInfo.GroupRequestIdentifier\"]);", 
                            "    pm.environment.set(\"ToAddress\",currentData[\"secureConnectionInfo.ToAddress\"]);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData[\"secureConnectionInfo.OriginatingTimestamp\"]);", 
                            "    pm.environment.set(\"ResultContent\",currentData[\"secureConnectionInfo.ResultContent\"]);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData[\"secureConnectionInfo.SemanticQueryIndicator\"]);", 
                            "    pm.environment.set(\"EventCategory\",currentData[\"secureConnectionInfo.EventCategory\"]);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData[\"secureConnectionInfo.OperationalExecutionTime\"]);", 
                            "    pm.environment.set(\"cipherSuite\",currentData[\"secureConnectionInfo.content.cipherSuite\"]);", 
                            "    pm.environment.set(\"currentNrOfInstances\",currentData[\"secureConnectionInfo.content.currentNrOfInstances\"]);", 
                            "    pm.environment.set(\"resourceType\",currentData[\"secureConnectionInfo.content.resourceType\"]);", 
                            "    pm.environment.set(\"accessControlPolicyIDs\",currentData[\"secureConnectionInfo.content.accessControlPolicyIDs\"]);", 
                            "    pm.environment.set(\"keyData\",currentData[\"secureConnectionInfo.content.keyData\"]);", 
                            "    pm.environment.set(\"parentID\",currentData[\"secureConnectionInfo.content.parentID\"]);", 
                            "    pm.environment.set(\"creationTime\",currentData[\"secureConnectionInfo.content.creationTime\"]);", 
                            "    pm.environment.set(\"connectionType\",currentData[\"secureConnectionInfo.content.connectionType\"]);", 
                            "    pm.environment.set(\"maxNrOfInstances\",currentData[\"secureConnectionInfo.content.maxNrOfInstances\"]);", 
                            "    pm.environment.set(\"resourceName\",currentData[\"secureConnectionInfo.content.resourceName\"]);", 
                            "    pm.environment.set(\"lastModifiedTime\",currentData[\"secureConnectionInfo.content.lastModifiedTime\"]);", 
                            "    pm.environment.set(\"resourceID\",currentData[\"secureConnectionInfo.content.resourceID\"]);", 
                            "    pm.environment.set(\"expirationTime\",currentData[\"secureConnectionInfo.content.expirationTime\"]);", 
                            "    pm.environment.set(\"keyInformation\",currentData[\"secureConnectionInfo.content.keyInformation\"]);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData[\"secureConnectionInfo.AuthorizationSignatureIndicator\"]);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData[\"secureConnectionInfo.LocalTokenIDs\"]);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData[\"secureConnectionInfo.AuthorizationSignature\"]);", 
                            "    pm.environment.set(\"Tokens\",currentData[\"secureConnectionInfo.Tokens\"]);", 
                            "    pm.environment.set(\"VendorInformation\",currentData[\"secureConnectionInfo.VendorInformation\"]);", 
                            "    pm.environment.set(\"ResponseType\",currentData[\"secureConnectionInfo.ResponseType\"]);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData[\"secureConnectionInfo.TokenRequestIndicator\"]);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData[\"secureConnectionInfo.GroupRequestTargetMembers\"]);", 
                            "    pm.environment.set(\"FromId\",currentData[\"secureConnectionInfo.FromId\"]);", 
                            "    pm.environment.set(\"RequestId\",currentData[\"secureConnectionInfo.RequestId\"]);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData[\"secureConnectionInfo.ReqExpirationTimestamp\"]);", 
                            "    pm.environment.set(\"TokenIDs\",currentData[\"secureConnectionInfo.TokenIDs\"]);", 
                            "    pm.environment.set(\"resourceType\",currentData[\"secureConnectionInfo.resourceType\"]);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData[\"secureConnectionInfo.DeliveryAggregation\"]);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData[\"secureConnectionInfo.ReleaseVersionIndicator\"]);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData[\"secureConnectionInfo.DesiredIdentifierResultType\"]);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData[\"secureConnectionInfo.ResExpirationTimestamp\"]);", 
                            "    pm.environment.set(\"RoleIDs\",currentData[\"secureConnectionInfo.RoleIDs\"]);", 
                            "    pm.environment.set(\"Operation\",currentData[\"secureConnectionInfo.Operation\"]);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData[\"secureConnectionInfo.ResultPersistence\"]);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData[\"secureConnectionInfo.AuthorizationRelationshipIndicator\"]);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData[\"secureConnectionInfo.FilterCriteria\"]);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "POST", 
            "preRequestScript": "", 
            "data": [], 
            "id": "41b5282c-fca1-4678-9e4f-e6f739cf9ba9222", 
            "description": "This method is used to create a secureConnection resource."
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash", 
            "name": "TC_201", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"hashInfo\": {\n        \"ResponseType\": \"{{ResponseType}}\",\n        \"GroupRequestIdentifier\": \"{{GroupRequestIdentifier}}\",\n        \"ToAddress\": \"{{ToAddress}}\",\n        \"OriginatingTimestamp\": \"{{OriginatingTimestamp}}\",\n        \"TokenRequestIndicator\": \"{{TokenRequestIndicator}}\",\n        \"GroupRequestTargetMembers\": \"{{GroupRequestTargetMembers}}\",\n        \"ResultContent\": \"{{ResultContent}}\",\n        \"SemanticQueryIndicator\": \"{{SemanticQueryIndicator}}\",\n        \"AuthorizationSignature\": \"{{AuthorizationSignature}}\",\n        \"OperationalExecutionTime\": \"{{OperationalExecutionTime}}\",\n        \"FromId\": \"{{FromId}}\",\n        \"RequestId\": \"{{RequestId}}\",\n        \"ReqExpirationTimestamp\": \"{{ReqExpirationTimestamp}}\",\n        \"EventCategory\": \"{{EventCategory}}\",\n        \"TokenIDs\": \"{{TokenIDs}}\",\n        \"RoleIDs\": \"{{RoleIDs}}\",\n        \"Tokens\": \"{{Tokens}}\",\n        \"resourceType\": \"{{resourceType}}\",\n        \"AuthorizationSignatureIndicator\": \"{{AuthorizationSignatureIndicator}}\",\n        \"LocalTokenIDs\": \"{{LocalTokenIDs}}\",\n        \"DeliveryAggregation\": \"{{DeliveryAggregation}}\",\n        \"content\": {\n            \"hashValue\": \"{{hashValue}}\",\n            \"expirationTime\": \"{{expirationTime}}\",\n            \"algorithm\": \"{{algorithm}}\",\n            \"resourceType\": \"{{resourceType}}\",\n            \"accessControlPolicyIDs\": \"{{accessControlPolicyIDs}}\",\n            \"creationTime\": \"{{creationTime}}\",\n            \"parentID\": \"{{parentID}}\",\n            \"resourceName\": \"{{resourceName}}\",\n            \"message\": \"{{message}}\",\n            \"resourceID\": \"{{resourceID}}\",\n            \"lastModifiedTime\": \"{{lastModifiedTime}}\"\n        },\n        \"ReleaseVersionIndicator\": \"{{ReleaseVersionIndicator}}\",\n        \"DesiredIdentifierResultType\": \"{{DesiredIdentifierResultType}}\",\n        \"ResExpirationTimestamp\": \"{{ResExpirationTimestamp}}\",\n        \"VendorInformation\": \"{{VendorInformation}}\",\n        \"Operation\": \"{{Operation}}\",\n        \"ResultPersistence\": \"{{ResultPersistence}}\",\n        \"AuthorizationRelationshipIndicator\": \"{{AuthorizationRelationshipIndicator}}\",\n        \"FilterCriteria\": \"{{FilterCriteria}}\"\n    }\n}", 
            "time": 1560272432544, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(201)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_csv/1?query=/iot3/example/hash&header=hashInfo',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData[\"hashInfo.GroupRequestIdentifier\"]);", 
                            "    pm.environment.set(\"ToAddress\",currentData[\"hashInfo.ToAddress\"]);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData[\"hashInfo.OriginatingTimestamp\"]);", 
                            "    pm.environment.set(\"ResultContent\",currentData[\"hashInfo.ResultContent\"]);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData[\"hashInfo.SemanticQueryIndicator\"]);", 
                            "    pm.environment.set(\"EventCategory\",currentData[\"hashInfo.EventCategory\"]);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData[\"hashInfo.OperationalExecutionTime\"]);", 
                            "    pm.environment.set(\"hashValue\",currentData[\"hashInfo.content.hashValue\"]);", 
                            "    pm.environment.set(\"algorithm\",currentData[\"hashInfo.content.algorithm\"]);", 
                            "    pm.environment.set(\"resourceType\",currentData[\"hashInfo.content.resourceType\"]);", 
                            "    pm.environment.set(\"accessControlPolicyIDs\",currentData[\"hashInfo.content.accessControlPolicyIDs\"]);", 
                            "    pm.environment.set(\"creationTime\",currentData[\"hashInfo.content.creationTime\"]);", 
                            "    pm.environment.set(\"parentID\",currentData[\"hashInfo.content.parentID\"]);", 
                            "    pm.environment.set(\"lastModifiedTime\",currentData[\"hashInfo.content.lastModifiedTime\"]);", 
                            "    pm.environment.set(\"resourceName\",currentData[\"hashInfo.content.resourceName\"]);", 
                            "    pm.environment.set(\"expirationTime\",currentData[\"hashInfo.content.expirationTime\"]);", 
                            "    pm.environment.set(\"resourceID\",currentData[\"hashInfo.content.resourceID\"]);", 
                            "    pm.environment.set(\"message\",currentData[\"hashInfo.content.message\"]);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData[\"hashInfo.AuthorizationSignatureIndicator\"]);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData[\"hashInfo.LocalTokenIDs\"]);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData[\"hashInfo.AuthorizationSignature\"]);", 
                            "    pm.environment.set(\"Tokens\",currentData[\"hashInfo.Tokens\"]);", 
                            "    pm.environment.set(\"VendorInformation\",currentData[\"hashInfo.VendorInformation\"]);", 
                            "    pm.environment.set(\"ResponseType\",currentData[\"hashInfo.ResponseType\"]);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData[\"hashInfo.TokenRequestIndicator\"]);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData[\"hashInfo.GroupRequestTargetMembers\"]);", 
                            "    pm.environment.set(\"FromId\",currentData[\"hashInfo.FromId\"]);", 
                            "    pm.environment.set(\"RequestId\",currentData[\"hashInfo.RequestId\"]);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData[\"hashInfo.ReqExpirationTimestamp\"]);", 
                            "    pm.environment.set(\"TokenIDs\",currentData[\"hashInfo.TokenIDs\"]);", 
                            "    pm.environment.set(\"resourceType\",currentData[\"hashInfo.resourceType\"]);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData[\"hashInfo.DeliveryAggregation\"]);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData[\"hashInfo.ReleaseVersionIndicator\"]);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData[\"hashInfo.DesiredIdentifierResultType\"]);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData[\"hashInfo.ResExpirationTimestamp\"]);", 
                            "    pm.environment.set(\"RoleIDs\",currentData[\"hashInfo.RoleIDs\"]);", 
                            "    pm.environment.set(\"Operation\",currentData[\"hashInfo.Operation\"]);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData[\"hashInfo.ResultPersistence\"]);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData[\"hashInfo.AuthorizationRelationshipIndicator\"]);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData[\"hashInfo.FilterCriteria\"]);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "POST", 
            "preRequestScript": "", 
            "data": [], 
            "id": "fb932148-b15a-41d6-966d-2552c98b90b1223", 
            "description": "This method is used to create a hash resource."
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity", 
            "name": "TC_201", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"identityInfo\": {\n        \"ResponseType\": \"{{ResponseType}}\",\n        \"GroupRequestIdentifier\": \"{{GroupRequestIdentifier}}\",\n        \"ToAddress\": \"{{ToAddress}}\",\n        \"OriginatingTimestamp\": \"{{OriginatingTimestamp}}\",\n        \"TokenRequestIndicator\": \"{{TokenRequestIndicator}}\",\n        \"GroupRequestTargetMembers\": \"{{GroupRequestTargetMembers}}\",\n        \"ResultContent\": \"{{ResultContent}}\",\n        \"SemanticQueryIndicator\": \"{{SemanticQueryIndicator}}\",\n        \"AuthorizationSignature\": \"{{AuthorizationSignature}}\",\n        \"OperationalExecutionTime\": \"{{OperationalExecutionTime}}\",\n        \"FromId\": \"{{FromId}}\",\n        \"RequestId\": \"{{RequestId}}\",\n        \"ReqExpirationTimestamp\": \"{{ReqExpirationTimestamp}}\",\n        \"EventCategory\": \"{{EventCategory}}\",\n        \"TokenIDs\": \"{{TokenIDs}}\",\n        \"RoleIDs\": \"{{RoleIDs}}\",\n        \"Tokens\": \"{{Tokens}}\",\n        \"resourceType\": \"{{resourceType}}\",\n        \"AuthorizationSignatureIndicator\": \"{{AuthorizationSignatureIndicator}}\",\n        \"LocalTokenIDs\": \"{{LocalTokenIDs}}\",\n        \"DeliveryAggregation\": \"{{DeliveryAggregation}}\",\n        \"content\": {\n            \"idData\": \"{{idData}}\",\n            \"resourceType\": \"{{resourceType}}\",\n            \"resourceID\": \"{{resourceID}}\",\n            \"keyData\": \"{{keyData}}\",\n            \"parentID\": \"{{parentID}}\",\n            \"creationTime\": \"{{creationTime}}\",\n            \"idName\": \"{{idName}}\",\n            \"receiverAuthenticationData\": \"{{receiverAuthenticationData}}\",\n            \"accessControlPolicyIDs\": \"{{accessControlPolicyIDs}}\",\n            \"lastModifiedTime\": \"{{lastModifiedTime}}\",\n            \"resourceName\": \"{{resourceName}}\",\n            \"expirationTime\": \"{{expirationTime}}\",\n            \"originatorAuthenticationData\": \"{{originatorAuthenticationData}}\"\n        },\n        \"ReleaseVersionIndicator\": \"{{ReleaseVersionIndicator}}\",\n        \"DesiredIdentifierResultType\": \"{{DesiredIdentifierResultType}}\",\n        \"ResExpirationTimestamp\": \"{{ResExpirationTimestamp}}\",\n        \"VendorInformation\": \"{{VendorInformation}}\",\n        \"Operation\": \"{{Operation}}\",\n        \"ResultPersistence\": \"{{ResultPersistence}}\",\n        \"AuthorizationRelationshipIndicator\": \"{{AuthorizationRelationshipIndicator}}\",\n        \"FilterCriteria\": \"{{FilterCriteria}}\"\n    }\n}", 
            "time": 1560272432544, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(201)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_csv/1?query=/iot3/example/identity&header=identityInfo',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData[\"identityInfo.GroupRequestIdentifier\"]);", 
                            "    pm.environment.set(\"ToAddress\",currentData[\"identityInfo.ToAddress\"]);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData[\"identityInfo.OriginatingTimestamp\"]);", 
                            "    pm.environment.set(\"ResultContent\",currentData[\"identityInfo.ResultContent\"]);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData[\"identityInfo.SemanticQueryIndicator\"]);", 
                            "    pm.environment.set(\"EventCategory\",currentData[\"identityInfo.EventCategory\"]);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData[\"identityInfo.OperationalExecutionTime\"]);", 
                            "    pm.environment.set(\"resourceType\",currentData[\"identityInfo.content.resourceType\"]);", 
                            "    pm.environment.set(\"resourceID\",currentData[\"identityInfo.content.resourceID\"]);", 
                            "    pm.environment.set(\"keyData\",currentData[\"identityInfo.content.keyData\"]);", 
                            "    pm.environment.set(\"creationTime\",currentData[\"identityInfo.content.creationTime\"]);", 
                            "    pm.environment.set(\"idName\",currentData[\"identityInfo.content.idName\"]);", 
                            "    pm.environment.set(\"receiverAuthenticationData\",currentData[\"identityInfo.content.receiverAuthenticationData\"]);", 
                            "    pm.environment.set(\"resourceName\",currentData[\"identityInfo.content.resourceName\"]);", 
                            "    pm.environment.set(\"parentID\",currentData[\"identityInfo.content.parentID\"]);", 
                            "    pm.environment.set(\"accessControlPolicyIDs\",currentData[\"identityInfo.content.accessControlPolicyIDs\"]);", 
                            "    pm.environment.set(\"idData\",currentData[\"identityInfo.content.idData\"]);", 
                            "    pm.environment.set(\"lastModifiedTime\",currentData[\"identityInfo.content.lastModifiedTime\"]);", 
                            "    pm.environment.set(\"expirationTime\",currentData[\"identityInfo.content.expirationTime\"]);", 
                            "    pm.environment.set(\"originatorAuthenticationData\",currentData[\"identityInfo.content.originatorAuthenticationData\"]);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData[\"identityInfo.AuthorizationSignatureIndicator\"]);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData[\"identityInfo.LocalTokenIDs\"]);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData[\"identityInfo.AuthorizationSignature\"]);", 
                            "    pm.environment.set(\"Tokens\",currentData[\"identityInfo.Tokens\"]);", 
                            "    pm.environment.set(\"VendorInformation\",currentData[\"identityInfo.VendorInformation\"]);", 
                            "    pm.environment.set(\"ResponseType\",currentData[\"identityInfo.ResponseType\"]);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData[\"identityInfo.TokenRequestIndicator\"]);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData[\"identityInfo.GroupRequestTargetMembers\"]);", 
                            "    pm.environment.set(\"FromId\",currentData[\"identityInfo.FromId\"]);", 
                            "    pm.environment.set(\"RequestId\",currentData[\"identityInfo.RequestId\"]);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData[\"identityInfo.ReqExpirationTimestamp\"]);", 
                            "    pm.environment.set(\"TokenIDs\",currentData[\"identityInfo.TokenIDs\"]);", 
                            "    pm.environment.set(\"resourceType\",currentData[\"identityInfo.resourceType\"]);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData[\"identityInfo.DeliveryAggregation\"]);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData[\"identityInfo.ReleaseVersionIndicator\"]);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData[\"identityInfo.DesiredIdentifierResultType\"]);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData[\"identityInfo.ResExpirationTimestamp\"]);", 
                            "    pm.environment.set(\"RoleIDs\",currentData[\"identityInfo.RoleIDs\"]);", 
                            "    pm.environment.set(\"Operation\",currentData[\"identityInfo.Operation\"]);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData[\"identityInfo.ResultPersistence\"]);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData[\"identityInfo.AuthorizationRelationshipIndicator\"]);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData[\"identityInfo.FilterCriteria\"]);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "POST", 
            "preRequestScript": "", 
            "data": [], 
            "id": "e8b25f41-2702-4dd9-bd4a-eb5b309245eb224", 
            "description": "This method is used to create a identity resource."
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand", 
            "name": "TC_201", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"randInfo\": {\n        \"ResponseType\": \"{{ResponseType}}\",\n        \"GroupRequestIdentifier\": \"{{GroupRequestIdentifier}}\",\n        \"ToAddress\": \"{{ToAddress}}\",\n        \"OriginatingTimestamp\": \"{{OriginatingTimestamp}}\",\n        \"TokenRequestIndicator\": \"{{TokenRequestIndicator}}\",\n        \"GroupRequestTargetMembers\": \"{{GroupRequestTargetMembers}}\",\n        \"ResultContent\": \"{{ResultContent}}\",\n        \"SemanticQueryIndicator\": \"{{SemanticQueryIndicator}}\",\n        \"AuthorizationSignature\": \"{{AuthorizationSignature}}\",\n        \"OperationalExecutionTime\": \"{{OperationalExecutionTime}}\",\n        \"FromId\": \"{{FromId}}\",\n        \"RequestId\": \"{{RequestId}}\",\n        \"ReqExpirationTimestamp\": \"{{ReqExpirationTimestamp}}\",\n        \"EventCategory\": \"{{EventCategory}}\",\n        \"TokenIDs\": \"{{TokenIDs}}\",\n        \"RoleIDs\": \"{{RoleIDs}}\",\n        \"Tokens\": \"{{Tokens}}\",\n        \"resourceType\": \"{{resourceType}}\",\n        \"AuthorizationSignatureIndicator\": \"{{AuthorizationSignatureIndicator}}\",\n        \"LocalTokenIDs\": \"{{LocalTokenIDs}}\",\n        \"DeliveryAggregation\": \"{{DeliveryAggregation}}\",\n        \"content\": {\n            \"resourceType\": \"{{resourceType}}\",\n            \"accessControlPolicyIDs\": \"{{accessControlPolicyIDs}}\",\n            \"requestedDataSize\": \"{{requestedDataSize}}\",\n            \"creationTime\": \"{{creationTime}}\",\n            \"randomData\": \"{{randomData}}\",\n            \"rngType\": \"{{rngType}}\",\n            \"parentID\": \"{{parentID}}\",\n            \"lastModifiedTime\": \"{{lastModifiedTime}}\",\n            \"resourceName\": \"{{resourceName}}\",\n            \"expirationTime\": \"{{expirationTime}}\",\n            \"resourceID\": \"{{resourceID}}\"\n        },\n        \"ReleaseVersionIndicator\": \"{{ReleaseVersionIndicator}}\",\n        \"DesiredIdentifierResultType\": \"{{DesiredIdentifierResultType}}\",\n        \"ResExpirationTimestamp\": \"{{ResExpirationTimestamp}}\",\n        \"VendorInformation\": \"{{VendorInformation}}\",\n        \"Operation\": \"{{Operation}}\",\n        \"ResultPersistence\": \"{{ResultPersistence}}\",\n        \"AuthorizationRelationshipIndicator\": \"{{AuthorizationRelationshipIndicator}}\",\n        \"FilterCriteria\": \"{{FilterCriteria}}\"\n    }\n}", 
            "time": 1560272432545, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(201)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_csv/1?query=/iot3/example/rand&header=randInfo',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData[\"randInfo.GroupRequestIdentifier\"]);", 
                            "    pm.environment.set(\"ToAddress\",currentData[\"randInfo.ToAddress\"]);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData[\"randInfo.OriginatingTimestamp\"]);", 
                            "    pm.environment.set(\"ResultContent\",currentData[\"randInfo.ResultContent\"]);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData[\"randInfo.SemanticQueryIndicator\"]);", 
                            "    pm.environment.set(\"EventCategory\",currentData[\"randInfo.EventCategory\"]);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData[\"randInfo.OperationalExecutionTime\"]);", 
                            "    pm.environment.set(\"resourceType\",currentData[\"randInfo.content.resourceType\"]);", 
                            "    pm.environment.set(\"accessControlPolicyIDs\",currentData[\"randInfo.content.accessControlPolicyIDs\"]);", 
                            "    pm.environment.set(\"requestedDataSize\",currentData[\"randInfo.content.requestedDataSize\"]);", 
                            "    pm.environment.set(\"creationTime\",currentData[\"randInfo.content.creationTime\"]);", 
                            "    pm.environment.set(\"randomData\",currentData[\"randInfo.content.randomData\"]);", 
                            "    pm.environment.set(\"rngType\",currentData[\"randInfo.content.rngType\"]);", 
                            "    pm.environment.set(\"parentID\",currentData[\"randInfo.content.parentID\"]);", 
                            "    pm.environment.set(\"resourceName\",currentData[\"randInfo.content.resourceName\"]);", 
                            "    pm.environment.set(\"lastModifiedTime\",currentData[\"randInfo.content.lastModifiedTime\"]);", 
                            "    pm.environment.set(\"resourceID\",currentData[\"randInfo.content.resourceID\"]);", 
                            "    pm.environment.set(\"expirationTime\",currentData[\"randInfo.content.expirationTime\"]);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData[\"randInfo.AuthorizationSignatureIndicator\"]);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData[\"randInfo.LocalTokenIDs\"]);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData[\"randInfo.AuthorizationSignature\"]);", 
                            "    pm.environment.set(\"Tokens\",currentData[\"randInfo.Tokens\"]);", 
                            "    pm.environment.set(\"VendorInformation\",currentData[\"randInfo.VendorInformation\"]);", 
                            "    pm.environment.set(\"ResponseType\",currentData[\"randInfo.ResponseType\"]);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData[\"randInfo.TokenRequestIndicator\"]);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData[\"randInfo.GroupRequestTargetMembers\"]);", 
                            "    pm.environment.set(\"FromId\",currentData[\"randInfo.FromId\"]);", 
                            "    pm.environment.set(\"RequestId\",currentData[\"randInfo.RequestId\"]);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData[\"randInfo.ReqExpirationTimestamp\"]);", 
                            "    pm.environment.set(\"TokenIDs\",currentData[\"randInfo.TokenIDs\"]);", 
                            "    pm.environment.set(\"resourceType\",currentData[\"randInfo.resourceType\"]);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData[\"randInfo.DeliveryAggregation\"]);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData[\"randInfo.ReleaseVersionIndicator\"]);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData[\"randInfo.DesiredIdentifierResultType\"]);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData[\"randInfo.ResExpirationTimestamp\"]);", 
                            "    pm.environment.set(\"RoleIDs\",currentData[\"randInfo.RoleIDs\"]);", 
                            "    pm.environment.set(\"Operation\",currentData[\"randInfo.Operation\"]);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData[\"randInfo.ResultPersistence\"]);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData[\"randInfo.AuthorizationRelationshipIndicator\"]);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData[\"randInfo.FilterCriteria\"]);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "POST", 
            "preRequestScript": "", 
            "data": [], 
            "id": "20eb17fc-030c-45b0-a497-9646f6e177a4225", 
            "description": "This method is used to create a rand resource."
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher", 
            "name": "TC_201", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"cipherInfo\": {\n        \"ResponseType\": \"{{ResponseType}}\",\n        \"GroupRequestIdentifier\": \"{{GroupRequestIdentifier}}\",\n        \"ToAddress\": \"{{ToAddress}}\",\n        \"OriginatingTimestamp\": \"{{OriginatingTimestamp}}\",\n        \"TokenRequestIndicator\": \"{{TokenRequestIndicator}}\",\n        \"GroupRequestTargetMembers\": \"{{GroupRequestTargetMembers}}\",\n        \"ResultContent\": \"{{ResultContent}}\",\n        \"SemanticQueryIndicator\": \"{{SemanticQueryIndicator}}\",\n        \"AuthorizationSignature\": \"{{AuthorizationSignature}}\",\n        \"OperationalExecutionTime\": \"{{OperationalExecutionTime}}\",\n        \"FromId\": \"{{FromId}}\",\n        \"RequestId\": \"{{RequestId}}\",\n        \"ReqExpirationTimestamp\": \"{{ReqExpirationTimestamp}}\",\n        \"EventCategory\": \"{{EventCategory}}\",\n        \"TokenIDs\": \"{{TokenIDs}}\",\n        \"RoleIDs\": \"{{RoleIDs}}\",\n        \"Tokens\": \"{{Tokens}}\",\n        \"resourceType\": \"{{resourceType}}\",\n        \"AuthorizationSignatureIndicator\": \"{{AuthorizationSignatureIndicator}}\",\n        \"LocalTokenIDs\": \"{{LocalTokenIDs}}\",\n        \"DeliveryAggregation\": \"{{DeliveryAggregation}}\",\n        \"content\": {\n            \"expirationTime\": \"{{expirationTime}}\",\n            \"maxByteSize\": \"{{maxByteSize}}\",\n            \"algorithm\": \"{{algorithm}}\",\n            \"resourceType\": \"{{resourceType}}\",\n            \"accessControlPolicyIDs\": \"{{accessControlPolicyIDs}}\",\n            \"keyData\": \"{{keyData}}\",\n            \"creationTime\": \"{{creationTime}}\",\n            \"currentByteSize\": \"{{currentByteSize}}\",\n            \"calculatedData\": \"{{calculatedData}}\",\n            \"parentID\": \"{{parentID}}\",\n            \"resourceName\": \"{{resourceName}}\",\n            \"lastModifiedTime\": \"{{lastModifiedTime}}\",\n            \"resourceID\": \"{{resourceID}}\",\n            \"sensitiveData\": \"{{sensitiveData}}\"\n        },\n        \"ReleaseVersionIndicator\": \"{{ReleaseVersionIndicator}}\",\n        \"DesiredIdentifierResultType\": \"{{DesiredIdentifierResultType}}\",\n        \"ResExpirationTimestamp\": \"{{ResExpirationTimestamp}}\",\n        \"VendorInformation\": \"{{VendorInformation}}\",\n        \"Operation\": \"{{Operation}}\",\n        \"ResultPersistence\": \"{{ResultPersistence}}\",\n        \"AuthorizationRelationshipIndicator\": \"{{AuthorizationRelationshipIndicator}}\",\n        \"FilterCriteria\": \"{{FilterCriteria}}\"\n    }\n}", 
            "time": 1560272432546, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(201)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_csv/1?query=/iot3/example/cipher&header=cipherInfo',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData[\"cipherInfo.GroupRequestIdentifier\"]);", 
                            "    pm.environment.set(\"ToAddress\",currentData[\"cipherInfo.ToAddress\"]);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData[\"cipherInfo.OriginatingTimestamp\"]);", 
                            "    pm.environment.set(\"ResultContent\",currentData[\"cipherInfo.ResultContent\"]);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData[\"cipherInfo.SemanticQueryIndicator\"]);", 
                            "    pm.environment.set(\"EventCategory\",currentData[\"cipherInfo.EventCategory\"]);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData[\"cipherInfo.OperationalExecutionTime\"]);", 
                            "    pm.environment.set(\"maxByteSize\",currentData[\"cipherInfo.content.maxByteSize\"]);", 
                            "    pm.environment.set(\"algorithm\",currentData[\"cipherInfo.content.algorithm\"]);", 
                            "    pm.environment.set(\"resourceType\",currentData[\"cipherInfo.content.resourceType\"]);", 
                            "    pm.environment.set(\"accessControlPolicyIDs\",currentData[\"cipherInfo.content.accessControlPolicyIDs\"]);", 
                            "    pm.environment.set(\"keyData\",currentData[\"cipherInfo.content.keyData\"]);", 
                            "    pm.environment.set(\"creationTime\",currentData[\"cipherInfo.content.creationTime\"]);", 
                            "    pm.environment.set(\"sensitiveData\",currentData[\"cipherInfo.content.sensitiveData\"]);", 
                            "    pm.environment.set(\"calculatedData\",currentData[\"cipherInfo.content.calculatedData\"]);", 
                            "    pm.environment.set(\"parentID\",currentData[\"cipherInfo.content.parentID\"]);", 
                            "    pm.environment.set(\"lastModifiedTime\",currentData[\"cipherInfo.content.lastModifiedTime\"]);", 
                            "    pm.environment.set(\"resourceName\",currentData[\"cipherInfo.content.resourceName\"]);", 
                            "    pm.environment.set(\"expirationTime\",currentData[\"cipherInfo.content.expirationTime\"]);", 
                            "    pm.environment.set(\"resourceID\",currentData[\"cipherInfo.content.resourceID\"]);", 
                            "    pm.environment.set(\"currentByteSize\",currentData[\"cipherInfo.content.currentByteSize\"]);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData[\"cipherInfo.AuthorizationSignatureIndicator\"]);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData[\"cipherInfo.LocalTokenIDs\"]);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData[\"cipherInfo.AuthorizationSignature\"]);", 
                            "    pm.environment.set(\"Tokens\",currentData[\"cipherInfo.Tokens\"]);", 
                            "    pm.environment.set(\"VendorInformation\",currentData[\"cipherInfo.VendorInformation\"]);", 
                            "    pm.environment.set(\"ResponseType\",currentData[\"cipherInfo.ResponseType\"]);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData[\"cipherInfo.TokenRequestIndicator\"]);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData[\"cipherInfo.GroupRequestTargetMembers\"]);", 
                            "    pm.environment.set(\"FromId\",currentData[\"cipherInfo.FromId\"]);", 
                            "    pm.environment.set(\"RequestId\",currentData[\"cipherInfo.RequestId\"]);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData[\"cipherInfo.ReqExpirationTimestamp\"]);", 
                            "    pm.environment.set(\"TokenIDs\",currentData[\"cipherInfo.TokenIDs\"]);", 
                            "    pm.environment.set(\"resourceType\",currentData[\"cipherInfo.resourceType\"]);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData[\"cipherInfo.DeliveryAggregation\"]);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData[\"cipherInfo.ReleaseVersionIndicator\"]);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData[\"cipherInfo.DesiredIdentifierResultType\"]);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData[\"cipherInfo.ResExpirationTimestamp\"]);", 
                            "    pm.environment.set(\"RoleIDs\",currentData[\"cipherInfo.RoleIDs\"]);", 
                            "    pm.environment.set(\"Operation\",currentData[\"cipherInfo.Operation\"]);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData[\"cipherInfo.ResultPersistence\"]);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData[\"cipherInfo.AuthorizationRelationshipIndicator\"]);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData[\"cipherInfo.FilterCriteria\"]);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "POST", 
            "preRequestScript": "", 
            "data": [], 
            "id": "bfdf5eb2-3017-4ad6-8c18-e216a24f77c8226", 
            "description": "This method is used to create a cipher resource."
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance", 
            "name": "TC_201", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"connectionInstanceInfo\": {\n        \"ResponseType\": \"{{ResponseType}}\",\n        \"GroupRequestIdentifier\": \"{{GroupRequestIdentifier}}\",\n        \"ToAddress\": \"{{ToAddress}}\",\n        \"OriginatingTimestamp\": \"{{OriginatingTimestamp}}\",\n        \"TokenRequestIndicator\": \"{{TokenRequestIndicator}}\",\n        \"GroupRequestTargetMembers\": \"{{GroupRequestTargetMembers}}\",\n        \"ResultContent\": \"{{ResultContent}}\",\n        \"SemanticQueryIndicator\": \"{{SemanticQueryIndicator}}\",\n        \"AuthorizationSignature\": \"{{AuthorizationSignature}}\",\n        \"OperationalExecutionTime\": \"{{OperationalExecutionTime}}\",\n        \"FromId\": \"{{FromId}}\",\n        \"RequestId\": \"{{RequestId}}\",\n        \"ReqExpirationTimestamp\": \"{{ReqExpirationTimestamp}}\",\n        \"EventCategory\": \"{{EventCategory}}\",\n        \"TokenIDs\": \"{{TokenIDs}}\",\n        \"RoleIDs\": \"{{RoleIDs}}\",\n        \"Tokens\": \"{{Tokens}}\",\n        \"resourceType\": \"{{resourceType}}\",\n        \"AuthorizationSignatureIndicator\": \"{{AuthorizationSignatureIndicator}}\",\n        \"LocalTokenIDs\": \"{{LocalTokenIDs}}\",\n        \"DeliveryAggregation\": \"{{DeliveryAggregation}}\",\n        \"content\": {\n            \"destinationURI\": \"{{destinationURI}}\",\n            \"negotiatedKey\": \"{{negotiatedKey}}\",\n            \"incomingPayloadData\": \"{{incomingPayloadData}}\",\n            \"negotiatedCipherSuite\": \"{{negotiatedCipherSuite}}\",\n            \"outgoingPayloadData\": \"{{outgoingPayloadData}}\",\n            \"resourceType\": \"{{resourceType}}\",\n            \"accessControlPolicyIDs\": \"{{accessControlPolicyIDs}}\",\n            \"creationTime\": \"{{creationTime}}\",\n            \"parentID\": \"{{parentID}}\",\n            \"lastModifiedTime\": \"{{lastModifiedTime}}\",\n            \"resourceName\": \"{{resourceName}}\",\n            \"expirationTime\": \"{{expirationTime}}\",\n            \"resourceID\": \"{{resourceID}}\"\n        },\n        \"ReleaseVersionIndicator\": \"{{ReleaseVersionIndicator}}\",\n        \"DesiredIdentifierResultType\": \"{{DesiredIdentifierResultType}}\",\n        \"ResExpirationTimestamp\": \"{{ResExpirationTimestamp}}\",\n        \"VendorInformation\": \"{{VendorInformation}}\",\n        \"Operation\": \"{{Operation}}\",\n        \"ResultPersistence\": \"{{ResultPersistence}}\",\n        \"AuthorizationRelationshipIndicator\": \"{{AuthorizationRelationshipIndicator}}\",\n        \"FilterCriteria\": \"{{FilterCriteria}}\"\n    }\n}", 
            "time": 1560272432546, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(201)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_csv/1?query=/iot3/example/connectionInstance&header=connectionInstanceInfo',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData[\"connectionInstanceInfo.GroupRequestIdentifier\"]);", 
                            "    pm.environment.set(\"ToAddress\",currentData[\"connectionInstanceInfo.ToAddress\"]);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData[\"connectionInstanceInfo.OriginatingTimestamp\"]);", 
                            "    pm.environment.set(\"ResultContent\",currentData[\"connectionInstanceInfo.ResultContent\"]);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData[\"connectionInstanceInfo.SemanticQueryIndicator\"]);", 
                            "    pm.environment.set(\"EventCategory\",currentData[\"connectionInstanceInfo.EventCategory\"]);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData[\"connectionInstanceInfo.OperationalExecutionTime\"]);", 
                            "    pm.environment.set(\"destinationURI\",currentData[\"connectionInstanceInfo.content.destinationURI\"]);", 
                            "    pm.environment.set(\"negotiatedKey\",currentData[\"connectionInstanceInfo.content.negotiatedKey\"]);", 
                            "    pm.environment.set(\"incomingPayloadData\",currentData[\"connectionInstanceInfo.content.incomingPayloadData\"]);", 
                            "    pm.environment.set(\"negotiatedCipherSuite\",currentData[\"connectionInstanceInfo.content.negotiatedCipherSuite\"]);", 
                            "    pm.environment.set(\"outgoingPayloadData\",currentData[\"connectionInstanceInfo.content.outgoingPayloadData\"]);", 
                            "    pm.environment.set(\"resourceType\",currentData[\"connectionInstanceInfo.content.resourceType\"]);", 
                            "    pm.environment.set(\"accessControlPolicyIDs\",currentData[\"connectionInstanceInfo.content.accessControlPolicyIDs\"]);", 
                            "    pm.environment.set(\"creationTime\",currentData[\"connectionInstanceInfo.content.creationTime\"]);", 
                            "    pm.environment.set(\"parentID\",currentData[\"connectionInstanceInfo.content.parentID\"]);", 
                            "    pm.environment.set(\"resourceName\",currentData[\"connectionInstanceInfo.content.resourceName\"]);", 
                            "    pm.environment.set(\"lastModifiedTime\",currentData[\"connectionInstanceInfo.content.lastModifiedTime\"]);", 
                            "    pm.environment.set(\"resourceID\",currentData[\"connectionInstanceInfo.content.resourceID\"]);", 
                            "    pm.environment.set(\"expirationTime\",currentData[\"connectionInstanceInfo.content.expirationTime\"]);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData[\"connectionInstanceInfo.AuthorizationSignatureIndicator\"]);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData[\"connectionInstanceInfo.LocalTokenIDs\"]);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData[\"connectionInstanceInfo.AuthorizationSignature\"]);", 
                            "    pm.environment.set(\"Tokens\",currentData[\"connectionInstanceInfo.Tokens\"]);", 
                            "    pm.environment.set(\"VendorInformation\",currentData[\"connectionInstanceInfo.VendorInformation\"]);", 
                            "    pm.environment.set(\"ResponseType\",currentData[\"connectionInstanceInfo.ResponseType\"]);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData[\"connectionInstanceInfo.TokenRequestIndicator\"]);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData[\"connectionInstanceInfo.GroupRequestTargetMembers\"]);", 
                            "    pm.environment.set(\"FromId\",currentData[\"connectionInstanceInfo.FromId\"]);", 
                            "    pm.environment.set(\"RequestId\",currentData[\"connectionInstanceInfo.RequestId\"]);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData[\"connectionInstanceInfo.ReqExpirationTimestamp\"]);", 
                            "    pm.environment.set(\"TokenIDs\",currentData[\"connectionInstanceInfo.TokenIDs\"]);", 
                            "    pm.environment.set(\"resourceType\",currentData[\"connectionInstanceInfo.resourceType\"]);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData[\"connectionInstanceInfo.DeliveryAggregation\"]);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData[\"connectionInstanceInfo.ReleaseVersionIndicator\"]);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData[\"connectionInstanceInfo.DesiredIdentifierResultType\"]);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData[\"connectionInstanceInfo.ResExpirationTimestamp\"]);", 
                            "    pm.environment.set(\"RoleIDs\",currentData[\"connectionInstanceInfo.RoleIDs\"]);", 
                            "    pm.environment.set(\"Operation\",currentData[\"connectionInstanceInfo.Operation\"]);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData[\"connectionInstanceInfo.ResultPersistence\"]);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData[\"connectionInstanceInfo.AuthorizationRelationshipIndicator\"]);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData[\"connectionInstanceInfo.FilterCriteria\"]);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "POST", 
            "preRequestScript": "", 
            "data": [], 
            "id": "f8571c7f-84f4-49ec-9a3a-c2347e77660b227", 
            "description": "This method is used to create a connectionInstance resource."
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature", 
            "name": "TC_201", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"signatureInfo\": {\n        \"ResponseType\": \"{{ResponseType}}\",\n        \"GroupRequestIdentifier\": \"{{GroupRequestIdentifier}}\",\n        \"ToAddress\": \"{{ToAddress}}\",\n        \"OriginatingTimestamp\": \"{{OriginatingTimestamp}}\",\n        \"TokenRequestIndicator\": \"{{TokenRequestIndicator}}\",\n        \"GroupRequestTargetMembers\": \"{{GroupRequestTargetMembers}}\",\n        \"ResultContent\": \"{{ResultContent}}\",\n        \"SemanticQueryIndicator\": \"{{SemanticQueryIndicator}}\",\n        \"AuthorizationSignature\": \"{{AuthorizationSignature}}\",\n        \"OperationalExecutionTime\": \"{{OperationalExecutionTime}}\",\n        \"FromId\": \"{{FromId}}\",\n        \"RequestId\": \"{{RequestId}}\",\n        \"ReqExpirationTimestamp\": \"{{ReqExpirationTimestamp}}\",\n        \"EventCategory\": \"{{EventCategory}}\",\n        \"TokenIDs\": \"{{TokenIDs}}\",\n        \"RoleIDs\": \"{{RoleIDs}}\",\n        \"Tokens\": \"{{Tokens}}\",\n        \"resourceType\": \"{{resourceType}}\",\n        \"AuthorizationSignatureIndicator\": \"{{AuthorizationSignatureIndicator}}\",\n        \"LocalTokenIDs\": \"{{LocalTokenIDs}}\",\n        \"DeliveryAggregation\": \"{{DeliveryAggregation}}\",\n        \"content\": {\n            \"verificationResult\": \"{{verificationResult}}\",\n            \"algorithm\": \"{{algorithm}}\",\n            \"resourceType\": \"{{resourceType}}\",\n            \"accessControlPolicyIDs\": \"{{accessControlPolicyIDs}}\",\n            \"keyData\": \"{{keyData}}\",\n            \"parentID\": \"{{parentID}}\",\n            \"creationTime\": \"{{creationTime}}\",\n            \"signature\": \"{{signature}}\",\n            \"lastModifiedTime\": \"{{lastModifiedTime}}\",\n            \"resourceName\": \"{{resourceName}}\",\n            \"message\": \"{{message}}\",\n            \"resourceID\": \"{{resourceID}}\",\n            \"expirationTime\": \"{{expirationTime}}\",\n            \"keyInformation\": \"{{keyInformation}}\"\n        },\n        \"ReleaseVersionIndicator\": \"{{ReleaseVersionIndicator}}\",\n        \"DesiredIdentifierResultType\": \"{{DesiredIdentifierResultType}}\",\n        \"ResExpirationTimestamp\": \"{{ResExpirationTimestamp}}\",\n        \"VendorInformation\": \"{{VendorInformation}}\",\n        \"Operation\": \"{{Operation}}\",\n        \"ResultPersistence\": \"{{ResultPersistence}}\",\n        \"AuthorizationRelationshipIndicator\": \"{{AuthorizationRelationshipIndicator}}\",\n        \"FilterCriteria\": \"{{FilterCriteria}}\"\n    }\n}", 
            "time": 1560272432547, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(201)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_csv/1?query=/iot3/example/signature&header=signatureInfo',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData[\"signatureInfo.GroupRequestIdentifier\"]);", 
                            "    pm.environment.set(\"ToAddress\",currentData[\"signatureInfo.ToAddress\"]);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData[\"signatureInfo.OriginatingTimestamp\"]);", 
                            "    pm.environment.set(\"ResultContent\",currentData[\"signatureInfo.ResultContent\"]);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData[\"signatureInfo.SemanticQueryIndicator\"]);", 
                            "    pm.environment.set(\"EventCategory\",currentData[\"signatureInfo.EventCategory\"]);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData[\"signatureInfo.OperationalExecutionTime\"]);", 
                            "    pm.environment.set(\"expirationTime\",currentData[\"signatureInfo.content.expirationTime\"]);", 
                            "    pm.environment.set(\"verificationResult\",currentData[\"signatureInfo.content.verificationResult\"]);", 
                            "    pm.environment.set(\"algorithm\",currentData[\"signatureInfo.content.algorithm\"]);", 
                            "    pm.environment.set(\"resourceType\",currentData[\"signatureInfo.content.resourceType\"]);", 
                            "    pm.environment.set(\"accessControlPolicyIDs\",currentData[\"signatureInfo.content.accessControlPolicyIDs\"]);", 
                            "    pm.environment.set(\"keyData\",currentData[\"signatureInfo.content.keyData\"]);", 
                            "    pm.environment.set(\"signature\",currentData[\"signatureInfo.content.signature\"]);", 
                            "    pm.environment.set(\"creationTime\",currentData[\"signatureInfo.content.creationTime\"]);", 
                            "    pm.environment.set(\"parentID\",currentData[\"signatureInfo.content.parentID\"]);", 
                            "    pm.environment.set(\"resourceName\",currentData[\"signatureInfo.content.resourceName\"]);", 
                            "    pm.environment.set(\"lastModifiedTime\",currentData[\"signatureInfo.content.lastModifiedTime\"]);", 
                            "    pm.environment.set(\"resourceID\",currentData[\"signatureInfo.content.resourceID\"]);", 
                            "    pm.environment.set(\"message\",currentData[\"signatureInfo.content.message\"]);", 
                            "    pm.environment.set(\"keyInformation\",currentData[\"signatureInfo.content.keyInformation\"]);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData[\"signatureInfo.AuthorizationSignatureIndicator\"]);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData[\"signatureInfo.LocalTokenIDs\"]);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData[\"signatureInfo.AuthorizationSignature\"]);", 
                            "    pm.environment.set(\"Tokens\",currentData[\"signatureInfo.Tokens\"]);", 
                            "    pm.environment.set(\"VendorInformation\",currentData[\"signatureInfo.VendorInformation\"]);", 
                            "    pm.environment.set(\"ResponseType\",currentData[\"signatureInfo.ResponseType\"]);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData[\"signatureInfo.TokenRequestIndicator\"]);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData[\"signatureInfo.GroupRequestTargetMembers\"]);", 
                            "    pm.environment.set(\"FromId\",currentData[\"signatureInfo.FromId\"]);", 
                            "    pm.environment.set(\"RequestId\",currentData[\"signatureInfo.RequestId\"]);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData[\"signatureInfo.ReqExpirationTimestamp\"]);", 
                            "    pm.environment.set(\"TokenIDs\",currentData[\"signatureInfo.TokenIDs\"]);", 
                            "    pm.environment.set(\"resourceType\",currentData[\"signatureInfo.resourceType\"]);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData[\"signatureInfo.DeliveryAggregation\"]);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData[\"signatureInfo.ReleaseVersionIndicator\"]);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData[\"signatureInfo.DesiredIdentifierResultType\"]);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData[\"signatureInfo.ResExpirationTimestamp\"]);", 
                            "    pm.environment.set(\"RoleIDs\",currentData[\"signatureInfo.RoleIDs\"]);", 
                            "    pm.environment.set(\"Operation\",currentData[\"signatureInfo.Operation\"]);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData[\"signatureInfo.ResultPersistence\"]);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData[\"signatureInfo.AuthorizationRelationshipIndicator\"]);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData[\"signatureInfo.FilterCriteria\"]);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "POST", 
            "preRequestScript": "", 
            "data": [], 
            "id": "b44b819e-0b3c-4579-a2e2-e62d3153283d228", 
            "description": "This method is used to create a signature resource."
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/sensitiveDataObject?ToAddress={{ToAddress}}&FromId={{FromId}}&resourceName={{resourceName}}", 
            "name": "TC_200", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"sensitiveDataObjectInfo\": {\n        \"content\": {\n            \"resourceType\": \"{{resourceType}}\",\n            \"accessControlPolicyIDs\": \"{{accessControlPolicyIDs}}\",\n            \"labels\": \"{{labels}}\",\n            \"creationTime\": \"{{creationTime}}\",\n            \"parentID\": \"{{parentID}}\",\n            \"lastModifiedTime\": \"{{lastModifiedTime}}\",\n            \"expirationTime\": \"{{expirationTime}}\",\n            \"resourceID\": \"{{resourceID}}\"\n        },\n        \"FromId\": \"{{FromId}}\",\n        \"ToAddress\": \"{{ToAddress}}\",\n        \"resourceName\": \"{{resourceName}}\"\n    }\n}", 
            "time": 1560272432542, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveDataObjectInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"labels\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['labels']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['sensitiveDataObjectInfo']['resourceName']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/230?query=/iot3/example/sensitiveDataObject?ToAddress={{ToAddress}}?FromId={{FromId}}?resourceName={{resourceName}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    pm.environment.set(\"resourceName\",currentData.resourceName);", 
                            "    pm.environment.set(\"resourceType\",currentData.sensitiveDataObjectInfo.content.resourceType);", 
                            "    pm.environment.set(\"accessControlPolicyIDs\",currentData.sensitiveDataObjectInfo.content.accessControlPolicyIDs);", 
                            "    pm.environment.set(\"labels\",currentData.sensitiveDataObjectInfo.content.labels);", 
                            "    pm.environment.set(\"creationTime\",currentData.sensitiveDataObjectInfo.content.creationTime);", 
                            "    pm.environment.set(\"parentID\",currentData.sensitiveDataObjectInfo.content.parentID);", 
                            "    pm.environment.set(\"lastModifiedTime\",currentData.sensitiveDataObjectInfo.content.lastModifiedTime);", 
                            "    pm.environment.set(\"resourceID\",currentData.sensitiveDataObjectInfo.content.resourceID);", 
                            "    pm.environment.set(\"expirationTime\",currentData.sensitiveDataObjectInfo.content.expirationTime);", 
                            "    pm.environment.set(\"FromId\",currentData.sensitiveDataObjectInfo.FromId);", 
                            "    pm.environment.set(\"ToAddress\",currentData.sensitiveDataObjectInfo.ToAddress);", 
                            "    pm.environment.set(\"resourceName\",currentData.sensitiveDataObjectInfo.resourceName);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PUT", 
            "preRequestScript": "", 
            "data": [], 
            "id": "e01a23c5-4d3a-446a-a219-4e84142bfb16229", 
            "description": "This method updates the information about a specific sensitiveDataObjectInfo resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?ToAddress={{ToAddress}}&FromId={{FromId}}&Operation={{Operation}}&RequestId={{RequestId}}&ResourceType={{ResourceType}}&OriginatingTimestamp={{OriginatingTimestamp}}&ReqExpirationTimestamp={{ReqExpirationTimestamp}}&ResExpirationTimestamp={{ResExpirationTimestamp}}&EventCategory={{EventCategory}}&OperationalExecutionTime={{OperationalExecutionTime}}&ResponseType={{ResponseType}}&ResultPersistence={{ResultPersistence}}&ResultContent={{ResultContent}}&DeliveryAggregation={{DeliveryAggregation}}&GroupRequestIdentifier={{GroupRequestIdentifier}}&FilterCriteria={{FilterCriteria}}&DesiredIdentifierResultType={{DesiredIdentifierResultType}}&TokenRequestIndicator={{TokenRequestIndicator}}&Tokens={{Tokens}}&TokenIDs={{TokenIDs}}&RoleIDs={{RoleIDs}}&LocalTokenIDs={{LocalTokenIDs}}&ReleaseVersionIndicator={{ReleaseVersionIndicator}}&VendorInformation={{VendorInformation}}&GroupRequestTargetMembers={{GroupRequestTargetMembers}}&AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}&AuthorizationSignature={{AuthorizationSignature}}&AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}&SemanticQueryIndicator={{SemanticQueryIndicator}}", 
            "name": "TC_200", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"secureConnectionInfo\": {\n        \"ResponseType\": \"{{ResponseType}}\",\n        \"GroupRequestIdentifier\": \"{{GroupRequestIdentifier}}\",\n        \"ToAddress\": \"{{ToAddress}}\",\n        \"OriginatingTimestamp\": \"{{OriginatingTimestamp}}\",\n        \"TokenRequestIndicator\": \"{{TokenRequestIndicator}}\",\n        \"GroupRequestTargetMembers\": \"{{GroupRequestTargetMembers}}\",\n        \"ResultContent\": \"{{ResultContent}}\",\n        \"SemanticQueryIndicator\": \"{{SemanticQueryIndicator}}\",\n        \"AuthorizationSignature\": \"{{AuthorizationSignature}}\",\n        \"OperationalExecutionTime\": \"{{OperationalExecutionTime}}\",\n        \"FromId\": \"{{FromId}}\",\n        \"RequestId\": \"{{RequestId}}\",\n        \"ReqExpirationTimestamp\": \"{{ReqExpirationTimestamp}}\",\n        \"EventCategory\": \"{{EventCategory}}\",\n        \"TokenIDs\": \"{{TokenIDs}}\",\n        \"RoleIDs\": \"{{RoleIDs}}\",\n        \"Tokens\": \"{{Tokens}}\",\n        \"resourceType\": \"{{resourceType}}\",\n        \"AuthorizationSignatureIndicator\": \"{{AuthorizationSignatureIndicator}}\",\n        \"LocalTokenIDs\": \"{{LocalTokenIDs}}\",\n        \"DeliveryAggregation\": \"{{DeliveryAggregation}}\",\n        \"content\": {\n            \"cipherSuite\": \"{{cipherSuite}}\",\n            \"currentNrOfInstances\": \"{{currentNrOfInstances}}\",\n            \"resourceType\": \"{{resourceType}}\",\n            \"accessControlPolicyIDs\": \"{{accessControlPolicyIDs}}\",\n            \"keyData\": \"{{keyData}}\",\n            \"maxNrOfInstances\": \"{{maxNrOfInstances}}\",\n            \"creationTime\": \"{{creationTime}}\",\n            \"connectionType\": \"{{connectionType}}\",\n            \"parentID\": \"{{parentID}}\",\n            \"lastModifiedTime\": \"{{lastModifiedTime}}\",\n            \"resourceName\": \"{{resourceName}}\",\n            \"expirationTime\": \"{{expirationTime}}\",\n            \"resourceID\": \"{{resourceID}}\",\n            \"keyInformation\": \"{{keyInformation}}\"\n        },\n        \"ReleaseVersionIndicator\": \"{{ReleaseVersionIndicator}}\",\n        \"DesiredIdentifierResultType\": \"{{DesiredIdentifierResultType}}\",\n        \"ResExpirationTimestamp\": \"{{ResExpirationTimestamp}}\",\n        \"VendorInformation\": \"{{VendorInformation}}\",\n        \"Operation\": \"{{Operation}}\",\n        \"ResultPersistence\": \"{{ResultPersistence}}\",\n        \"AuthorizationRelationshipIndicator\": \"{{AuthorizationRelationshipIndicator}}\",\n        \"FilterCriteria\": \"{{FilterCriteria}}\"\n    }\n}", 
            "time": 1560272432543, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"secureConnectionInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxNrOfInstances\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['cipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['currentNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['maxNrOfInstances']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['connectionType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['secureConnectionInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/231?query=/iot3/example/secureConnection?ToAddress={{ToAddress}}?FromId={{FromId}}?Operation={{Operation}}?RequestId={{RequestId}}?ResourceType={{ResourceType}}?OriginatingTimestamp={{OriginatingTimestamp}}?ReqExpirationTimestamp={{ReqExpirationTimestamp}}?ResExpirationTimestamp={{ResExpirationTimestamp}}?EventCategory={{EventCategory}}?OperationalExecutionTime={{OperationalExecutionTime}}?ResponseType={{ResponseType}}?ResultPersistence={{ResultPersistence}}?ResultContent={{ResultContent}}?DeliveryAggregation={{DeliveryAggregation}}?GroupRequestIdentifier={{GroupRequestIdentifier}}?FilterCriteria={{FilterCriteria}}?DesiredIdentifierResultType={{DesiredIdentifierResultType}}?TokenRequestIndicator={{TokenRequestIndicator}}?Tokens={{Tokens}}?TokenIDs={{TokenIDs}}?RoleIDs={{RoleIDs}}?LocalTokenIDs={{LocalTokenIDs}}?ReleaseVersionIndicator={{ReleaseVersionIndicator}}?VendorInformation={{VendorInformation}}?GroupRequestTargetMembers={{GroupRequestTargetMembers}}?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}?AuthorizationSignature={{AuthorizationSignature}}?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}?SemanticQueryIndicator={{SemanticQueryIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    pm.environment.set(\"Operation\",currentData.Operation);", 
                            "    pm.environment.set(\"RequestId\",currentData.RequestId);", 
                            "    pm.environment.set(\"ResourceType\",currentData.ResourceType);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.OriginatingTimestamp);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.ReqExpirationTimestamp);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.ResExpirationTimestamp);", 
                            "    pm.environment.set(\"EventCategory\",currentData.EventCategory);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.OperationalExecutionTime);", 
                            "    pm.environment.set(\"ResponseType\",currentData.ResponseType);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.ResultPersistence);", 
                            "    pm.environment.set(\"ResultContent\",currentData.ResultContent);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.DeliveryAggregation);", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.GroupRequestIdentifier);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.FilterCriteria);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.DesiredIdentifierResultType);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.TokenRequestIndicator);", 
                            "    pm.environment.set(\"Tokens\",currentData.Tokens);", 
                            "    pm.environment.set(\"TokenIDs\",currentData.TokenIDs);", 
                            "    pm.environment.set(\"RoleIDs\",currentData.RoleIDs);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.LocalTokenIDs);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.ReleaseVersionIndicator);", 
                            "    pm.environment.set(\"VendorInformation\",currentData.VendorInformation);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.GroupRequestTargetMembers);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.AuthorizationSignatureIndicator);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.AuthorizationSignature);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.AuthorizationRelationshipIndicator);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.SemanticQueryIndicator);", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.secureConnectionInfo.GroupRequestIdentifier);", 
                            "    pm.environment.set(\"ToAddress\",currentData.secureConnectionInfo.ToAddress);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.secureConnectionInfo.OriginatingTimestamp);", 
                            "    pm.environment.set(\"ResultContent\",currentData.secureConnectionInfo.ResultContent);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.secureConnectionInfo.SemanticQueryIndicator);", 
                            "    pm.environment.set(\"EventCategory\",currentData.secureConnectionInfo.EventCategory);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.secureConnectionInfo.OperationalExecutionTime);", 
                            "    pm.environment.set(\"cipherSuite\",currentData.secureConnectionInfo.content.cipherSuite);", 
                            "    pm.environment.set(\"currentNrOfInstances\",currentData.secureConnectionInfo.content.currentNrOfInstances);", 
                            "    pm.environment.set(\"resourceType\",currentData.secureConnectionInfo.content.resourceType);", 
                            "    pm.environment.set(\"accessControlPolicyIDs\",currentData.secureConnectionInfo.content.accessControlPolicyIDs);", 
                            "    pm.environment.set(\"keyData\",currentData.secureConnectionInfo.content.keyData);", 
                            "    pm.environment.set(\"parentID\",currentData.secureConnectionInfo.content.parentID);", 
                            "    pm.environment.set(\"creationTime\",currentData.secureConnectionInfo.content.creationTime);", 
                            "    pm.environment.set(\"connectionType\",currentData.secureConnectionInfo.content.connectionType);", 
                            "    pm.environment.set(\"maxNrOfInstances\",currentData.secureConnectionInfo.content.maxNrOfInstances);", 
                            "    pm.environment.set(\"resourceName\",currentData.secureConnectionInfo.content.resourceName);", 
                            "    pm.environment.set(\"lastModifiedTime\",currentData.secureConnectionInfo.content.lastModifiedTime);", 
                            "    pm.environment.set(\"resourceID\",currentData.secureConnectionInfo.content.resourceID);", 
                            "    pm.environment.set(\"expirationTime\",currentData.secureConnectionInfo.content.expirationTime);", 
                            "    pm.environment.set(\"keyInformation\",currentData.secureConnectionInfo.content.keyInformation);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.secureConnectionInfo.AuthorizationSignatureIndicator);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.secureConnectionInfo.LocalTokenIDs);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.secureConnectionInfo.AuthorizationSignature);", 
                            "    pm.environment.set(\"Tokens\",currentData.secureConnectionInfo.Tokens);", 
                            "    pm.environment.set(\"VendorInformation\",currentData.secureConnectionInfo.VendorInformation);", 
                            "    pm.environment.set(\"ResponseType\",currentData.secureConnectionInfo.ResponseType);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.secureConnectionInfo.TokenRequestIndicator);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.secureConnectionInfo.GroupRequestTargetMembers);", 
                            "    pm.environment.set(\"FromId\",currentData.secureConnectionInfo.FromId);", 
                            "    pm.environment.set(\"RequestId\",currentData.secureConnectionInfo.RequestId);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.secureConnectionInfo.ReqExpirationTimestamp);", 
                            "    pm.environment.set(\"TokenIDs\",currentData.secureConnectionInfo.TokenIDs);", 
                            "    pm.environment.set(\"resourceType\",currentData.secureConnectionInfo.resourceType);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.secureConnectionInfo.DeliveryAggregation);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.secureConnectionInfo.ReleaseVersionIndicator);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.secureConnectionInfo.DesiredIdentifierResultType);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.secureConnectionInfo.ResExpirationTimestamp);", 
                            "    pm.environment.set(\"RoleIDs\",currentData.secureConnectionInfo.RoleIDs);", 
                            "    pm.environment.set(\"Operation\",currentData.secureConnectionInfo.Operation);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.secureConnectionInfo.ResultPersistence);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.secureConnectionInfo.AuthorizationRelationshipIndicator);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.secureConnectionInfo.FilterCriteria);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PUT", 
            "preRequestScript": "", 
            "data": [], 
            "id": "7a11e6e4-a282-414e-86c8-e672c11af5ca230", 
            "description": "This method updates the information about a specific secureConnectionInfo resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?ToAddress={{ToAddress}}&FromId={{FromId}}&Operation={{Operation}}&RequestId={{RequestId}}&ResourceType={{ResourceType}}&OriginatingTimestamp={{OriginatingTimestamp}}&ReqExpirationTimestamp={{ReqExpirationTimestamp}}&ResExpirationTimestamp={{ResExpirationTimestamp}}&EventCategory={{EventCategory}}&OperationalExecutionTime={{OperationalExecutionTime}}&ResponseType={{ResponseType}}&ResultPersistence={{ResultPersistence}}&ResultContent={{ResultContent}}&DeliveryAggregation={{DeliveryAggregation}}&GroupRequestIdentifier={{GroupRequestIdentifier}}&FilterCriteria={{FilterCriteria}}&DesiredIdentifierResultType={{DesiredIdentifierResultType}}&TokenRequestIndicator={{TokenRequestIndicator}}&Tokens={{Tokens}}&TokenIDs={{TokenIDs}}&RoleIDs={{RoleIDs}}&LocalTokenIDs={{LocalTokenIDs}}&ReleaseVersionIndicator={{ReleaseVersionIndicator}}&VendorInformation={{VendorInformation}}&GroupRequestTargetMembers={{GroupRequestTargetMembers}}&AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}&AuthorizationSignature={{AuthorizationSignature}}&AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}&SemanticQueryIndicator={{SemanticQueryIndicator}}", 
            "name": "TC_200", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"hashInfo\": {\n        \"ResponseType\": \"{{ResponseType}}\",\n        \"GroupRequestIdentifier\": \"{{GroupRequestIdentifier}}\",\n        \"ToAddress\": \"{{ToAddress}}\",\n        \"OriginatingTimestamp\": \"{{OriginatingTimestamp}}\",\n        \"TokenRequestIndicator\": \"{{TokenRequestIndicator}}\",\n        \"GroupRequestTargetMembers\": \"{{GroupRequestTargetMembers}}\",\n        \"ResultContent\": \"{{ResultContent}}\",\n        \"SemanticQueryIndicator\": \"{{SemanticQueryIndicator}}\",\n        \"AuthorizationSignature\": \"{{AuthorizationSignature}}\",\n        \"OperationalExecutionTime\": \"{{OperationalExecutionTime}}\",\n        \"FromId\": \"{{FromId}}\",\n        \"RequestId\": \"{{RequestId}}\",\n        \"ReqExpirationTimestamp\": \"{{ReqExpirationTimestamp}}\",\n        \"EventCategory\": \"{{EventCategory}}\",\n        \"TokenIDs\": \"{{TokenIDs}}\",\n        \"RoleIDs\": \"{{RoleIDs}}\",\n        \"Tokens\": \"{{Tokens}}\",\n        \"resourceType\": \"{{resourceType}}\",\n        \"AuthorizationSignatureIndicator\": \"{{AuthorizationSignatureIndicator}}\",\n        \"LocalTokenIDs\": \"{{LocalTokenIDs}}\",\n        \"DeliveryAggregation\": \"{{DeliveryAggregation}}\",\n        \"content\": {\n            \"hashValue\": \"{{hashValue}}\",\n            \"expirationTime\": \"{{expirationTime}}\",\n            \"algorithm\": \"{{algorithm}}\",\n            \"resourceType\": \"{{resourceType}}\",\n            \"accessControlPolicyIDs\": \"{{accessControlPolicyIDs}}\",\n            \"creationTime\": \"{{creationTime}}\",\n            \"parentID\": \"{{parentID}}\",\n            \"resourceName\": \"{{resourceName}}\",\n            \"message\": \"{{message}}\",\n            \"resourceID\": \"{{resourceID}}\",\n            \"lastModifiedTime\": \"{{lastModifiedTime}}\"\n        },\n        \"ReleaseVersionIndicator\": \"{{ReleaseVersionIndicator}}\",\n        \"DesiredIdentifierResultType\": \"{{DesiredIdentifierResultType}}\",\n        \"ResExpirationTimestamp\": \"{{ResExpirationTimestamp}}\",\n        \"VendorInformation\": \"{{VendorInformation}}\",\n        \"Operation\": \"{{Operation}}\",\n        \"ResultPersistence\": \"{{ResultPersistence}}\",\n        \"AuthorizationRelationshipIndicator\": \"{{AuthorizationRelationshipIndicator}}\",\n        \"FilterCriteria\": \"{{FilterCriteria}}\"\n    }\n}", 
            "time": 1560272432543, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"hashInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"hashValue\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['hashValue']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['hashInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/232?query=/iot3/example/hash?ToAddress={{ToAddress}}?FromId={{FromId}}?Operation={{Operation}}?RequestId={{RequestId}}?ResourceType={{ResourceType}}?OriginatingTimestamp={{OriginatingTimestamp}}?ReqExpirationTimestamp={{ReqExpirationTimestamp}}?ResExpirationTimestamp={{ResExpirationTimestamp}}?EventCategory={{EventCategory}}?OperationalExecutionTime={{OperationalExecutionTime}}?ResponseType={{ResponseType}}?ResultPersistence={{ResultPersistence}}?ResultContent={{ResultContent}}?DeliveryAggregation={{DeliveryAggregation}}?GroupRequestIdentifier={{GroupRequestIdentifier}}?FilterCriteria={{FilterCriteria}}?DesiredIdentifierResultType={{DesiredIdentifierResultType}}?TokenRequestIndicator={{TokenRequestIndicator}}?Tokens={{Tokens}}?TokenIDs={{TokenIDs}}?RoleIDs={{RoleIDs}}?LocalTokenIDs={{LocalTokenIDs}}?ReleaseVersionIndicator={{ReleaseVersionIndicator}}?VendorInformation={{VendorInformation}}?GroupRequestTargetMembers={{GroupRequestTargetMembers}}?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}?AuthorizationSignature={{AuthorizationSignature}}?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}?SemanticQueryIndicator={{SemanticQueryIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    pm.environment.set(\"Operation\",currentData.Operation);", 
                            "    pm.environment.set(\"RequestId\",currentData.RequestId);", 
                            "    pm.environment.set(\"ResourceType\",currentData.ResourceType);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.OriginatingTimestamp);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.ReqExpirationTimestamp);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.ResExpirationTimestamp);", 
                            "    pm.environment.set(\"EventCategory\",currentData.EventCategory);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.OperationalExecutionTime);", 
                            "    pm.environment.set(\"ResponseType\",currentData.ResponseType);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.ResultPersistence);", 
                            "    pm.environment.set(\"ResultContent\",currentData.ResultContent);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.DeliveryAggregation);", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.GroupRequestIdentifier);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.FilterCriteria);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.DesiredIdentifierResultType);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.TokenRequestIndicator);", 
                            "    pm.environment.set(\"Tokens\",currentData.Tokens);", 
                            "    pm.environment.set(\"TokenIDs\",currentData.TokenIDs);", 
                            "    pm.environment.set(\"RoleIDs\",currentData.RoleIDs);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.LocalTokenIDs);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.ReleaseVersionIndicator);", 
                            "    pm.environment.set(\"VendorInformation\",currentData.VendorInformation);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.GroupRequestTargetMembers);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.AuthorizationSignatureIndicator);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.AuthorizationSignature);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.AuthorizationRelationshipIndicator);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.SemanticQueryIndicator);", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.hashInfo.GroupRequestIdentifier);", 
                            "    pm.environment.set(\"ToAddress\",currentData.hashInfo.ToAddress);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.hashInfo.OriginatingTimestamp);", 
                            "    pm.environment.set(\"ResultContent\",currentData.hashInfo.ResultContent);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.hashInfo.SemanticQueryIndicator);", 
                            "    pm.environment.set(\"EventCategory\",currentData.hashInfo.EventCategory);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.hashInfo.OperationalExecutionTime);", 
                            "    pm.environment.set(\"hashValue\",currentData.hashInfo.content.hashValue);", 
                            "    pm.environment.set(\"algorithm\",currentData.hashInfo.content.algorithm);", 
                            "    pm.environment.set(\"resourceType\",currentData.hashInfo.content.resourceType);", 
                            "    pm.environment.set(\"accessControlPolicyIDs\",currentData.hashInfo.content.accessControlPolicyIDs);", 
                            "    pm.environment.set(\"creationTime\",currentData.hashInfo.content.creationTime);", 
                            "    pm.environment.set(\"parentID\",currentData.hashInfo.content.parentID);", 
                            "    pm.environment.set(\"lastModifiedTime\",currentData.hashInfo.content.lastModifiedTime);", 
                            "    pm.environment.set(\"resourceName\",currentData.hashInfo.content.resourceName);", 
                            "    pm.environment.set(\"expirationTime\",currentData.hashInfo.content.expirationTime);", 
                            "    pm.environment.set(\"resourceID\",currentData.hashInfo.content.resourceID);", 
                            "    pm.environment.set(\"message\",currentData.hashInfo.content.message);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.hashInfo.AuthorizationSignatureIndicator);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.hashInfo.LocalTokenIDs);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.hashInfo.AuthorizationSignature);", 
                            "    pm.environment.set(\"Tokens\",currentData.hashInfo.Tokens);", 
                            "    pm.environment.set(\"VendorInformation\",currentData.hashInfo.VendorInformation);", 
                            "    pm.environment.set(\"ResponseType\",currentData.hashInfo.ResponseType);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.hashInfo.TokenRequestIndicator);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.hashInfo.GroupRequestTargetMembers);", 
                            "    pm.environment.set(\"FromId\",currentData.hashInfo.FromId);", 
                            "    pm.environment.set(\"RequestId\",currentData.hashInfo.RequestId);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.hashInfo.ReqExpirationTimestamp);", 
                            "    pm.environment.set(\"TokenIDs\",currentData.hashInfo.TokenIDs);", 
                            "    pm.environment.set(\"resourceType\",currentData.hashInfo.resourceType);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.hashInfo.DeliveryAggregation);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.hashInfo.ReleaseVersionIndicator);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.hashInfo.DesiredIdentifierResultType);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.hashInfo.ResExpirationTimestamp);", 
                            "    pm.environment.set(\"RoleIDs\",currentData.hashInfo.RoleIDs);", 
                            "    pm.environment.set(\"Operation\",currentData.hashInfo.Operation);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.hashInfo.ResultPersistence);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.hashInfo.AuthorizationRelationshipIndicator);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.hashInfo.FilterCriteria);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PUT", 
            "preRequestScript": "", 
            "data": [], 
            "id": "324d54b5-b59d-4cc6-a00b-2e8f8a66dda8231", 
            "description": "This method updates the information about a specific hashInfo resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?ToAddress={{ToAddress}}&FromId={{FromId}}&Operation={{Operation}}&RequestId={{RequestId}}&ResourceType={{ResourceType}}&OriginatingTimestamp={{OriginatingTimestamp}}&ReqExpirationTimestamp={{ReqExpirationTimestamp}}&ResExpirationTimestamp={{ResExpirationTimestamp}}&EventCategory={{EventCategory}}&OperationalExecutionTime={{OperationalExecutionTime}}&ResponseType={{ResponseType}}&ResultPersistence={{ResultPersistence}}&ResultContent={{ResultContent}}&DeliveryAggregation={{DeliveryAggregation}}&GroupRequestIdentifier={{GroupRequestIdentifier}}&FilterCriteria={{FilterCriteria}}&DesiredIdentifierResultType={{DesiredIdentifierResultType}}&TokenRequestIndicator={{TokenRequestIndicator}}&Tokens={{Tokens}}&TokenIDs={{TokenIDs}}&RoleIDs={{RoleIDs}}&LocalTokenIDs={{LocalTokenIDs}}&ReleaseVersionIndicator={{ReleaseVersionIndicator}}&VendorInformation={{VendorInformation}}&GroupRequestTargetMembers={{GroupRequestTargetMembers}}&AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}&AuthorizationSignature={{AuthorizationSignature}}&AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}&SemanticQueryIndicator={{SemanticQueryIndicator}}", 
            "name": "TC_200", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"identityInfo\": {\n        \"ResponseType\": \"{{ResponseType}}\",\n        \"GroupRequestIdentifier\": \"{{GroupRequestIdentifier}}\",\n        \"ToAddress\": \"{{ToAddress}}\",\n        \"OriginatingTimestamp\": \"{{OriginatingTimestamp}}\",\n        \"TokenRequestIndicator\": \"{{TokenRequestIndicator}}\",\n        \"GroupRequestTargetMembers\": \"{{GroupRequestTargetMembers}}\",\n        \"ResultContent\": \"{{ResultContent}}\",\n        \"SemanticQueryIndicator\": \"{{SemanticQueryIndicator}}\",\n        \"AuthorizationSignature\": \"{{AuthorizationSignature}}\",\n        \"OperationalExecutionTime\": \"{{OperationalExecutionTime}}\",\n        \"FromId\": \"{{FromId}}\",\n        \"RequestId\": \"{{RequestId}}\",\n        \"ReqExpirationTimestamp\": \"{{ReqExpirationTimestamp}}\",\n        \"EventCategory\": \"{{EventCategory}}\",\n        \"TokenIDs\": \"{{TokenIDs}}\",\n        \"RoleIDs\": \"{{RoleIDs}}\",\n        \"Tokens\": \"{{Tokens}}\",\n        \"resourceType\": \"{{resourceType}}\",\n        \"AuthorizationSignatureIndicator\": \"{{AuthorizationSignatureIndicator}}\",\n        \"LocalTokenIDs\": \"{{LocalTokenIDs}}\",\n        \"DeliveryAggregation\": \"{{DeliveryAggregation}}\",\n        \"content\": {\n            \"idData\": \"{{idData}}\",\n            \"resourceType\": \"{{resourceType}}\",\n            \"resourceID\": \"{{resourceID}}\",\n            \"keyData\": \"{{keyData}}\",\n            \"parentID\": \"{{parentID}}\",\n            \"creationTime\": \"{{creationTime}}\",\n            \"idName\": \"{{idName}}\",\n            \"receiverAuthenticationData\": \"{{receiverAuthenticationData}}\",\n            \"accessControlPolicyIDs\": \"{{accessControlPolicyIDs}}\",\n            \"lastModifiedTime\": \"{{lastModifiedTime}}\",\n            \"resourceName\": \"{{resourceName}}\",\n            \"expirationTime\": \"{{expirationTime}}\",\n            \"originatorAuthenticationData\": \"{{originatorAuthenticationData}}\"\n        },\n        \"ReleaseVersionIndicator\": \"{{ReleaseVersionIndicator}}\",\n        \"DesiredIdentifierResultType\": \"{{DesiredIdentifierResultType}}\",\n        \"ResExpirationTimestamp\": \"{{ResExpirationTimestamp}}\",\n        \"VendorInformation\": \"{{VendorInformation}}\",\n        \"Operation\": \"{{Operation}}\",\n        \"ResultPersistence\": \"{{ResultPersistence}}\",\n        \"AuthorizationRelationshipIndicator\": \"{{AuthorizationRelationshipIndicator}}\",\n        \"FilterCriteria\": \"{{FilterCriteria}}\"\n    }\n}", 
            "time": 1560272432544, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"identityInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"idName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"receiverAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"originatorAuthenticationData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['idName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['receiverAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['content']['originatorAuthenticationData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['identityInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/233?query=/iot3/example/identity?ToAddress={{ToAddress}}?FromId={{FromId}}?Operation={{Operation}}?RequestId={{RequestId}}?ResourceType={{ResourceType}}?OriginatingTimestamp={{OriginatingTimestamp}}?ReqExpirationTimestamp={{ReqExpirationTimestamp}}?ResExpirationTimestamp={{ResExpirationTimestamp}}?EventCategory={{EventCategory}}?OperationalExecutionTime={{OperationalExecutionTime}}?ResponseType={{ResponseType}}?ResultPersistence={{ResultPersistence}}?ResultContent={{ResultContent}}?DeliveryAggregation={{DeliveryAggregation}}?GroupRequestIdentifier={{GroupRequestIdentifier}}?FilterCriteria={{FilterCriteria}}?DesiredIdentifierResultType={{DesiredIdentifierResultType}}?TokenRequestIndicator={{TokenRequestIndicator}}?Tokens={{Tokens}}?TokenIDs={{TokenIDs}}?RoleIDs={{RoleIDs}}?LocalTokenIDs={{LocalTokenIDs}}?ReleaseVersionIndicator={{ReleaseVersionIndicator}}?VendorInformation={{VendorInformation}}?GroupRequestTargetMembers={{GroupRequestTargetMembers}}?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}?AuthorizationSignature={{AuthorizationSignature}}?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}?SemanticQueryIndicator={{SemanticQueryIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    pm.environment.set(\"Operation\",currentData.Operation);", 
                            "    pm.environment.set(\"RequestId\",currentData.RequestId);", 
                            "    pm.environment.set(\"ResourceType\",currentData.ResourceType);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.OriginatingTimestamp);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.ReqExpirationTimestamp);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.ResExpirationTimestamp);", 
                            "    pm.environment.set(\"EventCategory\",currentData.EventCategory);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.OperationalExecutionTime);", 
                            "    pm.environment.set(\"ResponseType\",currentData.ResponseType);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.ResultPersistence);", 
                            "    pm.environment.set(\"ResultContent\",currentData.ResultContent);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.DeliveryAggregation);", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.GroupRequestIdentifier);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.FilterCriteria);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.DesiredIdentifierResultType);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.TokenRequestIndicator);", 
                            "    pm.environment.set(\"Tokens\",currentData.Tokens);", 
                            "    pm.environment.set(\"TokenIDs\",currentData.TokenIDs);", 
                            "    pm.environment.set(\"RoleIDs\",currentData.RoleIDs);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.LocalTokenIDs);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.ReleaseVersionIndicator);", 
                            "    pm.environment.set(\"VendorInformation\",currentData.VendorInformation);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.GroupRequestTargetMembers);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.AuthorizationSignatureIndicator);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.AuthorizationSignature);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.AuthorizationRelationshipIndicator);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.SemanticQueryIndicator);", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.identityInfo.GroupRequestIdentifier);", 
                            "    pm.environment.set(\"ToAddress\",currentData.identityInfo.ToAddress);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.identityInfo.OriginatingTimestamp);", 
                            "    pm.environment.set(\"ResultContent\",currentData.identityInfo.ResultContent);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.identityInfo.SemanticQueryIndicator);", 
                            "    pm.environment.set(\"EventCategory\",currentData.identityInfo.EventCategory);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.identityInfo.OperationalExecutionTime);", 
                            "    pm.environment.set(\"resourceType\",currentData.identityInfo.content.resourceType);", 
                            "    pm.environment.set(\"resourceID\",currentData.identityInfo.content.resourceID);", 
                            "    pm.environment.set(\"keyData\",currentData.identityInfo.content.keyData);", 
                            "    pm.environment.set(\"creationTime\",currentData.identityInfo.content.creationTime);", 
                            "    pm.environment.set(\"idName\",currentData.identityInfo.content.idName);", 
                            "    pm.environment.set(\"receiverAuthenticationData\",currentData.identityInfo.content.receiverAuthenticationData);", 
                            "    pm.environment.set(\"resourceName\",currentData.identityInfo.content.resourceName);", 
                            "    pm.environment.set(\"parentID\",currentData.identityInfo.content.parentID);", 
                            "    pm.environment.set(\"accessControlPolicyIDs\",currentData.identityInfo.content.accessControlPolicyIDs);", 
                            "    pm.environment.set(\"idData\",currentData.identityInfo.content.idData);", 
                            "    pm.environment.set(\"lastModifiedTime\",currentData.identityInfo.content.lastModifiedTime);", 
                            "    pm.environment.set(\"expirationTime\",currentData.identityInfo.content.expirationTime);", 
                            "    pm.environment.set(\"originatorAuthenticationData\",currentData.identityInfo.content.originatorAuthenticationData);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.identityInfo.AuthorizationSignatureIndicator);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.identityInfo.LocalTokenIDs);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.identityInfo.AuthorizationSignature);", 
                            "    pm.environment.set(\"Tokens\",currentData.identityInfo.Tokens);", 
                            "    pm.environment.set(\"VendorInformation\",currentData.identityInfo.VendorInformation);", 
                            "    pm.environment.set(\"ResponseType\",currentData.identityInfo.ResponseType);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.identityInfo.TokenRequestIndicator);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.identityInfo.GroupRequestTargetMembers);", 
                            "    pm.environment.set(\"FromId\",currentData.identityInfo.FromId);", 
                            "    pm.environment.set(\"RequestId\",currentData.identityInfo.RequestId);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.identityInfo.ReqExpirationTimestamp);", 
                            "    pm.environment.set(\"TokenIDs\",currentData.identityInfo.TokenIDs);", 
                            "    pm.environment.set(\"resourceType\",currentData.identityInfo.resourceType);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.identityInfo.DeliveryAggregation);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.identityInfo.ReleaseVersionIndicator);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.identityInfo.DesiredIdentifierResultType);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.identityInfo.ResExpirationTimestamp);", 
                            "    pm.environment.set(\"RoleIDs\",currentData.identityInfo.RoleIDs);", 
                            "    pm.environment.set(\"Operation\",currentData.identityInfo.Operation);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.identityInfo.ResultPersistence);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.identityInfo.AuthorizationRelationshipIndicator);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.identityInfo.FilterCriteria);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PUT", 
            "preRequestScript": "", 
            "data": [], 
            "id": "6c64b157-876f-44a3-91f9-3e9ec7c8d79b232", 
            "description": "This method updates the information about a specific identityInfo resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?ToAddress={{ToAddress}}&FromId={{FromId}}&Operation={{Operation}}&RequestId={{RequestId}}&ResourceType={{ResourceType}}&OriginatingTimestamp={{OriginatingTimestamp}}&ReqExpirationTimestamp={{ReqExpirationTimestamp}}&ResExpirationTimestamp={{ResExpirationTimestamp}}&EventCategory={{EventCategory}}&OperationalExecutionTime={{OperationalExecutionTime}}&ResponseType={{ResponseType}}&ResultPersistence={{ResultPersistence}}&ResultContent={{ResultContent}}&DeliveryAggregation={{DeliveryAggregation}}&GroupRequestIdentifier={{GroupRequestIdentifier}}&FilterCriteria={{FilterCriteria}}&DesiredIdentifierResultType={{DesiredIdentifierResultType}}&TokenRequestIndicator={{TokenRequestIndicator}}&Tokens={{Tokens}}&TokenIDs={{TokenIDs}}&RoleIDs={{RoleIDs}}&LocalTokenIDs={{LocalTokenIDs}}&ReleaseVersionIndicator={{ReleaseVersionIndicator}}&VendorInformation={{VendorInformation}}&GroupRequestTargetMembers={{GroupRequestTargetMembers}}&AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}&AuthorizationSignature={{AuthorizationSignature}}&AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}&SemanticQueryIndicator={{SemanticQueryIndicator}}", 
            "name": "TC_200", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"randInfo\": {\n        \"ResponseType\": \"{{ResponseType}}\",\n        \"GroupRequestIdentifier\": \"{{GroupRequestIdentifier}}\",\n        \"ToAddress\": \"{{ToAddress}}\",\n        \"OriginatingTimestamp\": \"{{OriginatingTimestamp}}\",\n        \"TokenRequestIndicator\": \"{{TokenRequestIndicator}}\",\n        \"GroupRequestTargetMembers\": \"{{GroupRequestTargetMembers}}\",\n        \"ResultContent\": \"{{ResultContent}}\",\n        \"SemanticQueryIndicator\": \"{{SemanticQueryIndicator}}\",\n        \"AuthorizationSignature\": \"{{AuthorizationSignature}}\",\n        \"OperationalExecutionTime\": \"{{OperationalExecutionTime}}\",\n        \"FromId\": \"{{FromId}}\",\n        \"RequestId\": \"{{RequestId}}\",\n        \"ReqExpirationTimestamp\": \"{{ReqExpirationTimestamp}}\",\n        \"EventCategory\": \"{{EventCategory}}\",\n        \"TokenIDs\": \"{{TokenIDs}}\",\n        \"RoleIDs\": \"{{RoleIDs}}\",\n        \"Tokens\": \"{{Tokens}}\",\n        \"resourceType\": \"{{resourceType}}\",\n        \"AuthorizationSignatureIndicator\": \"{{AuthorizationSignatureIndicator}}\",\n        \"LocalTokenIDs\": \"{{LocalTokenIDs}}\",\n        \"DeliveryAggregation\": \"{{DeliveryAggregation}}\",\n        \"content\": {\n            \"resourceType\": \"{{resourceType}}\",\n            \"accessControlPolicyIDs\": \"{{accessControlPolicyIDs}}\",\n            \"requestedDataSize\": \"{{requestedDataSize}}\",\n            \"creationTime\": \"{{creationTime}}\",\n            \"randomData\": \"{{randomData}}\",\n            \"rngType\": \"{{rngType}}\",\n            \"parentID\": \"{{parentID}}\",\n            \"lastModifiedTime\": \"{{lastModifiedTime}}\",\n            \"resourceName\": \"{{resourceName}}\",\n            \"expirationTime\": \"{{expirationTime}}\",\n            \"resourceID\": \"{{resourceID}}\"\n        },\n        \"ReleaseVersionIndicator\": \"{{ReleaseVersionIndicator}}\",\n        \"DesiredIdentifierResultType\": \"{{DesiredIdentifierResultType}}\",\n        \"ResExpirationTimestamp\": \"{{ResExpirationTimestamp}}\",\n        \"VendorInformation\": \"{{VendorInformation}}\",\n        \"Operation\": \"{{Operation}}\",\n        \"ResultPersistence\": \"{{ResultPersistence}}\",\n        \"AuthorizationRelationshipIndicator\": \"{{AuthorizationRelationshipIndicator}}\",\n        \"FilterCriteria\": \"{{FilterCriteria}}\"\n    }\n}", 
            "time": 1560272432545, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"randInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"requestedDataSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"randomData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"rngType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['randInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['requestedDataSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['randomData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['rngType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['randInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/234?query=/iot3/example/rand?ToAddress={{ToAddress}}?FromId={{FromId}}?Operation={{Operation}}?RequestId={{RequestId}}?ResourceType={{ResourceType}}?OriginatingTimestamp={{OriginatingTimestamp}}?ReqExpirationTimestamp={{ReqExpirationTimestamp}}?ResExpirationTimestamp={{ResExpirationTimestamp}}?EventCategory={{EventCategory}}?OperationalExecutionTime={{OperationalExecutionTime}}?ResponseType={{ResponseType}}?ResultPersistence={{ResultPersistence}}?ResultContent={{ResultContent}}?DeliveryAggregation={{DeliveryAggregation}}?GroupRequestIdentifier={{GroupRequestIdentifier}}?FilterCriteria={{FilterCriteria}}?DesiredIdentifierResultType={{DesiredIdentifierResultType}}?TokenRequestIndicator={{TokenRequestIndicator}}?Tokens={{Tokens}}?TokenIDs={{TokenIDs}}?RoleIDs={{RoleIDs}}?LocalTokenIDs={{LocalTokenIDs}}?ReleaseVersionIndicator={{ReleaseVersionIndicator}}?VendorInformation={{VendorInformation}}?GroupRequestTargetMembers={{GroupRequestTargetMembers}}?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}?AuthorizationSignature={{AuthorizationSignature}}?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}?SemanticQueryIndicator={{SemanticQueryIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    pm.environment.set(\"Operation\",currentData.Operation);", 
                            "    pm.environment.set(\"RequestId\",currentData.RequestId);", 
                            "    pm.environment.set(\"ResourceType\",currentData.ResourceType);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.OriginatingTimestamp);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.ReqExpirationTimestamp);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.ResExpirationTimestamp);", 
                            "    pm.environment.set(\"EventCategory\",currentData.EventCategory);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.OperationalExecutionTime);", 
                            "    pm.environment.set(\"ResponseType\",currentData.ResponseType);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.ResultPersistence);", 
                            "    pm.environment.set(\"ResultContent\",currentData.ResultContent);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.DeliveryAggregation);", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.GroupRequestIdentifier);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.FilterCriteria);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.DesiredIdentifierResultType);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.TokenRequestIndicator);", 
                            "    pm.environment.set(\"Tokens\",currentData.Tokens);", 
                            "    pm.environment.set(\"TokenIDs\",currentData.TokenIDs);", 
                            "    pm.environment.set(\"RoleIDs\",currentData.RoleIDs);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.LocalTokenIDs);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.ReleaseVersionIndicator);", 
                            "    pm.environment.set(\"VendorInformation\",currentData.VendorInformation);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.GroupRequestTargetMembers);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.AuthorizationSignatureIndicator);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.AuthorizationSignature);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.AuthorizationRelationshipIndicator);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.SemanticQueryIndicator);", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.randInfo.GroupRequestIdentifier);", 
                            "    pm.environment.set(\"ToAddress\",currentData.randInfo.ToAddress);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.randInfo.OriginatingTimestamp);", 
                            "    pm.environment.set(\"ResultContent\",currentData.randInfo.ResultContent);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.randInfo.SemanticQueryIndicator);", 
                            "    pm.environment.set(\"EventCategory\",currentData.randInfo.EventCategory);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.randInfo.OperationalExecutionTime);", 
                            "    pm.environment.set(\"resourceType\",currentData.randInfo.content.resourceType);", 
                            "    pm.environment.set(\"accessControlPolicyIDs\",currentData.randInfo.content.accessControlPolicyIDs);", 
                            "    pm.environment.set(\"requestedDataSize\",currentData.randInfo.content.requestedDataSize);", 
                            "    pm.environment.set(\"creationTime\",currentData.randInfo.content.creationTime);", 
                            "    pm.environment.set(\"randomData\",currentData.randInfo.content.randomData);", 
                            "    pm.environment.set(\"rngType\",currentData.randInfo.content.rngType);", 
                            "    pm.environment.set(\"parentID\",currentData.randInfo.content.parentID);", 
                            "    pm.environment.set(\"resourceName\",currentData.randInfo.content.resourceName);", 
                            "    pm.environment.set(\"lastModifiedTime\",currentData.randInfo.content.lastModifiedTime);", 
                            "    pm.environment.set(\"resourceID\",currentData.randInfo.content.resourceID);", 
                            "    pm.environment.set(\"expirationTime\",currentData.randInfo.content.expirationTime);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.randInfo.AuthorizationSignatureIndicator);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.randInfo.LocalTokenIDs);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.randInfo.AuthorizationSignature);", 
                            "    pm.environment.set(\"Tokens\",currentData.randInfo.Tokens);", 
                            "    pm.environment.set(\"VendorInformation\",currentData.randInfo.VendorInformation);", 
                            "    pm.environment.set(\"ResponseType\",currentData.randInfo.ResponseType);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.randInfo.TokenRequestIndicator);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.randInfo.GroupRequestTargetMembers);", 
                            "    pm.environment.set(\"FromId\",currentData.randInfo.FromId);", 
                            "    pm.environment.set(\"RequestId\",currentData.randInfo.RequestId);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.randInfo.ReqExpirationTimestamp);", 
                            "    pm.environment.set(\"TokenIDs\",currentData.randInfo.TokenIDs);", 
                            "    pm.environment.set(\"resourceType\",currentData.randInfo.resourceType);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.randInfo.DeliveryAggregation);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.randInfo.ReleaseVersionIndicator);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.randInfo.DesiredIdentifierResultType);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.randInfo.ResExpirationTimestamp);", 
                            "    pm.environment.set(\"RoleIDs\",currentData.randInfo.RoleIDs);", 
                            "    pm.environment.set(\"Operation\",currentData.randInfo.Operation);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.randInfo.ResultPersistence);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.randInfo.AuthorizationRelationshipIndicator);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.randInfo.FilterCriteria);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PUT", 
            "preRequestScript": "", 
            "data": [], 
            "id": "9b5bd1b9-a5e3-4e1d-ad8b-430fc59c6780233", 
            "description": "This method updates the information about a specific randInfo resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?ToAddress={{ToAddress}}&FromId={{FromId}}&Operation={{Operation}}&RequestId={{RequestId}}&ResourceType={{ResourceType}}&OriginatingTimestamp={{OriginatingTimestamp}}&ReqExpirationTimestamp={{ReqExpirationTimestamp}}&ResExpirationTimestamp={{ResExpirationTimestamp}}&EventCategory={{EventCategory}}&OperationalExecutionTime={{OperationalExecutionTime}}&ResponseType={{ResponseType}}&ResultPersistence={{ResultPersistence}}&ResultContent={{ResultContent}}&DeliveryAggregation={{DeliveryAggregation}}&GroupRequestIdentifier={{GroupRequestIdentifier}}&FilterCriteria={{FilterCriteria}}&DesiredIdentifierResultType={{DesiredIdentifierResultType}}&TokenRequestIndicator={{TokenRequestIndicator}}&Tokens={{Tokens}}&TokenIDs={{TokenIDs}}&RoleIDs={{RoleIDs}}&LocalTokenIDs={{LocalTokenIDs}}&ReleaseVersionIndicator={{ReleaseVersionIndicator}}&VendorInformation={{VendorInformation}}&GroupRequestTargetMembers={{GroupRequestTargetMembers}}&AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}&AuthorizationSignature={{AuthorizationSignature}}&AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}&SemanticQueryIndicator={{SemanticQueryIndicator}}", 
            "name": "TC_200", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"cipherInfo\": {\n        \"ResponseType\": \"{{ResponseType}}\",\n        \"GroupRequestIdentifier\": \"{{GroupRequestIdentifier}}\",\n        \"ToAddress\": \"{{ToAddress}}\",\n        \"OriginatingTimestamp\": \"{{OriginatingTimestamp}}\",\n        \"TokenRequestIndicator\": \"{{TokenRequestIndicator}}\",\n        \"GroupRequestTargetMembers\": \"{{GroupRequestTargetMembers}}\",\n        \"ResultContent\": \"{{ResultContent}}\",\n        \"SemanticQueryIndicator\": \"{{SemanticQueryIndicator}}\",\n        \"AuthorizationSignature\": \"{{AuthorizationSignature}}\",\n        \"OperationalExecutionTime\": \"{{OperationalExecutionTime}}\",\n        \"FromId\": \"{{FromId}}\",\n        \"RequestId\": \"{{RequestId}}\",\n        \"ReqExpirationTimestamp\": \"{{ReqExpirationTimestamp}}\",\n        \"EventCategory\": \"{{EventCategory}}\",\n        \"TokenIDs\": \"{{TokenIDs}}\",\n        \"RoleIDs\": \"{{RoleIDs}}\",\n        \"Tokens\": \"{{Tokens}}\",\n        \"resourceType\": \"{{resourceType}}\",\n        \"AuthorizationSignatureIndicator\": \"{{AuthorizationSignatureIndicator}}\",\n        \"LocalTokenIDs\": \"{{LocalTokenIDs}}\",\n        \"DeliveryAggregation\": \"{{DeliveryAggregation}}\",\n        \"content\": {\n            \"expirationTime\": \"{{expirationTime}}\",\n            \"maxByteSize\": \"{{maxByteSize}}\",\n            \"algorithm\": \"{{algorithm}}\",\n            \"resourceType\": \"{{resourceType}}\",\n            \"accessControlPolicyIDs\": \"{{accessControlPolicyIDs}}\",\n            \"keyData\": \"{{keyData}}\",\n            \"creationTime\": \"{{creationTime}}\",\n            \"currentByteSize\": \"{{currentByteSize}}\",\n            \"calculatedData\": \"{{calculatedData}}\",\n            \"parentID\": \"{{parentID}}\",\n            \"resourceName\": \"{{resourceName}}\",\n            \"lastModifiedTime\": \"{{lastModifiedTime}}\",\n            \"resourceID\": \"{{resourceID}}\",\n            \"sensitiveData\": \"{{sensitiveData}}\"\n        },\n        \"ReleaseVersionIndicator\": \"{{ReleaseVersionIndicator}}\",\n        \"DesiredIdentifierResultType\": \"{{DesiredIdentifierResultType}}\",\n        \"ResExpirationTimestamp\": \"{{ResExpirationTimestamp}}\",\n        \"VendorInformation\": \"{{VendorInformation}}\",\n        \"Operation\": \"{{Operation}}\",\n        \"ResultPersistence\": \"{{ResultPersistence}}\",\n        \"AuthorizationRelationshipIndicator\": \"{{AuthorizationRelationshipIndicator}}\",\n        \"FilterCriteria\": \"{{FilterCriteria}}\"\n    }\n}", 
            "time": 1560272432545, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"cipherInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"maxByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"currentByteSize\");", 
                            "    pm.expect(pm.response.text()).to.include(\"calculatedData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"sensitiveData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['maxByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['currentByteSize']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['calculatedData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['content']['sensitiveData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['cipherInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/235?query=/iot3/example/cipher?ToAddress={{ToAddress}}?FromId={{FromId}}?Operation={{Operation}}?RequestId={{RequestId}}?ResourceType={{ResourceType}}?OriginatingTimestamp={{OriginatingTimestamp}}?ReqExpirationTimestamp={{ReqExpirationTimestamp}}?ResExpirationTimestamp={{ResExpirationTimestamp}}?EventCategory={{EventCategory}}?OperationalExecutionTime={{OperationalExecutionTime}}?ResponseType={{ResponseType}}?ResultPersistence={{ResultPersistence}}?ResultContent={{ResultContent}}?DeliveryAggregation={{DeliveryAggregation}}?GroupRequestIdentifier={{GroupRequestIdentifier}}?FilterCriteria={{FilterCriteria}}?DesiredIdentifierResultType={{DesiredIdentifierResultType}}?TokenRequestIndicator={{TokenRequestIndicator}}?Tokens={{Tokens}}?TokenIDs={{TokenIDs}}?RoleIDs={{RoleIDs}}?LocalTokenIDs={{LocalTokenIDs}}?ReleaseVersionIndicator={{ReleaseVersionIndicator}}?VendorInformation={{VendorInformation}}?GroupRequestTargetMembers={{GroupRequestTargetMembers}}?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}?AuthorizationSignature={{AuthorizationSignature}}?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}?SemanticQueryIndicator={{SemanticQueryIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    pm.environment.set(\"Operation\",currentData.Operation);", 
                            "    pm.environment.set(\"RequestId\",currentData.RequestId);", 
                            "    pm.environment.set(\"ResourceType\",currentData.ResourceType);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.OriginatingTimestamp);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.ReqExpirationTimestamp);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.ResExpirationTimestamp);", 
                            "    pm.environment.set(\"EventCategory\",currentData.EventCategory);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.OperationalExecutionTime);", 
                            "    pm.environment.set(\"ResponseType\",currentData.ResponseType);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.ResultPersistence);", 
                            "    pm.environment.set(\"ResultContent\",currentData.ResultContent);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.DeliveryAggregation);", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.GroupRequestIdentifier);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.FilterCriteria);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.DesiredIdentifierResultType);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.TokenRequestIndicator);", 
                            "    pm.environment.set(\"Tokens\",currentData.Tokens);", 
                            "    pm.environment.set(\"TokenIDs\",currentData.TokenIDs);", 
                            "    pm.environment.set(\"RoleIDs\",currentData.RoleIDs);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.LocalTokenIDs);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.ReleaseVersionIndicator);", 
                            "    pm.environment.set(\"VendorInformation\",currentData.VendorInformation);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.GroupRequestTargetMembers);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.AuthorizationSignatureIndicator);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.AuthorizationSignature);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.AuthorizationRelationshipIndicator);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.SemanticQueryIndicator);", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.cipherInfo.GroupRequestIdentifier);", 
                            "    pm.environment.set(\"ToAddress\",currentData.cipherInfo.ToAddress);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.cipherInfo.OriginatingTimestamp);", 
                            "    pm.environment.set(\"ResultContent\",currentData.cipherInfo.ResultContent);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.cipherInfo.SemanticQueryIndicator);", 
                            "    pm.environment.set(\"EventCategory\",currentData.cipherInfo.EventCategory);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.cipherInfo.OperationalExecutionTime);", 
                            "    pm.environment.set(\"maxByteSize\",currentData.cipherInfo.content.maxByteSize);", 
                            "    pm.environment.set(\"algorithm\",currentData.cipherInfo.content.algorithm);", 
                            "    pm.environment.set(\"resourceType\",currentData.cipherInfo.content.resourceType);", 
                            "    pm.environment.set(\"accessControlPolicyIDs\",currentData.cipherInfo.content.accessControlPolicyIDs);", 
                            "    pm.environment.set(\"keyData\",currentData.cipherInfo.content.keyData);", 
                            "    pm.environment.set(\"creationTime\",currentData.cipherInfo.content.creationTime);", 
                            "    pm.environment.set(\"sensitiveData\",currentData.cipherInfo.content.sensitiveData);", 
                            "    pm.environment.set(\"calculatedData\",currentData.cipherInfo.content.calculatedData);", 
                            "    pm.environment.set(\"parentID\",currentData.cipherInfo.content.parentID);", 
                            "    pm.environment.set(\"lastModifiedTime\",currentData.cipherInfo.content.lastModifiedTime);", 
                            "    pm.environment.set(\"resourceName\",currentData.cipherInfo.content.resourceName);", 
                            "    pm.environment.set(\"expirationTime\",currentData.cipherInfo.content.expirationTime);", 
                            "    pm.environment.set(\"resourceID\",currentData.cipherInfo.content.resourceID);", 
                            "    pm.environment.set(\"currentByteSize\",currentData.cipherInfo.content.currentByteSize);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.cipherInfo.AuthorizationSignatureIndicator);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.cipherInfo.LocalTokenIDs);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.cipherInfo.AuthorizationSignature);", 
                            "    pm.environment.set(\"Tokens\",currentData.cipherInfo.Tokens);", 
                            "    pm.environment.set(\"VendorInformation\",currentData.cipherInfo.VendorInformation);", 
                            "    pm.environment.set(\"ResponseType\",currentData.cipherInfo.ResponseType);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.cipherInfo.TokenRequestIndicator);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.cipherInfo.GroupRequestTargetMembers);", 
                            "    pm.environment.set(\"FromId\",currentData.cipherInfo.FromId);", 
                            "    pm.environment.set(\"RequestId\",currentData.cipherInfo.RequestId);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.cipherInfo.ReqExpirationTimestamp);", 
                            "    pm.environment.set(\"TokenIDs\",currentData.cipherInfo.TokenIDs);", 
                            "    pm.environment.set(\"resourceType\",currentData.cipherInfo.resourceType);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.cipherInfo.DeliveryAggregation);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.cipherInfo.ReleaseVersionIndicator);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.cipherInfo.DesiredIdentifierResultType);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.cipherInfo.ResExpirationTimestamp);", 
                            "    pm.environment.set(\"RoleIDs\",currentData.cipherInfo.RoleIDs);", 
                            "    pm.environment.set(\"Operation\",currentData.cipherInfo.Operation);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.cipherInfo.ResultPersistence);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.cipherInfo.AuthorizationRelationshipIndicator);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.cipherInfo.FilterCriteria);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PUT", 
            "preRequestScript": "", 
            "data": [], 
            "id": "363a7097-6a30-4c47-bf81-1e64d2c820f7234", 
            "description": "This method updates the information about a specific cipherInfo resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?ToAddress={{ToAddress}}&FromId={{FromId}}&Operation={{Operation}}&RequestId={{RequestId}}&ResourceType={{ResourceType}}&OriginatingTimestamp={{OriginatingTimestamp}}&ReqExpirationTimestamp={{ReqExpirationTimestamp}}&ResExpirationTimestamp={{ResExpirationTimestamp}}&EventCategory={{EventCategory}}&OperationalExecutionTime={{OperationalExecutionTime}}&ResponseType={{ResponseType}}&ResultPersistence={{ResultPersistence}}&ResultContent={{ResultContent}}&DeliveryAggregation={{DeliveryAggregation}}&GroupRequestIdentifier={{GroupRequestIdentifier}}&FilterCriteria={{FilterCriteria}}&DesiredIdentifierResultType={{DesiredIdentifierResultType}}&TokenRequestIndicator={{TokenRequestIndicator}}&Tokens={{Tokens}}&TokenIDs={{TokenIDs}}&RoleIDs={{RoleIDs}}&LocalTokenIDs={{LocalTokenIDs}}&ReleaseVersionIndicator={{ReleaseVersionIndicator}}&VendorInformation={{VendorInformation}}&GroupRequestTargetMembers={{GroupRequestTargetMembers}}&AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}&AuthorizationSignature={{AuthorizationSignature}}&AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}&SemanticQueryIndicator={{SemanticQueryIndicator}}", 
            "name": "TC_200", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"connectionInstanceInfo\": {\n        \"ResponseType\": \"{{ResponseType}}\",\n        \"GroupRequestIdentifier\": \"{{GroupRequestIdentifier}}\",\n        \"ToAddress\": \"{{ToAddress}}\",\n        \"OriginatingTimestamp\": \"{{OriginatingTimestamp}}\",\n        \"TokenRequestIndicator\": \"{{TokenRequestIndicator}}\",\n        \"GroupRequestTargetMembers\": \"{{GroupRequestTargetMembers}}\",\n        \"ResultContent\": \"{{ResultContent}}\",\n        \"SemanticQueryIndicator\": \"{{SemanticQueryIndicator}}\",\n        \"AuthorizationSignature\": \"{{AuthorizationSignature}}\",\n        \"OperationalExecutionTime\": \"{{OperationalExecutionTime}}\",\n        \"FromId\": \"{{FromId}}\",\n        \"RequestId\": \"{{RequestId}}\",\n        \"ReqExpirationTimestamp\": \"{{ReqExpirationTimestamp}}\",\n        \"EventCategory\": \"{{EventCategory}}\",\n        \"TokenIDs\": \"{{TokenIDs}}\",\n        \"RoleIDs\": \"{{RoleIDs}}\",\n        \"Tokens\": \"{{Tokens}}\",\n        \"resourceType\": \"{{resourceType}}\",\n        \"AuthorizationSignatureIndicator\": \"{{AuthorizationSignatureIndicator}}\",\n        \"LocalTokenIDs\": \"{{LocalTokenIDs}}\",\n        \"DeliveryAggregation\": \"{{DeliveryAggregation}}\",\n        \"content\": {\n            \"destinationURI\": \"{{destinationURI}}\",\n            \"negotiatedKey\": \"{{negotiatedKey}}\",\n            \"incomingPayloadData\": \"{{incomingPayloadData}}\",\n            \"negotiatedCipherSuite\": \"{{negotiatedCipherSuite}}\",\n            \"outgoingPayloadData\": \"{{outgoingPayloadData}}\",\n            \"resourceType\": \"{{resourceType}}\",\n            \"accessControlPolicyIDs\": \"{{accessControlPolicyIDs}}\",\n            \"creationTime\": \"{{creationTime}}\",\n            \"parentID\": \"{{parentID}}\",\n            \"lastModifiedTime\": \"{{lastModifiedTime}}\",\n            \"resourceName\": \"{{resourceName}}\",\n            \"expirationTime\": \"{{expirationTime}}\",\n            \"resourceID\": \"{{resourceID}}\"\n        },\n        \"ReleaseVersionIndicator\": \"{{ReleaseVersionIndicator}}\",\n        \"DesiredIdentifierResultType\": \"{{DesiredIdentifierResultType}}\",\n        \"ResExpirationTimestamp\": \"{{ResExpirationTimestamp}}\",\n        \"VendorInformation\": \"{{VendorInformation}}\",\n        \"Operation\": \"{{Operation}}\",\n        \"ResultPersistence\": \"{{ResultPersistence}}\",\n        \"AuthorizationRelationshipIndicator\": \"{{AuthorizationRelationshipIndicator}}\",\n        \"FilterCriteria\": \"{{FilterCriteria}}\"\n    }\n}", 
            "time": 1560272432546, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"connectionInstanceInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"destinationURI\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedKey\");", 
                            "    pm.expect(pm.response.text()).to.include(\"incomingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"negotiatedCipherSuite\");", 
                            "    pm.expect(pm.response.text()).to.include(\"outgoingPayloadData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['destinationURI']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedKey']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['incomingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['negotiatedCipherSuite']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['outgoingPayloadData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['connectionInstanceInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/236?query=/iot3/example/connectionInstance?ToAddress={{ToAddress}}?FromId={{FromId}}?Operation={{Operation}}?RequestId={{RequestId}}?ResourceType={{ResourceType}}?OriginatingTimestamp={{OriginatingTimestamp}}?ReqExpirationTimestamp={{ReqExpirationTimestamp}}?ResExpirationTimestamp={{ResExpirationTimestamp}}?EventCategory={{EventCategory}}?OperationalExecutionTime={{OperationalExecutionTime}}?ResponseType={{ResponseType}}?ResultPersistence={{ResultPersistence}}?ResultContent={{ResultContent}}?DeliveryAggregation={{DeliveryAggregation}}?GroupRequestIdentifier={{GroupRequestIdentifier}}?FilterCriteria={{FilterCriteria}}?DesiredIdentifierResultType={{DesiredIdentifierResultType}}?TokenRequestIndicator={{TokenRequestIndicator}}?Tokens={{Tokens}}?TokenIDs={{TokenIDs}}?RoleIDs={{RoleIDs}}?LocalTokenIDs={{LocalTokenIDs}}?ReleaseVersionIndicator={{ReleaseVersionIndicator}}?VendorInformation={{VendorInformation}}?GroupRequestTargetMembers={{GroupRequestTargetMembers}}?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}?AuthorizationSignature={{AuthorizationSignature}}?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}?SemanticQueryIndicator={{SemanticQueryIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    pm.environment.set(\"Operation\",currentData.Operation);", 
                            "    pm.environment.set(\"RequestId\",currentData.RequestId);", 
                            "    pm.environment.set(\"ResourceType\",currentData.ResourceType);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.OriginatingTimestamp);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.ReqExpirationTimestamp);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.ResExpirationTimestamp);", 
                            "    pm.environment.set(\"EventCategory\",currentData.EventCategory);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.OperationalExecutionTime);", 
                            "    pm.environment.set(\"ResponseType\",currentData.ResponseType);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.ResultPersistence);", 
                            "    pm.environment.set(\"ResultContent\",currentData.ResultContent);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.DeliveryAggregation);", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.GroupRequestIdentifier);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.FilterCriteria);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.DesiredIdentifierResultType);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.TokenRequestIndicator);", 
                            "    pm.environment.set(\"Tokens\",currentData.Tokens);", 
                            "    pm.environment.set(\"TokenIDs\",currentData.TokenIDs);", 
                            "    pm.environment.set(\"RoleIDs\",currentData.RoleIDs);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.LocalTokenIDs);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.ReleaseVersionIndicator);", 
                            "    pm.environment.set(\"VendorInformation\",currentData.VendorInformation);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.GroupRequestTargetMembers);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.AuthorizationSignatureIndicator);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.AuthorizationSignature);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.AuthorizationRelationshipIndicator);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.SemanticQueryIndicator);", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.connectionInstanceInfo.GroupRequestIdentifier);", 
                            "    pm.environment.set(\"ToAddress\",currentData.connectionInstanceInfo.ToAddress);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.connectionInstanceInfo.OriginatingTimestamp);", 
                            "    pm.environment.set(\"ResultContent\",currentData.connectionInstanceInfo.ResultContent);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.connectionInstanceInfo.SemanticQueryIndicator);", 
                            "    pm.environment.set(\"EventCategory\",currentData.connectionInstanceInfo.EventCategory);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.connectionInstanceInfo.OperationalExecutionTime);", 
                            "    pm.environment.set(\"destinationURI\",currentData.connectionInstanceInfo.content.destinationURI);", 
                            "    pm.environment.set(\"negotiatedKey\",currentData.connectionInstanceInfo.content.negotiatedKey);", 
                            "    pm.environment.set(\"incomingPayloadData\",currentData.connectionInstanceInfo.content.incomingPayloadData);", 
                            "    pm.environment.set(\"negotiatedCipherSuite\",currentData.connectionInstanceInfo.content.negotiatedCipherSuite);", 
                            "    pm.environment.set(\"outgoingPayloadData\",currentData.connectionInstanceInfo.content.outgoingPayloadData);", 
                            "    pm.environment.set(\"resourceType\",currentData.connectionInstanceInfo.content.resourceType);", 
                            "    pm.environment.set(\"accessControlPolicyIDs\",currentData.connectionInstanceInfo.content.accessControlPolicyIDs);", 
                            "    pm.environment.set(\"creationTime\",currentData.connectionInstanceInfo.content.creationTime);", 
                            "    pm.environment.set(\"parentID\",currentData.connectionInstanceInfo.content.parentID);", 
                            "    pm.environment.set(\"resourceName\",currentData.connectionInstanceInfo.content.resourceName);", 
                            "    pm.environment.set(\"lastModifiedTime\",currentData.connectionInstanceInfo.content.lastModifiedTime);", 
                            "    pm.environment.set(\"resourceID\",currentData.connectionInstanceInfo.content.resourceID);", 
                            "    pm.environment.set(\"expirationTime\",currentData.connectionInstanceInfo.content.expirationTime);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.connectionInstanceInfo.AuthorizationSignatureIndicator);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.connectionInstanceInfo.LocalTokenIDs);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.connectionInstanceInfo.AuthorizationSignature);", 
                            "    pm.environment.set(\"Tokens\",currentData.connectionInstanceInfo.Tokens);", 
                            "    pm.environment.set(\"VendorInformation\",currentData.connectionInstanceInfo.VendorInformation);", 
                            "    pm.environment.set(\"ResponseType\",currentData.connectionInstanceInfo.ResponseType);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.connectionInstanceInfo.TokenRequestIndicator);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.connectionInstanceInfo.GroupRequestTargetMembers);", 
                            "    pm.environment.set(\"FromId\",currentData.connectionInstanceInfo.FromId);", 
                            "    pm.environment.set(\"RequestId\",currentData.connectionInstanceInfo.RequestId);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.connectionInstanceInfo.ReqExpirationTimestamp);", 
                            "    pm.environment.set(\"TokenIDs\",currentData.connectionInstanceInfo.TokenIDs);", 
                            "    pm.environment.set(\"resourceType\",currentData.connectionInstanceInfo.resourceType);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.connectionInstanceInfo.DeliveryAggregation);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.connectionInstanceInfo.ReleaseVersionIndicator);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.connectionInstanceInfo.DesiredIdentifierResultType);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.connectionInstanceInfo.ResExpirationTimestamp);", 
                            "    pm.environment.set(\"RoleIDs\",currentData.connectionInstanceInfo.RoleIDs);", 
                            "    pm.environment.set(\"Operation\",currentData.connectionInstanceInfo.Operation);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.connectionInstanceInfo.ResultPersistence);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.connectionInstanceInfo.AuthorizationRelationshipIndicator);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.connectionInstanceInfo.FilterCriteria);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PUT", 
            "preRequestScript": "", 
            "data": [], 
            "id": "aa8aa373-3e5b-422a-a6c2-67969ccbaacb235", 
            "description": "This method updates the information about a specific connectionInstanceInfo resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "raw", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?ToAddress={{ToAddress}}&FromId={{FromId}}&Operation={{Operation}}&RequestId={{RequestId}}&ResourceType={{ResourceType}}&OriginatingTimestamp={{OriginatingTimestamp}}&ReqExpirationTimestamp={{ReqExpirationTimestamp}}&ResExpirationTimestamp={{ResExpirationTimestamp}}&EventCategory={{EventCategory}}&OperationalExecutionTime={{OperationalExecutionTime}}&ResponseType={{ResponseType}}&ResultPersistence={{ResultPersistence}}&ResultContent={{ResultContent}}&DeliveryAggregation={{DeliveryAggregation}}&GroupRequestIdentifier={{GroupRequestIdentifier}}&FilterCriteria={{FilterCriteria}}&DesiredIdentifierResultType={{DesiredIdentifierResultType}}&TokenRequestIndicator={{TokenRequestIndicator}}&Tokens={{Tokens}}&TokenIDs={{TokenIDs}}&RoleIDs={{RoleIDs}}&LocalTokenIDs={{LocalTokenIDs}}&ReleaseVersionIndicator={{ReleaseVersionIndicator}}&VendorInformation={{VendorInformation}}&GroupRequestTargetMembers={{GroupRequestTargetMembers}}&AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}&AuthorizationSignature={{AuthorizationSignature}}&AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}&SemanticQueryIndicator={{SemanticQueryIndicator}}", 
            "name": "TC_200", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": "{\n    \"signatureInfo\": {\n        \"ResponseType\": \"{{ResponseType}}\",\n        \"GroupRequestIdentifier\": \"{{GroupRequestIdentifier}}\",\n        \"ToAddress\": \"{{ToAddress}}\",\n        \"OriginatingTimestamp\": \"{{OriginatingTimestamp}}\",\n        \"TokenRequestIndicator\": \"{{TokenRequestIndicator}}\",\n        \"GroupRequestTargetMembers\": \"{{GroupRequestTargetMembers}}\",\n        \"ResultContent\": \"{{ResultContent}}\",\n        \"SemanticQueryIndicator\": \"{{SemanticQueryIndicator}}\",\n        \"AuthorizationSignature\": \"{{AuthorizationSignature}}\",\n        \"OperationalExecutionTime\": \"{{OperationalExecutionTime}}\",\n        \"FromId\": \"{{FromId}}\",\n        \"RequestId\": \"{{RequestId}}\",\n        \"ReqExpirationTimestamp\": \"{{ReqExpirationTimestamp}}\",\n        \"EventCategory\": \"{{EventCategory}}\",\n        \"TokenIDs\": \"{{TokenIDs}}\",\n        \"RoleIDs\": \"{{RoleIDs}}\",\n        \"Tokens\": \"{{Tokens}}\",\n        \"resourceType\": \"{{resourceType}}\",\n        \"AuthorizationSignatureIndicator\": \"{{AuthorizationSignatureIndicator}}\",\n        \"LocalTokenIDs\": \"{{LocalTokenIDs}}\",\n        \"DeliveryAggregation\": \"{{DeliveryAggregation}}\",\n        \"content\": {\n            \"verificationResult\": \"{{verificationResult}}\",\n            \"algorithm\": \"{{algorithm}}\",\n            \"resourceType\": \"{{resourceType}}\",\n            \"accessControlPolicyIDs\": \"{{accessControlPolicyIDs}}\",\n            \"keyData\": \"{{keyData}}\",\n            \"parentID\": \"{{parentID}}\",\n            \"creationTime\": \"{{creationTime}}\",\n            \"signature\": \"{{signature}}\",\n            \"lastModifiedTime\": \"{{lastModifiedTime}}\",\n            \"resourceName\": \"{{resourceName}}\",\n            \"message\": \"{{message}}\",\n            \"resourceID\": \"{{resourceID}}\",\n            \"expirationTime\": \"{{expirationTime}}\",\n            \"keyInformation\": \"{{keyInformation}}\"\n        },\n        \"ReleaseVersionIndicator\": \"{{ReleaseVersionIndicator}}\",\n        \"DesiredIdentifierResultType\": \"{{DesiredIdentifierResultType}}\",\n        \"ResExpirationTimestamp\": \"{{ResExpirationTimestamp}}\",\n        \"VendorInformation\": \"{{VendorInformation}}\",\n        \"Operation\": \"{{Operation}}\",\n        \"ResultPersistence\": \"{{ResultPersistence}}\",\n        \"AuthorizationRelationshipIndicator\": \"{{AuthorizationRelationshipIndicator}}\",\n        \"FilterCriteria\": \"{{FilterCriteria}}\"\n    }\n}", 
            "time": 1560272432547, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "var jsonData = pm.response.json();", 
                            "pm.test(\"Status code is -  \"+ jsonData['statuscode'] , function() {", 
                            "    pm.expect(jsonData['statuscode']).to.be.eql(200)", 
                            "});", 
                            "", 
                            "pm.test(\"Body matches string\", function () {", 
                            "    pm.expect(pm.response.text()).to.include(\"signatureInfo\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResponseType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestIdentifier\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ToAddress\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OriginatingTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenRequestIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"GroupRequestTargetMembers\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultContent\");", 
                            "    pm.expect(pm.response.text()).to.include(\"SemanticQueryIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"OperationalExecutionTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FromId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RequestId\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReqExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"EventCategory\");", 
                            "    pm.expect(pm.response.text()).to.include(\"TokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"RoleIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Tokens\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationSignatureIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"LocalTokenIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DeliveryAggregation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"content\");", 
                            "    pm.expect(pm.response.text()).to.include(\"verificationResult\");", 
                            "    pm.expect(pm.response.text()).to.include(\"algorithm\");", 
                            "    pm.expect(pm.response.text()).to.include(\"accessControlPolicyIDs\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyData\");", 
                            "    pm.expect(pm.response.text()).to.include(\"parentID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"creationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"signature\");", 
                            "    pm.expect(pm.response.text()).to.include(\"lastModifiedTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceName\");", 
                            "    pm.expect(pm.response.text()).to.include(\"message\");", 
                            "    pm.expect(pm.response.text()).to.include(\"resourceID\");", 
                            "    pm.expect(pm.response.text()).to.include(\"expirationTime\");", 
                            "    pm.expect(pm.response.text()).to.include(\"keyInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ReleaseVersionIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"DesiredIdentifierResultType\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResExpirationTimestamp\");", 
                            "    pm.expect(pm.response.text()).to.include(\"VendorInformation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"Operation\");", 
                            "    pm.expect(pm.response.text()).to.include(\"ResultPersistence\");", 
                            "    pm.expect(pm.response.text()).to.include(\"AuthorizationRelationshipIndicator\");", 
                            "    pm.expect(pm.response.text()).to.include(\"FilterCriteria\");", 
                            "});", 
                            "", 
                            "pm.test(\"isString\" ,function() {", 
                            "    if  (pm.response.json().res){", 
                            "        jsonData = pm.response.json().res; \n    }", 
                            "    else{", 
                            "        var jsonData = [pm.response.json()];\n    }", 
                            "    for (i = 0; i < jsonData.length; i++) {", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResponseType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestIdentifier']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ToAddress']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OriginatingTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenRequestIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['GroupRequestTargetMembers']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultContent']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['SemanticQueryIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['OperationalExecutionTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FromId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RequestId']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReqExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['EventCategory']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['TokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['RoleIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Tokens']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationSignatureIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['LocalTokenIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DeliveryAggregation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['verificationResult']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['algorithm']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['accessControlPolicyIDs']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyData']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['parentID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['creationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['signature']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['lastModifiedTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceName']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['message']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['resourceID']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['expirationTime']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['content']['keyInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ReleaseVersionIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['DesiredIdentifierResultType']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResExpirationTimestamp']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['VendorInformation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['Operation']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['ResultPersistence']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['AuthorizationRelationshipIndicator']).to.not.be.a('number');", 
                            "        pm.expect(jsonData[i]['signatureInfo']['FilterCriteria']).to.not.be.a('number');", 
                            "    }", 
                            "})"
                        ]
                    }, 
                    "listen": "test"
                }, 
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/237?query=/iot3/example/signature?ToAddress={{ToAddress}}?FromId={{FromId}}?Operation={{Operation}}?RequestId={{RequestId}}?ResourceType={{ResourceType}}?OriginatingTimestamp={{OriginatingTimestamp}}?ReqExpirationTimestamp={{ReqExpirationTimestamp}}?ResExpirationTimestamp={{ResExpirationTimestamp}}?EventCategory={{EventCategory}}?OperationalExecutionTime={{OperationalExecutionTime}}?ResponseType={{ResponseType}}?ResultPersistence={{ResultPersistence}}?ResultContent={{ResultContent}}?DeliveryAggregation={{DeliveryAggregation}}?GroupRequestIdentifier={{GroupRequestIdentifier}}?FilterCriteria={{FilterCriteria}}?DesiredIdentifierResultType={{DesiredIdentifierResultType}}?TokenRequestIndicator={{TokenRequestIndicator}}?Tokens={{Tokens}}?TokenIDs={{TokenIDs}}?RoleIDs={{RoleIDs}}?LocalTokenIDs={{LocalTokenIDs}}?ReleaseVersionIndicator={{ReleaseVersionIndicator}}?VendorInformation={{VendorInformation}}?GroupRequestTargetMembers={{GroupRequestTargetMembers}}?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}?AuthorizationSignature={{AuthorizationSignature}}?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}?SemanticQueryIndicator={{SemanticQueryIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    pm.environment.set(\"Operation\",currentData.Operation);", 
                            "    pm.environment.set(\"RequestId\",currentData.RequestId);", 
                            "    pm.environment.set(\"ResourceType\",currentData.ResourceType);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.OriginatingTimestamp);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.ReqExpirationTimestamp);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.ResExpirationTimestamp);", 
                            "    pm.environment.set(\"EventCategory\",currentData.EventCategory);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.OperationalExecutionTime);", 
                            "    pm.environment.set(\"ResponseType\",currentData.ResponseType);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.ResultPersistence);", 
                            "    pm.environment.set(\"ResultContent\",currentData.ResultContent);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.DeliveryAggregation);", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.GroupRequestIdentifier);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.FilterCriteria);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.DesiredIdentifierResultType);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.TokenRequestIndicator);", 
                            "    pm.environment.set(\"Tokens\",currentData.Tokens);", 
                            "    pm.environment.set(\"TokenIDs\",currentData.TokenIDs);", 
                            "    pm.environment.set(\"RoleIDs\",currentData.RoleIDs);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.LocalTokenIDs);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.ReleaseVersionIndicator);", 
                            "    pm.environment.set(\"VendorInformation\",currentData.VendorInformation);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.GroupRequestTargetMembers);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.AuthorizationSignatureIndicator);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.AuthorizationSignature);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.AuthorizationRelationshipIndicator);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.SemanticQueryIndicator);", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.signatureInfo.GroupRequestIdentifier);", 
                            "    pm.environment.set(\"ToAddress\",currentData.signatureInfo.ToAddress);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.signatureInfo.OriginatingTimestamp);", 
                            "    pm.environment.set(\"ResultContent\",currentData.signatureInfo.ResultContent);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.signatureInfo.SemanticQueryIndicator);", 
                            "    pm.environment.set(\"EventCategory\",currentData.signatureInfo.EventCategory);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.signatureInfo.OperationalExecutionTime);", 
                            "    pm.environment.set(\"expirationTime\",currentData.signatureInfo.content.expirationTime);", 
                            "    pm.environment.set(\"verificationResult\",currentData.signatureInfo.content.verificationResult);", 
                            "    pm.environment.set(\"algorithm\",currentData.signatureInfo.content.algorithm);", 
                            "    pm.environment.set(\"resourceType\",currentData.signatureInfo.content.resourceType);", 
                            "    pm.environment.set(\"accessControlPolicyIDs\",currentData.signatureInfo.content.accessControlPolicyIDs);", 
                            "    pm.environment.set(\"keyData\",currentData.signatureInfo.content.keyData);", 
                            "    pm.environment.set(\"signature\",currentData.signatureInfo.content.signature);", 
                            "    pm.environment.set(\"creationTime\",currentData.signatureInfo.content.creationTime);", 
                            "    pm.environment.set(\"parentID\",currentData.signatureInfo.content.parentID);", 
                            "    pm.environment.set(\"resourceName\",currentData.signatureInfo.content.resourceName);", 
                            "    pm.environment.set(\"lastModifiedTime\",currentData.signatureInfo.content.lastModifiedTime);", 
                            "    pm.environment.set(\"resourceID\",currentData.signatureInfo.content.resourceID);", 
                            "    pm.environment.set(\"message\",currentData.signatureInfo.content.message);", 
                            "    pm.environment.set(\"keyInformation\",currentData.signatureInfo.content.keyInformation);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.signatureInfo.AuthorizationSignatureIndicator);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.signatureInfo.LocalTokenIDs);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.signatureInfo.AuthorizationSignature);", 
                            "    pm.environment.set(\"Tokens\",currentData.signatureInfo.Tokens);", 
                            "    pm.environment.set(\"VendorInformation\",currentData.signatureInfo.VendorInformation);", 
                            "    pm.environment.set(\"ResponseType\",currentData.signatureInfo.ResponseType);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.signatureInfo.TokenRequestIndicator);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.signatureInfo.GroupRequestTargetMembers);", 
                            "    pm.environment.set(\"FromId\",currentData.signatureInfo.FromId);", 
                            "    pm.environment.set(\"RequestId\",currentData.signatureInfo.RequestId);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.signatureInfo.ReqExpirationTimestamp);", 
                            "    pm.environment.set(\"TokenIDs\",currentData.signatureInfo.TokenIDs);", 
                            "    pm.environment.set(\"resourceType\",currentData.signatureInfo.resourceType);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.signatureInfo.DeliveryAggregation);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.signatureInfo.ReleaseVersionIndicator);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.signatureInfo.DesiredIdentifierResultType);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.signatureInfo.ResExpirationTimestamp);", 
                            "    pm.environment.set(\"RoleIDs\",currentData.signatureInfo.RoleIDs);", 
                            "    pm.environment.set(\"Operation\",currentData.signatureInfo.Operation);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.signatureInfo.ResultPersistence);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.signatureInfo.AuthorizationRelationshipIndicator);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.signatureInfo.FilterCriteria);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "PUT", 
            "preRequestScript": "", 
            "data": [], 
            "id": "a96219de-1865-49e2-9661-b3111ab9413d236", 
            "description": "This method updates the information about a specific signatureInfo resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/sensitiveDataObject?ToAddress={{ToAddress}}&FromId={{FromId}}&resourceName={{resourceName}}", 
            "name": "TC_204", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432542, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/238?query=/iot3/example/sensitiveDataObject?ToAddress={{ToAddress}}?FromId={{FromId}}?resourceName={{resourceName}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    pm.environment.set(\"resourceName\",currentData.resourceName);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "DELETE", 
            "preRequestScript": "", 
            "data": [], 
            "id": "eb7ea081-7cf8-4a8f-87d0-834a7628aff3237", 
            "description": "This method delete the information about a specific sensitiveDataObjectInfo resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/secureConnection?ToAddress={{ToAddress}}&FromId={{FromId}}&Operation={{Operation}}&RequestId={{RequestId}}&ResourceType={{ResourceType}}&OriginatingTimestamp={{OriginatingTimestamp}}&ReqExpirationTimestamp={{ReqExpirationTimestamp}}&ResExpirationTimestamp={{ResExpirationTimestamp}}&EventCategory={{EventCategory}}&OperationalExecutionTime={{OperationalExecutionTime}}&ResponseType={{ResponseType}}&ResultPersistence={{ResultPersistence}}&ResultContent={{ResultContent}}&DeliveryAggregation={{DeliveryAggregation}}&GroupRequestIdentifier={{GroupRequestIdentifier}}&FilterCriteria={{FilterCriteria}}&DesiredIdentifierResultType={{DesiredIdentifierResultType}}&TokenRequestIndicator={{TokenRequestIndicator}}&Tokens={{Tokens}}&TokenIDs={{TokenIDs}}&RoleIDs={{RoleIDs}}&LocalTokenIDs={{LocalTokenIDs}}&ReleaseVersionIndicator={{ReleaseVersionIndicator}}&VendorInformation={{VendorInformation}}&GroupRequestTargetMembers={{GroupRequestTargetMembers}}&AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}&AuthorizationSignature={{AuthorizationSignature}}&AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}&SemanticQueryIndicator={{SemanticQueryIndicator}}", 
            "name": "TC_204", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432543, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/239?query=/iot3/example/secureConnection?ToAddress={{ToAddress}}?FromId={{FromId}}?Operation={{Operation}}?RequestId={{RequestId}}?ResourceType={{ResourceType}}?OriginatingTimestamp={{OriginatingTimestamp}}?ReqExpirationTimestamp={{ReqExpirationTimestamp}}?ResExpirationTimestamp={{ResExpirationTimestamp}}?EventCategory={{EventCategory}}?OperationalExecutionTime={{OperationalExecutionTime}}?ResponseType={{ResponseType}}?ResultPersistence={{ResultPersistence}}?ResultContent={{ResultContent}}?DeliveryAggregation={{DeliveryAggregation}}?GroupRequestIdentifier={{GroupRequestIdentifier}}?FilterCriteria={{FilterCriteria}}?DesiredIdentifierResultType={{DesiredIdentifierResultType}}?TokenRequestIndicator={{TokenRequestIndicator}}?Tokens={{Tokens}}?TokenIDs={{TokenIDs}}?RoleIDs={{RoleIDs}}?LocalTokenIDs={{LocalTokenIDs}}?ReleaseVersionIndicator={{ReleaseVersionIndicator}}?VendorInformation={{VendorInformation}}?GroupRequestTargetMembers={{GroupRequestTargetMembers}}?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}?AuthorizationSignature={{AuthorizationSignature}}?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}?SemanticQueryIndicator={{SemanticQueryIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    pm.environment.set(\"Operation\",currentData.Operation);", 
                            "    pm.environment.set(\"RequestId\",currentData.RequestId);", 
                            "    pm.environment.set(\"ResourceType\",currentData.ResourceType);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.OriginatingTimestamp);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.ReqExpirationTimestamp);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.ResExpirationTimestamp);", 
                            "    pm.environment.set(\"EventCategory\",currentData.EventCategory);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.OperationalExecutionTime);", 
                            "    pm.environment.set(\"ResponseType\",currentData.ResponseType);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.ResultPersistence);", 
                            "    pm.environment.set(\"ResultContent\",currentData.ResultContent);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.DeliveryAggregation);", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.GroupRequestIdentifier);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.FilterCriteria);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.DesiredIdentifierResultType);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.TokenRequestIndicator);", 
                            "    pm.environment.set(\"Tokens\",currentData.Tokens);", 
                            "    pm.environment.set(\"TokenIDs\",currentData.TokenIDs);", 
                            "    pm.environment.set(\"RoleIDs\",currentData.RoleIDs);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.LocalTokenIDs);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.ReleaseVersionIndicator);", 
                            "    pm.environment.set(\"VendorInformation\",currentData.VendorInformation);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.GroupRequestTargetMembers);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.AuthorizationSignatureIndicator);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.AuthorizationSignature);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.AuthorizationRelationshipIndicator);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.SemanticQueryIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "DELETE", 
            "preRequestScript": "", 
            "data": [], 
            "id": "2ea2bb84-4b76-490c-9b39-2f4c4db5fcdd238", 
            "description": "This method delete the information about a specific secureConnectionInfo resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/hash?ToAddress={{ToAddress}}&FromId={{FromId}}&Operation={{Operation}}&RequestId={{RequestId}}&ResourceType={{ResourceType}}&OriginatingTimestamp={{OriginatingTimestamp}}&ReqExpirationTimestamp={{ReqExpirationTimestamp}}&ResExpirationTimestamp={{ResExpirationTimestamp}}&EventCategory={{EventCategory}}&OperationalExecutionTime={{OperationalExecutionTime}}&ResponseType={{ResponseType}}&ResultPersistence={{ResultPersistence}}&ResultContent={{ResultContent}}&DeliveryAggregation={{DeliveryAggregation}}&GroupRequestIdentifier={{GroupRequestIdentifier}}&FilterCriteria={{FilterCriteria}}&DesiredIdentifierResultType={{DesiredIdentifierResultType}}&TokenRequestIndicator={{TokenRequestIndicator}}&Tokens={{Tokens}}&TokenIDs={{TokenIDs}}&RoleIDs={{RoleIDs}}&LocalTokenIDs={{LocalTokenIDs}}&ReleaseVersionIndicator={{ReleaseVersionIndicator}}&VendorInformation={{VendorInformation}}&GroupRequestTargetMembers={{GroupRequestTargetMembers}}&AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}&AuthorizationSignature={{AuthorizationSignature}}&AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}&SemanticQueryIndicator={{SemanticQueryIndicator}}", 
            "name": "TC_204", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432544, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/240?query=/iot3/example/hash?ToAddress={{ToAddress}}?FromId={{FromId}}?Operation={{Operation}}?RequestId={{RequestId}}?ResourceType={{ResourceType}}?OriginatingTimestamp={{OriginatingTimestamp}}?ReqExpirationTimestamp={{ReqExpirationTimestamp}}?ResExpirationTimestamp={{ResExpirationTimestamp}}?EventCategory={{EventCategory}}?OperationalExecutionTime={{OperationalExecutionTime}}?ResponseType={{ResponseType}}?ResultPersistence={{ResultPersistence}}?ResultContent={{ResultContent}}?DeliveryAggregation={{DeliveryAggregation}}?GroupRequestIdentifier={{GroupRequestIdentifier}}?FilterCriteria={{FilterCriteria}}?DesiredIdentifierResultType={{DesiredIdentifierResultType}}?TokenRequestIndicator={{TokenRequestIndicator}}?Tokens={{Tokens}}?TokenIDs={{TokenIDs}}?RoleIDs={{RoleIDs}}?LocalTokenIDs={{LocalTokenIDs}}?ReleaseVersionIndicator={{ReleaseVersionIndicator}}?VendorInformation={{VendorInformation}}?GroupRequestTargetMembers={{GroupRequestTargetMembers}}?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}?AuthorizationSignature={{AuthorizationSignature}}?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}?SemanticQueryIndicator={{SemanticQueryIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    pm.environment.set(\"Operation\",currentData.Operation);", 
                            "    pm.environment.set(\"RequestId\",currentData.RequestId);", 
                            "    pm.environment.set(\"ResourceType\",currentData.ResourceType);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.OriginatingTimestamp);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.ReqExpirationTimestamp);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.ResExpirationTimestamp);", 
                            "    pm.environment.set(\"EventCategory\",currentData.EventCategory);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.OperationalExecutionTime);", 
                            "    pm.environment.set(\"ResponseType\",currentData.ResponseType);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.ResultPersistence);", 
                            "    pm.environment.set(\"ResultContent\",currentData.ResultContent);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.DeliveryAggregation);", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.GroupRequestIdentifier);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.FilterCriteria);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.DesiredIdentifierResultType);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.TokenRequestIndicator);", 
                            "    pm.environment.set(\"Tokens\",currentData.Tokens);", 
                            "    pm.environment.set(\"TokenIDs\",currentData.TokenIDs);", 
                            "    pm.environment.set(\"RoleIDs\",currentData.RoleIDs);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.LocalTokenIDs);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.ReleaseVersionIndicator);", 
                            "    pm.environment.set(\"VendorInformation\",currentData.VendorInformation);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.GroupRequestTargetMembers);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.AuthorizationSignatureIndicator);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.AuthorizationSignature);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.AuthorizationRelationshipIndicator);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.SemanticQueryIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "DELETE", 
            "preRequestScript": "", 
            "data": [], 
            "id": "ef5debc9-ca95-4f12-bc4e-1eddbadc97d9239", 
            "description": "This method delete the information about a specific hashInfo resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/identity?ToAddress={{ToAddress}}&FromId={{FromId}}&Operation={{Operation}}&RequestId={{RequestId}}&ResourceType={{ResourceType}}&OriginatingTimestamp={{OriginatingTimestamp}}&ReqExpirationTimestamp={{ReqExpirationTimestamp}}&ResExpirationTimestamp={{ResExpirationTimestamp}}&EventCategory={{EventCategory}}&OperationalExecutionTime={{OperationalExecutionTime}}&ResponseType={{ResponseType}}&ResultPersistence={{ResultPersistence}}&ResultContent={{ResultContent}}&DeliveryAggregation={{DeliveryAggregation}}&GroupRequestIdentifier={{GroupRequestIdentifier}}&FilterCriteria={{FilterCriteria}}&DesiredIdentifierResultType={{DesiredIdentifierResultType}}&TokenRequestIndicator={{TokenRequestIndicator}}&Tokens={{Tokens}}&TokenIDs={{TokenIDs}}&RoleIDs={{RoleIDs}}&LocalTokenIDs={{LocalTokenIDs}}&ReleaseVersionIndicator={{ReleaseVersionIndicator}}&VendorInformation={{VendorInformation}}&GroupRequestTargetMembers={{GroupRequestTargetMembers}}&AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}&AuthorizationSignature={{AuthorizationSignature}}&AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}&SemanticQueryIndicator={{SemanticQueryIndicator}}", 
            "name": "TC_204", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/241?query=/iot3/example/identity?ToAddress={{ToAddress}}?FromId={{FromId}}?Operation={{Operation}}?RequestId={{RequestId}}?ResourceType={{ResourceType}}?OriginatingTimestamp={{OriginatingTimestamp}}?ReqExpirationTimestamp={{ReqExpirationTimestamp}}?ResExpirationTimestamp={{ResExpirationTimestamp}}?EventCategory={{EventCategory}}?OperationalExecutionTime={{OperationalExecutionTime}}?ResponseType={{ResponseType}}?ResultPersistence={{ResultPersistence}}?ResultContent={{ResultContent}}?DeliveryAggregation={{DeliveryAggregation}}?GroupRequestIdentifier={{GroupRequestIdentifier}}?FilterCriteria={{FilterCriteria}}?DesiredIdentifierResultType={{DesiredIdentifierResultType}}?TokenRequestIndicator={{TokenRequestIndicator}}?Tokens={{Tokens}}?TokenIDs={{TokenIDs}}?RoleIDs={{RoleIDs}}?LocalTokenIDs={{LocalTokenIDs}}?ReleaseVersionIndicator={{ReleaseVersionIndicator}}?VendorInformation={{VendorInformation}}?GroupRequestTargetMembers={{GroupRequestTargetMembers}}?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}?AuthorizationSignature={{AuthorizationSignature}}?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}?SemanticQueryIndicator={{SemanticQueryIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    pm.environment.set(\"Operation\",currentData.Operation);", 
                            "    pm.environment.set(\"RequestId\",currentData.RequestId);", 
                            "    pm.environment.set(\"ResourceType\",currentData.ResourceType);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.OriginatingTimestamp);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.ReqExpirationTimestamp);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.ResExpirationTimestamp);", 
                            "    pm.environment.set(\"EventCategory\",currentData.EventCategory);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.OperationalExecutionTime);", 
                            "    pm.environment.set(\"ResponseType\",currentData.ResponseType);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.ResultPersistence);", 
                            "    pm.environment.set(\"ResultContent\",currentData.ResultContent);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.DeliveryAggregation);", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.GroupRequestIdentifier);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.FilterCriteria);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.DesiredIdentifierResultType);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.TokenRequestIndicator);", 
                            "    pm.environment.set(\"Tokens\",currentData.Tokens);", 
                            "    pm.environment.set(\"TokenIDs\",currentData.TokenIDs);", 
                            "    pm.environment.set(\"RoleIDs\",currentData.RoleIDs);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.LocalTokenIDs);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.ReleaseVersionIndicator);", 
                            "    pm.environment.set(\"VendorInformation\",currentData.VendorInformation);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.GroupRequestTargetMembers);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.AuthorizationSignatureIndicator);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.AuthorizationSignature);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.AuthorizationRelationshipIndicator);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.SemanticQueryIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "DELETE", 
            "preRequestScript": "", 
            "data": [], 
            "id": "95a7508e-da95-4db2-8784-c01b46e35419240", 
            "description": "This method delete the information about a specific identityInfo resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/rand?ToAddress={{ToAddress}}&FromId={{FromId}}&Operation={{Operation}}&RequestId={{RequestId}}&ResourceType={{ResourceType}}&OriginatingTimestamp={{OriginatingTimestamp}}&ReqExpirationTimestamp={{ReqExpirationTimestamp}}&ResExpirationTimestamp={{ResExpirationTimestamp}}&EventCategory={{EventCategory}}&OperationalExecutionTime={{OperationalExecutionTime}}&ResponseType={{ResponseType}}&ResultPersistence={{ResultPersistence}}&ResultContent={{ResultContent}}&DeliveryAggregation={{DeliveryAggregation}}&GroupRequestIdentifier={{GroupRequestIdentifier}}&FilterCriteria={{FilterCriteria}}&DesiredIdentifierResultType={{DesiredIdentifierResultType}}&TokenRequestIndicator={{TokenRequestIndicator}}&Tokens={{Tokens}}&TokenIDs={{TokenIDs}}&RoleIDs={{RoleIDs}}&LocalTokenIDs={{LocalTokenIDs}}&ReleaseVersionIndicator={{ReleaseVersionIndicator}}&VendorInformation={{VendorInformation}}&GroupRequestTargetMembers={{GroupRequestTargetMembers}}&AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}&AuthorizationSignature={{AuthorizationSignature}}&AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}&SemanticQueryIndicator={{SemanticQueryIndicator}}", 
            "name": "TC_204", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432545, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/242?query=/iot3/example/rand?ToAddress={{ToAddress}}?FromId={{FromId}}?Operation={{Operation}}?RequestId={{RequestId}}?ResourceType={{ResourceType}}?OriginatingTimestamp={{OriginatingTimestamp}}?ReqExpirationTimestamp={{ReqExpirationTimestamp}}?ResExpirationTimestamp={{ResExpirationTimestamp}}?EventCategory={{EventCategory}}?OperationalExecutionTime={{OperationalExecutionTime}}?ResponseType={{ResponseType}}?ResultPersistence={{ResultPersistence}}?ResultContent={{ResultContent}}?DeliveryAggregation={{DeliveryAggregation}}?GroupRequestIdentifier={{GroupRequestIdentifier}}?FilterCriteria={{FilterCriteria}}?DesiredIdentifierResultType={{DesiredIdentifierResultType}}?TokenRequestIndicator={{TokenRequestIndicator}}?Tokens={{Tokens}}?TokenIDs={{TokenIDs}}?RoleIDs={{RoleIDs}}?LocalTokenIDs={{LocalTokenIDs}}?ReleaseVersionIndicator={{ReleaseVersionIndicator}}?VendorInformation={{VendorInformation}}?GroupRequestTargetMembers={{GroupRequestTargetMembers}}?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}?AuthorizationSignature={{AuthorizationSignature}}?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}?SemanticQueryIndicator={{SemanticQueryIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    pm.environment.set(\"Operation\",currentData.Operation);", 
                            "    pm.environment.set(\"RequestId\",currentData.RequestId);", 
                            "    pm.environment.set(\"ResourceType\",currentData.ResourceType);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.OriginatingTimestamp);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.ReqExpirationTimestamp);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.ResExpirationTimestamp);", 
                            "    pm.environment.set(\"EventCategory\",currentData.EventCategory);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.OperationalExecutionTime);", 
                            "    pm.environment.set(\"ResponseType\",currentData.ResponseType);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.ResultPersistence);", 
                            "    pm.environment.set(\"ResultContent\",currentData.ResultContent);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.DeliveryAggregation);", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.GroupRequestIdentifier);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.FilterCriteria);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.DesiredIdentifierResultType);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.TokenRequestIndicator);", 
                            "    pm.environment.set(\"Tokens\",currentData.Tokens);", 
                            "    pm.environment.set(\"TokenIDs\",currentData.TokenIDs);", 
                            "    pm.environment.set(\"RoleIDs\",currentData.RoleIDs);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.LocalTokenIDs);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.ReleaseVersionIndicator);", 
                            "    pm.environment.set(\"VendorInformation\",currentData.VendorInformation);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.GroupRequestTargetMembers);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.AuthorizationSignatureIndicator);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.AuthorizationSignature);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.AuthorizationRelationshipIndicator);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.SemanticQueryIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "DELETE", 
            "preRequestScript": "", 
            "data": [], 
            "id": "b2b93601-ef24-42ce-bee2-ed3f304fd584241", 
            "description": "This method delete the information about a specific randInfo resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/cipher?ToAddress={{ToAddress}}&FromId={{FromId}}&Operation={{Operation}}&RequestId={{RequestId}}&ResourceType={{ResourceType}}&OriginatingTimestamp={{OriginatingTimestamp}}&ReqExpirationTimestamp={{ReqExpirationTimestamp}}&ResExpirationTimestamp={{ResExpirationTimestamp}}&EventCategory={{EventCategory}}&OperationalExecutionTime={{OperationalExecutionTime}}&ResponseType={{ResponseType}}&ResultPersistence={{ResultPersistence}}&ResultContent={{ResultContent}}&DeliveryAggregation={{DeliveryAggregation}}&GroupRequestIdentifier={{GroupRequestIdentifier}}&FilterCriteria={{FilterCriteria}}&DesiredIdentifierResultType={{DesiredIdentifierResultType}}&TokenRequestIndicator={{TokenRequestIndicator}}&Tokens={{Tokens}}&TokenIDs={{TokenIDs}}&RoleIDs={{RoleIDs}}&LocalTokenIDs={{LocalTokenIDs}}&ReleaseVersionIndicator={{ReleaseVersionIndicator}}&VendorInformation={{VendorInformation}}&GroupRequestTargetMembers={{GroupRequestTargetMembers}}&AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}&AuthorizationSignature={{AuthorizationSignature}}&AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}&SemanticQueryIndicator={{SemanticQueryIndicator}}", 
            "name": "TC_204", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/243?query=/iot3/example/cipher?ToAddress={{ToAddress}}?FromId={{FromId}}?Operation={{Operation}}?RequestId={{RequestId}}?ResourceType={{ResourceType}}?OriginatingTimestamp={{OriginatingTimestamp}}?ReqExpirationTimestamp={{ReqExpirationTimestamp}}?ResExpirationTimestamp={{ResExpirationTimestamp}}?EventCategory={{EventCategory}}?OperationalExecutionTime={{OperationalExecutionTime}}?ResponseType={{ResponseType}}?ResultPersistence={{ResultPersistence}}?ResultContent={{ResultContent}}?DeliveryAggregation={{DeliveryAggregation}}?GroupRequestIdentifier={{GroupRequestIdentifier}}?FilterCriteria={{FilterCriteria}}?DesiredIdentifierResultType={{DesiredIdentifierResultType}}?TokenRequestIndicator={{TokenRequestIndicator}}?Tokens={{Tokens}}?TokenIDs={{TokenIDs}}?RoleIDs={{RoleIDs}}?LocalTokenIDs={{LocalTokenIDs}}?ReleaseVersionIndicator={{ReleaseVersionIndicator}}?VendorInformation={{VendorInformation}}?GroupRequestTargetMembers={{GroupRequestTargetMembers}}?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}?AuthorizationSignature={{AuthorizationSignature}}?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}?SemanticQueryIndicator={{SemanticQueryIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    pm.environment.set(\"Operation\",currentData.Operation);", 
                            "    pm.environment.set(\"RequestId\",currentData.RequestId);", 
                            "    pm.environment.set(\"ResourceType\",currentData.ResourceType);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.OriginatingTimestamp);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.ReqExpirationTimestamp);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.ResExpirationTimestamp);", 
                            "    pm.environment.set(\"EventCategory\",currentData.EventCategory);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.OperationalExecutionTime);", 
                            "    pm.environment.set(\"ResponseType\",currentData.ResponseType);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.ResultPersistence);", 
                            "    pm.environment.set(\"ResultContent\",currentData.ResultContent);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.DeliveryAggregation);", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.GroupRequestIdentifier);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.FilterCriteria);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.DesiredIdentifierResultType);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.TokenRequestIndicator);", 
                            "    pm.environment.set(\"Tokens\",currentData.Tokens);", 
                            "    pm.environment.set(\"TokenIDs\",currentData.TokenIDs);", 
                            "    pm.environment.set(\"RoleIDs\",currentData.RoleIDs);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.LocalTokenIDs);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.ReleaseVersionIndicator);", 
                            "    pm.environment.set(\"VendorInformation\",currentData.VendorInformation);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.GroupRequestTargetMembers);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.AuthorizationSignatureIndicator);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.AuthorizationSignature);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.AuthorizationRelationshipIndicator);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.SemanticQueryIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "DELETE", 
            "preRequestScript": "", 
            "data": [], 
            "id": "ab38af4a-d680-42b4-a163-b0128bbf2305242", 
            "description": "This method delete the information about a specific cipherInfo resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/connectionInstance?ToAddress={{ToAddress}}&FromId={{FromId}}&Operation={{Operation}}&RequestId={{RequestId}}&ResourceType={{ResourceType}}&OriginatingTimestamp={{OriginatingTimestamp}}&ReqExpirationTimestamp={{ReqExpirationTimestamp}}&ResExpirationTimestamp={{ResExpirationTimestamp}}&EventCategory={{EventCategory}}&OperationalExecutionTime={{OperationalExecutionTime}}&ResponseType={{ResponseType}}&ResultPersistence={{ResultPersistence}}&ResultContent={{ResultContent}}&DeliveryAggregation={{DeliveryAggregation}}&GroupRequestIdentifier={{GroupRequestIdentifier}}&FilterCriteria={{FilterCriteria}}&DesiredIdentifierResultType={{DesiredIdentifierResultType}}&TokenRequestIndicator={{TokenRequestIndicator}}&Tokens={{Tokens}}&TokenIDs={{TokenIDs}}&RoleIDs={{RoleIDs}}&LocalTokenIDs={{LocalTokenIDs}}&ReleaseVersionIndicator={{ReleaseVersionIndicator}}&VendorInformation={{VendorInformation}}&GroupRequestTargetMembers={{GroupRequestTargetMembers}}&AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}&AuthorizationSignature={{AuthorizationSignature}}&AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}&SemanticQueryIndicator={{SemanticQueryIndicator}}", 
            "name": "TC_204", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432546, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/244?query=/iot3/example/connectionInstance?ToAddress={{ToAddress}}?FromId={{FromId}}?Operation={{Operation}}?RequestId={{RequestId}}?ResourceType={{ResourceType}}?OriginatingTimestamp={{OriginatingTimestamp}}?ReqExpirationTimestamp={{ReqExpirationTimestamp}}?ResExpirationTimestamp={{ResExpirationTimestamp}}?EventCategory={{EventCategory}}?OperationalExecutionTime={{OperationalExecutionTime}}?ResponseType={{ResponseType}}?ResultPersistence={{ResultPersistence}}?ResultContent={{ResultContent}}?DeliveryAggregation={{DeliveryAggregation}}?GroupRequestIdentifier={{GroupRequestIdentifier}}?FilterCriteria={{FilterCriteria}}?DesiredIdentifierResultType={{DesiredIdentifierResultType}}?TokenRequestIndicator={{TokenRequestIndicator}}?Tokens={{Tokens}}?TokenIDs={{TokenIDs}}?RoleIDs={{RoleIDs}}?LocalTokenIDs={{LocalTokenIDs}}?ReleaseVersionIndicator={{ReleaseVersionIndicator}}?VendorInformation={{VendorInformation}}?GroupRequestTargetMembers={{GroupRequestTargetMembers}}?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}?AuthorizationSignature={{AuthorizationSignature}}?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}?SemanticQueryIndicator={{SemanticQueryIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    pm.environment.set(\"Operation\",currentData.Operation);", 
                            "    pm.environment.set(\"RequestId\",currentData.RequestId);", 
                            "    pm.environment.set(\"ResourceType\",currentData.ResourceType);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.OriginatingTimestamp);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.ReqExpirationTimestamp);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.ResExpirationTimestamp);", 
                            "    pm.environment.set(\"EventCategory\",currentData.EventCategory);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.OperationalExecutionTime);", 
                            "    pm.environment.set(\"ResponseType\",currentData.ResponseType);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.ResultPersistence);", 
                            "    pm.environment.set(\"ResultContent\",currentData.ResultContent);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.DeliveryAggregation);", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.GroupRequestIdentifier);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.FilterCriteria);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.DesiredIdentifierResultType);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.TokenRequestIndicator);", 
                            "    pm.environment.set(\"Tokens\",currentData.Tokens);", 
                            "    pm.environment.set(\"TokenIDs\",currentData.TokenIDs);", 
                            "    pm.environment.set(\"RoleIDs\",currentData.RoleIDs);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.LocalTokenIDs);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.ReleaseVersionIndicator);", 
                            "    pm.environment.set(\"VendorInformation\",currentData.VendorInformation);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.GroupRequestTargetMembers);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.AuthorizationSignatureIndicator);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.AuthorizationSignature);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.AuthorizationRelationshipIndicator);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.SemanticQueryIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "DELETE", 
            "preRequestScript": "", 
            "data": [], 
            "id": "4d4041c3-fc80-48c2-983d-28c5871d8bbc243", 
            "description": "This method delete the information about a specific connectionInstanceInfo resource. "
        }, 
        {
            "responses": [], 
            "dataMode": "params", 
            "tests": "", 
            "pathVariables": {}, 
            "collectionId": "e3462ac7-5026-4cc4-acb7-337cf901cc34", 
            "url": "{{scheme}}://{{host}}:{{port}}/iot3/example/signature?ToAddress={{ToAddress}}&FromId={{FromId}}&Operation={{Operation}}&RequestId={{RequestId}}&ResourceType={{ResourceType}}&OriginatingTimestamp={{OriginatingTimestamp}}&ReqExpirationTimestamp={{ReqExpirationTimestamp}}&ResExpirationTimestamp={{ResExpirationTimestamp}}&EventCategory={{EventCategory}}&OperationalExecutionTime={{OperationalExecutionTime}}&ResponseType={{ResponseType}}&ResultPersistence={{ResultPersistence}}&ResultContent={{ResultContent}}&DeliveryAggregation={{DeliveryAggregation}}&GroupRequestIdentifier={{GroupRequestIdentifier}}&FilterCriteria={{FilterCriteria}}&DesiredIdentifierResultType={{DesiredIdentifierResultType}}&TokenRequestIndicator={{TokenRequestIndicator}}&Tokens={{Tokens}}&TokenIDs={{TokenIDs}}&RoleIDs={{RoleIDs}}&LocalTokenIDs={{LocalTokenIDs}}&ReleaseVersionIndicator={{ReleaseVersionIndicator}}&VendorInformation={{VendorInformation}}&GroupRequestTargetMembers={{GroupRequestTargetMembers}}&AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}&AuthorizationSignature={{AuthorizationSignature}}&AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}&SemanticQueryIndicator={{SemanticQueryIndicator}}", 
            "name": "TC_204", 
            "headers": "Accept: application/json\nContent-Type: application/json\n", 
            "descriptionFormat": "html", 
            "version": 2, 
            "rawModeData": null, 
            "time": 1560272432547, 
            "synced": false, 
            "events": [
                {
                    "script": {
                        "type": "text/javascript", 
                        "exec": [
                            "    var list = [];", 
                            "    pm.sendRequest({", 
                            [
                                "    url: 'localhost:8081/read_db/245?query=/iot3/example/signature?ToAddress={{ToAddress}}?FromId={{FromId}}?Operation={{Operation}}?RequestId={{RequestId}}?ResourceType={{ResourceType}}?OriginatingTimestamp={{OriginatingTimestamp}}?ReqExpirationTimestamp={{ReqExpirationTimestamp}}?ResExpirationTimestamp={{ResExpirationTimestamp}}?EventCategory={{EventCategory}}?OperationalExecutionTime={{OperationalExecutionTime}}?ResponseType={{ResponseType}}?ResultPersistence={{ResultPersistence}}?ResultContent={{ResultContent}}?DeliveryAggregation={{DeliveryAggregation}}?GroupRequestIdentifier={{GroupRequestIdentifier}}?FilterCriteria={{FilterCriteria}}?DesiredIdentifierResultType={{DesiredIdentifierResultType}}?TokenRequestIndicator={{TokenRequestIndicator}}?Tokens={{Tokens}}?TokenIDs={{TokenIDs}}?RoleIDs={{RoleIDs}}?LocalTokenIDs={{LocalTokenIDs}}?ReleaseVersionIndicator={{ReleaseVersionIndicator}}?VendorInformation={{VendorInformation}}?GroupRequestTargetMembers={{GroupRequestTargetMembers}}?AuthorizationSignatureIndicator={{AuthorizationSignatureIndicator}}?AuthorizationSignature={{AuthorizationSignature}}?AuthorizationRelationshipIndicator={{AuthorizationRelationshipIndicator}}?SemanticQueryIndicator={{SemanticQueryIndicator}}',"
                            ], 
                            "    method: 'GET',", 
                            "    header: 'Content-Type:application/x-www-form-urlencoded',", 
                            "    }, function (err, res) {", 
                            "    var response_json = res.json();", 
                            "    if(list.length === 0){", 
                            "    var key;", 
                            "    for (key in response_json) {", 
                            "        if (response_json.hasOwnProperty(key))", 
                            "        {", 
                            "            list.push(response_json[key]);", 
                            "        }", 
                            "    }", 
                            "", 
                            "    var currentData = list.shift();", 
                            "", 
                            "    pm.environment.set(\"ToAddress\",currentData.ToAddress);", 
                            "    pm.environment.set(\"FromId\",currentData.FromId);", 
                            "    pm.environment.set(\"Operation\",currentData.Operation);", 
                            "    pm.environment.set(\"RequestId\",currentData.RequestId);", 
                            "    pm.environment.set(\"ResourceType\",currentData.ResourceType);", 
                            "    pm.environment.set(\"OriginatingTimestamp\",currentData.OriginatingTimestamp);", 
                            "    pm.environment.set(\"ReqExpirationTimestamp\",currentData.ReqExpirationTimestamp);", 
                            "    pm.environment.set(\"ResExpirationTimestamp\",currentData.ResExpirationTimestamp);", 
                            "    pm.environment.set(\"EventCategory\",currentData.EventCategory);", 
                            "    pm.environment.set(\"OperationalExecutionTime\",currentData.OperationalExecutionTime);", 
                            "    pm.environment.set(\"ResponseType\",currentData.ResponseType);", 
                            "    pm.environment.set(\"ResultPersistence\",currentData.ResultPersistence);", 
                            "    pm.environment.set(\"ResultContent\",currentData.ResultContent);", 
                            "    pm.environment.set(\"DeliveryAggregation\",currentData.DeliveryAggregation);", 
                            "    pm.environment.set(\"GroupRequestIdentifier\",currentData.GroupRequestIdentifier);", 
                            "    pm.environment.set(\"FilterCriteria\",currentData.FilterCriteria);", 
                            "    pm.environment.set(\"DesiredIdentifierResultType\",currentData.DesiredIdentifierResultType);", 
                            "    pm.environment.set(\"TokenRequestIndicator\",currentData.TokenRequestIndicator);", 
                            "    pm.environment.set(\"Tokens\",currentData.Tokens);", 
                            "    pm.environment.set(\"TokenIDs\",currentData.TokenIDs);", 
                            "    pm.environment.set(\"RoleIDs\",currentData.RoleIDs);", 
                            "    pm.environment.set(\"LocalTokenIDs\",currentData.LocalTokenIDs);", 
                            "    pm.environment.set(\"ReleaseVersionIndicator\",currentData.ReleaseVersionIndicator);", 
                            "    pm.environment.set(\"VendorInformation\",currentData.VendorInformation);", 
                            "    pm.environment.set(\"GroupRequestTargetMembers\",currentData.GroupRequestTargetMembers);", 
                            "    pm.environment.set(\"AuthorizationSignatureIndicator\",currentData.AuthorizationSignatureIndicator);", 
                            "    pm.environment.set(\"AuthorizationSignature\",currentData.AuthorizationSignature);", 
                            "    pm.environment.set(\"AuthorizationRelationshipIndicator\",currentData.AuthorizationRelationshipIndicator);", 
                            "    pm.environment.set(\"SemanticQueryIndicator\",currentData.SemanticQueryIndicator);", 
                            "    }", 
                            "});"
                        ]
                    }, 
                    "listen": "prerequest"
                }
            ], 
            "method": "DELETE", 
            "preRequestScript": "", 
            "data": [], 
            "id": "389e4e7c-805f-4be0-a98c-30dc23f85820244", 
            "description": "This method delete the information about a specific signatureInfo resource. "
        }
    ], 
    "order": [], 
    "name": "IOT3_API3"
}