basePath: /iot/example
consumes:
- application/json
definitions:
  AE-ID:
    description: AE-ID
    type: string
  AEInfo:
    description: information of AE resource
    example:
      AEInfo:
        DeliveryAggregation: '{{DeliveryAggregation}}'
        DiscoveryResultType: '{{DiscoveryResultType}}'
        EventCategory: '{{EventCategory}}'
        FilterCriteria: '{{FilterCriteria}}'
        GroupRequestIdentifier: '{{GroupRequestIdentifier}}'
        Operation: '{{Operation}}'
        OperationalExecutionTime: '{{OperationalExecutionTime}}'
        OriginatingTimestamp: '{{OriginatingTimestamp}}'
        ReqExpirationTimestamp: '{{ReqExpirationTimestamp}}'
        RequestId: '{{RequestId}}'
        ResExpirationTimestamp: '{{ResExpirationTimestamp}}'
        ResourceType: '{{ResourceType}}'
        ResponseType: '{{ResponseType}}'
        ResultContent: '{{ResultContent}}'
        ResultPersistence: '{{ResultPersistence}}'
        content:
          AE-ID: '{{AE-ID}}'
          App-ID: '{{App-ID}}'
          accessControlPolicyIDs: '{{accessControlPolicyIDs}}'
          announceTo: '{{announceTo}}'
          announcedAttribute: '{{announcedAttribute}}'
          appName: '{{appName}}'
          contentSerialization: '{{contentSerialization}}'
          creationTime: '{{creationTime}}'
          expirationTime: '{{expirationTime}}'
          labels: '{{labels}}'
          lastModifiedTime: '{{lastModifiedTime}}'
          nodeLink: '{{nodeLink}}'
          ontologyRef: '{{ontologyRef}}'
          parentID: '{{parentID}}'
          pointOfAccess: '{{pointOfAccess}}'
          requestReachability: '{{requestReachability}}'
          resourceID: '{{resourceID}}'
          resourceName: '{{resourceName}}'
          resourceType: '{{resourceType}}'
        msgOriginatorId: '{{msgOriginatorId}}'
        targetAddress: '{{targetAddress}}'
    properties:
      DeliveryAggregation:
        $ref: '#/definitions/DeliveryAggregation'
      DiscoveryResultType:
        $ref: '#/definitions/DiscoveryResultType'
      EventCategory:
        $ref: '#/definitions/EventCategory'
      FilterCriteria:
        $ref: '#/definitions/FilterCriteria'
      GroupRequestIdentifier:
        $ref: '#/definitions/GroupRequestIdentifier'
      Operation:
        $ref: '#/definitions/Operation'
      OperationalExecutionTime:
        $ref: '#/definitions/OperationalExecutionTime'
      OriginatingTimestamp:
        $ref: '#/definitions/OriginatingTimestamp'
      ReqExpirationTimestamp:
        $ref: '#/definitions/ReqExpirationTimestamp'
      RequestId:
        $ref: '#/definitions/RequestId'
      ResExpirationTimestamp:
        $ref: '#/definitions/ResExpirationTimestamp'
      ResponseType:
        $ref: '#/definitions/ResponseType'
      ResultContent:
        $ref: '#/definitions/ResultContent'
      ResultPersistence:
        $ref: '#/definitions/ResultPersistence'
      content:
        $ref: '#/definitions/AEcontent'
      msgOriginatorId:
        $ref: '#/definitions/msgOriginatorId'
      resourceType:
        $ref: '#/definitions/ResourceType'
      targetAddress:
        $ref: '#/definitions/targetAddress'
    type: object
  AEcontent:
    example:
      AE-ID: ''
      App-ID: ''
      accessControlPolicyIDs: ''
      announceTo: ''
      announcedAttribute: ''
      appName: ''
      contentSerialization: ''
      creationTime: ''
      expirationTime: ''
      labels: ''
      lastModifiedTime: ''
      nodeLink: ''
      ontologyRef: ''
      parentID: ''
      pointOfAccess: ''
      requestReachability: ''
      resourceID: ''
      resourceName: ''
      resourceType: ''
    properties:
      AE-ID:
        $ref: '#/definitions/AE-ID'
      App-ID:
        $ref: '#/definitions/App-ID'
      accessControlPolicyIDs:
        $ref: '#/definitions/accessControlPolicyIDs'
      announceTo:
        $ref: '#/definitions/announceTo'
      announcedAttribute:
        $ref: '#/definitions/announcedAttribute'
      appName:
        $ref: '#/definitions/appName'
      contentSerialization:
        $ref: '#/definitions/contentSerialization'
      creationTime:
        $ref: '#/definitions/creationTime'
      expirationTime:
        $ref: '#/definitions/expirationTime'
      labels:
        $ref: '#/definitions/labels'
      lastModifiedTime:
        $ref: '#/definitions/lastModifiedTime'
      nodeLink:
        $ref: '#/definitions/nodeLink'
      ontologyRef:
        $ref: '#/definitions/ontologyRef'
      parentID:
        $ref: '#/definitions/parentID'
      pointOfAccess:
        $ref: '#/definitions/pointOfAccess'
      requestReachability:
        $ref: '#/definitions/requestReachability'
      resourceID:
        $ref: '#/definitions/resourceID'
      resourceName:
        $ref: '#/definitions/resourceName'
      resourceType:
        $ref: '#/definitions/resourceType'
    type: object
  App-ID:
    description: App-ID
    type: string
  CSE-ID:
    description: CSE-ID
    type: string
  CSEBase:
    description: CSEBase
    type: string
  CSEBaseInfo:
    description: information of CSEBaseInfo resource
    example:
      CSEBaseInfo:
        DeliveryAggregation: '{{DeliveryAggregation}}'
        DiscoveryResultType: '{{DiscoveryResultType}}'
        EventCategory: '{{EventCategory}}'
        FilterCriteria: '{{FilterCriteria}}'
        GroupRequestIdentifier: '{{GroupRequestIdentifier}}'
        Operation: '{{Operation}}'
        OperationalExecutionTime: '{{OperationalExecutionTime}}'
        OriginatingTimestamp: '{{OriginatingTimestamp}}'
        ReqExpirationTimestamp: '{{ReqExpirationTimestamp}}'
        RequestId: '{{RequestId}}'
        ResExpirationTimestamp: '{{ResExpirationTimestamp}}'
        ResourceType: '{{ResourceType}}'
        ResponseType: '{{ResponseType}}'
        ResultContent: '{{ResultContent}}'
        ResultPersistence: '{{ResultPersistence}}'
        content: '{{content}}'
        msgOriginatorId: '{{msgOriginatorId}}'
        targetAddress: '{{targetAddress}}'
    properties:
      DeliveryAggregation:
        $ref: '#/definitions/DeliveryAggregation'
      DiscoveryResultType:
        $ref: '#/definitions/DiscoveryResultType'
      EventCategory:
        $ref: '#/definitions/EventCategory'
      FilterCriteria:
        $ref: '#/definitions/FilterCriteria'
      GroupRequestIdentifier:
        $ref: '#/definitions/GroupRequestIdentifier'
      Operation:
        $ref: '#/definitions/Operation'
      OperationalExecutionTime:
        $ref: '#/definitions/OperationalExecutionTime'
      OriginatingTimestamp:
        $ref: '#/definitions/OriginatingTimestamp'
      ReqExpirationTimestamp:
        $ref: '#/definitions/ReqExpirationTimestamp'
      RequestId:
        $ref: '#/definitions/RequestId'
      ResExpirationTimestamp:
        $ref: '#/definitions/ResExpirationTimestamp'
      ResponseType:
        $ref: '#/definitions/ResponseType'
      ResultContent:
        $ref: '#/definitions/ResultContent'
      ResultPersistence:
        $ref: '#/definitions/ResultPersistence'
      content:
        $ref: '#/definitions/CSEBaseInfocontent'
      msgOriginatorId:
        $ref: '#/definitions/msgOriginatorId'
      resourceType:
        $ref: '#/definitions/ResourceType'
      targetAddress:
        $ref: '#/definitions/targetAddress'
    type: object
  CSEBaseInfocontent:
    description: CSEBaseInfocontent
    type: string
  DeliveryAggregation:
    description: DeliveryAggregation
    type: string
  DiscoveryResultType:
    description: DiscoveryResultType
    type: string
  EventCategory:
    description: EventCategory
    type: string
  FilterCriteria:
    description: FilterCriteria
    type: string
  FromId:
    description: FromId
    type: string
  GroupRequestIdentifier:
    description: GroupRequestIdentifier
    type: string
  M2M-Ext-ID:
    description: M2M-Ext-ID
    type: string
  Operation:
    description: Operation
    type: string
  OperationalExecutionTime:
    description: OperationalExecutionTime
    type: string
  OriginatingTimestamp:
    description: OriginatingTimestamp
    type: string
  ReqExpirationTimestamp:
    description: ReqExpirationTimestamp
    type: string
  RequestId:
    description: RequestId
    type: string
  ResExpirationTimestamp:
    description: ResExpirationTimestamp
    type: string
  ResourceType:
    description: resourceType
    type: string
  ResponseType:
    description: ResponseType
    type: string
  ResultContent:
    description: ResultContent
    type: string
  ResultPersistence:
    description: ResultPersistence
    type: string
  ToAddress:
    description: ToAddress
    type: string
  Trigger-Recipient-ID:
    description: Trigger-Recipient-ID
    type: string
  accessControlPolicyIDs:
    description: accessControlPolicyIDs
    type: string
  accessControlPolicyInfo:
    description: information of accessControlPolicy resource
    example:
      accessControlPolicyInfo:
        DeliveryAggregation: '{{DeliveryAggregation}}'
        DiscoveryResultType: '{{DiscoveryResultType}}'
        EventCategory: '{{EventCategory}}'
        FilterCriteria: '{{FilterCriteria}}'
        GroupRequestIdentifier: '{{GroupRequestIdentifier}}'
        Operation: '{{Operation}}'
        OperationalExecutionTime: '{{OperationalExecutionTime}}'
        OriginatingTimestamp: '{{OriginatingTimestamp}}'
        ReqExpirationTimestamp: '{{ReqExpirationTimestamp}}'
        RequestId: '{{RequestId}}'
        ResExpirationTimestamp: '{{ResExpirationTimestamp}}'
        ResourceType: '{{ResourceType}}'
        ResponseType: '{{ResponseType}}'
        ResultContent: '{{ResultContent}}'
        ResultPersistence: '{{ResultPersistence}}'
        content: '{{content}}'
        msgOriginatorId: '{{msgOriginatorId}}'
        targetAddress: '{{targetAddress}}'
    properties:
      DeliveryAggregation:
        $ref: '#/definitions/DeliveryAggregation'
      DiscoveryResultType:
        $ref: '#/definitions/DiscoveryResultType'
      EventCategory:
        $ref: '#/definitions/EventCategory'
      FilterCriteria:
        $ref: '#/definitions/FilterCriteria'
      GroupRequestIdentifier:
        $ref: '#/definitions/GroupRequestIdentifier'
      Operation:
        $ref: '#/definitions/Operation'
      OperationalExecutionTime:
        $ref: '#/definitions/OperationalExecutionTime'
      OriginatingTimestamp:
        $ref: '#/definitions/OriginatingTimestamp'
      ReqExpirationTimestamp:
        $ref: '#/definitions/ReqExpirationTimestamp'
      RequestId:
        $ref: '#/definitions/RequestId'
      ResExpirationTimestamp:
        $ref: '#/definitions/ResExpirationTimestamp'
      ResponseType:
        $ref: '#/definitions/ResponseType'
      ResultContent:
        $ref: '#/definitions/ResultContent'
      ResultPersistence:
        $ref: '#/definitions/ResultPersistence'
      content:
        $ref: '#/definitions/accessControlPolicycontent'
      msgOriginatorId:
        $ref: '#/definitions/msgOriginatorId'
      resourceType:
        $ref: '#/definitions/ResourceType'
      targetAddress:
        $ref: '#/definitions/targetAddress'
    type: object
  accessControlPolicycontent:
    description: accessControlPolicycontent
    type: string
  aggregatedRequest:
    description: aggregatedRequest
    type: string
  announceTo:
    description: announceTo
    type: string
  announcedAttribute:
    description: announcedAttribute
    type: string
  appName:
    description: appName
    type: string
  batchNotify:
    description: batchNotify
    type: string
  cmdType:
    description: cmdType
    type: string
  collectingEntityID:
    description: collectingEntityID
    type: string
  consistencyStrategy:
    description: consistencyStrategy
    type: string
  containerInfo:
    description: information of AE resource
    example:
      containerInfo:
        DeliveryAggregation: '{{DeliveryAggregation}}'
        DiscoveryResultType: '{{DiscoveryResultType}}'
        EventCategory: '{{EventCategory}}'
        FilterCriteria: '{{FilterCriteria}}'
        GroupRequestIdentifier: '{{GroupRequestIdentifier}}'
        Operation: '{{Operation}}'
        OperationalExecutionTime: '{{OperationalExecutionTime}}'
        OriginatingTimestamp: '{{OriginatingTimestamp}}'
        ReqExpirationTimestamp: '{{ReqExpirationTimestamp}}'
        RequestId: '{{RequestId}}'
        ResExpirationTimestamp: '{{ResExpirationTimestamp}}'
        ResourceType: '{{ResourceType}}'
        ResponseType: '{{ResponseType}}'
        ResultContent: '{{ResultContent}}'
        ResultPersistence: '{{ResultPersistence}}'
        content:
          accessControlPolicyIDs: '{{accessControlPolicyIDs}}'
          announceTo: '{{announceTo}}'
          announcedAttribute: '{{announcedAttribute}}'
          creationTime: '{{creationTime}}'
          creator: '{{creator}}'
          currentByteSize: '{{currentByteSize}}'
          currentNrOfInstances: '{{currentNrOfInstances}}'
          expirationTime: '{{expirationTime}}'
          labels: '{{labels}}'
          lastModifiedTime: '{{lastModifiedTime}}'
          locationID: '{{locationID}}'
          maxByteSize: '{{maxByteSize}}'
          maxNrOfInstances: '{{maxNrOfInstances}}'
          ontologyRef: '{{ontologyRef}}'
          parentID: '{{parentID}}'
          resourceID: '{{resourceID}}'
          resourceName: '{{resourceName}}'
          resourceType: '{{resourceType}}'
          stateTag: '{{stateTag}}'
        msgOriginatorId: '{{msgOriginatorId}}'
        targetAddress: '{{targetAddress}}'
    properties:
      DeliveryAggregation:
        $ref: '#/definitions/DeliveryAggregation'
      DiscoveryResultType:
        $ref: '#/definitions/DiscoveryResultType'
      EventCategory:
        $ref: '#/definitions/EventCategory'
      FilterCriteria:
        $ref: '#/definitions/FilterCriteria'
      GroupRequestIdentifier:
        $ref: '#/definitions/GroupRequestIdentifier'
      Operation:
        $ref: '#/definitions/Operation'
      OperationalExecutionTime:
        $ref: '#/definitions/OperationalExecutionTime'
      OriginatingTimestamp:
        $ref: '#/definitions/OriginatingTimestamp'
      ReqExpirationTimestamp:
        $ref: '#/definitions/ReqExpirationTimestamp'
      RequestId:
        $ref: '#/definitions/RequestId'
      ResExpirationTimestamp:
        $ref: '#/definitions/ResExpirationTimestamp'
      ResponseType:
        $ref: '#/definitions/ResponseType'
      ResultContent:
        $ref: '#/definitions/ResultContent'
      ResultPersistence:
        $ref: '#/definitions/ResultPersistence'
      content:
        $ref: '#/definitions/containercontent'
      msgOriginatorId:
        $ref: '#/definitions/msgOriginatorId'
      resourceType:
        $ref: '#/definitions/ResourceType'
      targetAddress:
        $ref: '#/definitions/targetAddress'
    type: object
  containercontent:
    example:
      accessControlPolicyIDs: ''
      announceTo: ''
      announcedAttribute: ''
      creationTime: ''
      creator: ''
      currentByteSize: ''
      currentNrOfInstances: ''
      expirationTime: ''
      labels: ''
      lastModifiedTime: ''
      locationID: ''
      maxByteSize: ''
      maxNrOfInstances: ''
      ontologyRef: ''
      parentID: ''
      resourceID: ''
      resourceName: ''
      resourceType: ''
      stateTag: ''
    properties:
      accessControlPolicyIDs:
        $ref: '#/definitions/accessControlPolicyIDs'
      announceTo:
        $ref: '#/definitions/announceTo'
      announcedAttribute:
        $ref: '#/definitions/announcedAttribute'
      creationTime:
        $ref: '#/definitions/creationTime'
      creator:
        $ref: '#/definitions/creator'
      currentByteSize:
        $ref: '#/definitions/currentByteSize'
      currentNrOfInstances:
        $ref: '#/definitions/currentNrOfInstances'
      expirationTime:
        $ref: '#/definitions/expirationTime'
      labels:
        $ref: '#/definitions/labels'
      lastModifiedTime:
        $ref: '#/definitions/lastModifiedTime'
      locationID:
        $ref: '#/definitions/locationID'
      maxByteSize:
        $ref: '#/definitions/maxByteSize'
      maxNrOfInstances:
        $ref: '#/definitions/maxNrOfInstances'
      ontologyRef:
        $ref: '#/definitions/ontologyRef'
      parentID:
        $ref: '#/definitions/parentID'
      resourceID:
        $ref: '#/definitions/resourceID'
      resourceName:
        $ref: '#/definitions/resourceName'
      resourceType:
        $ref: '#/definitions/resourceType'
      stateTag:
        $ref: '#/definitions/stateTag'
    type: object
  contentInfo:
    description: contentInfo
    type: string
  contentInstanceInfo:
    description: information of contentInstance resource
    example:
      contentInstanceInfo:
        DeliveryAggregation: '{{DeliveryAggregation}}'
        DiscoveryResultType: '{{DiscoveryResultType}}'
        EventCategory: '{{EventCategory}}'
        FilterCriteria: '{{FilterCriteria}}'
        GroupRequestIdentifier: '{{GroupRequestIdentifier}}'
        Operation: '{{Operation}}'
        OperationalExecutionTime: '{{OperationalExecutionTime}}'
        OriginatingTimestamp: '{{OriginatingTimestamp}}'
        ReqExpirationTimestamp: '{{ReqExpirationTimestamp}}'
        RequestId: '{{RequestId}}'
        ResExpirationTimestamp: '{{ResExpirationTimestamp}}'
        ResourceType: '{{ResourceType}}'
        ResponseType: '{{ResponseType}}'
        ResultContent: '{{ResultContent}}'
        ResultPersistence: '{{ResultPersistence}}'
        content:
          announceTo: '{{announceTo}}'
          announcedAttribute: '{{announcedAttribute}}'
          contentInfo: '{{contentInfo}}'
          contentSize: '{{contentSize}}'
          creationTime: '{{creationTime}}'
          creator: '{{creator}}'
          expirationTime: '{{expirationTime}}'
          labels: '{{labels}}'
          lastModifiedTime: '{{lastModifiedTime}}'
          ontologyRef: '{{ontologyRef}}'
          parentID: '{{parentID}}'
          resourceID: '{{resourceID}}'
          resourceName: '{{resourceName}}'
          resourceType: '{{resourceType}}'
          stateTag: '{{stateTag}}'
        msgOriginatorId: '{{msgOriginatorId}}'
        targetAddress: '{{targetAddress}}'
    properties:
      DeliveryAggregation:
        $ref: '#/definitions/DeliveryAggregation'
      DiscoveryResultType:
        $ref: '#/definitions/DiscoveryResultType'
      EventCategory:
        $ref: '#/definitions/EventCategory'
      FilterCriteria:
        $ref: '#/definitions/FilterCriteria'
      GroupRequestIdentifier:
        $ref: '#/definitions/GroupRequestIdentifier'
      Operation:
        $ref: '#/definitions/Operation'
      OperationalExecutionTime:
        $ref: '#/definitions/OperationalExecutionTime'
      OriginatingTimestamp:
        $ref: '#/definitions/OriginatingTimestamp'
      ReqExpirationTimestamp:
        $ref: '#/definitions/ReqExpirationTimestamp'
      RequestId:
        $ref: '#/definitions/RequestId'
      ResExpirationTimestamp:
        $ref: '#/definitions/ResExpirationTimestamp'
      ResponseType:
        $ref: '#/definitions/ResponseType'
      ResultContent:
        $ref: '#/definitions/ResultContent'
      ResultPersistence:
        $ref: '#/definitions/ResultPersistence'
      content:
        $ref: '#/definitions/contentInstancecontent'
      msgOriginatorId:
        $ref: '#/definitions/msgOriginatorId'
      resourceType:
        $ref: '#/definitions/ResourceType'
      targetAddress:
        $ref: '#/definitions/targetAddress'
    type: object
  contentInstancecontent:
    example:
      announceTo: ''
      announcedAttribute: ''
      contentInfo: ''
      contentSize: ''
      creationTime: ''
      creator: ''
      expirationTime: ''
      labels: ''
      lastModifiedTime: ''
      ontologyRef: ''
      parentID: ''
      resourceID: ''
      resourceName: ''
      resourceType: ''
      stateTag: ''
    properties:
      announceTo:
        $ref: '#/definitions/announceTo'
      announcedAttribute:
        $ref: '#/definitions/announcedAttribute'
      contentInfo:
        $ref: '#/definitions/contentInfo'
      contentSize:
        $ref: '#/definitions/contentSize'
      creationTime:
        $ref: '#/definitions/creationTime'
      creator:
        $ref: '#/definitions/creator'
      expirationTime:
        $ref: '#/definitions/expirationTime'
      labels:
        $ref: '#/definitions/labels'
      lastModifiedTime:
        $ref: '#/definitions/lastModifiedTime'
      ontologyRef:
        $ref: '#/definitions/ontologyRef'
      parentID:
        $ref: '#/definitions/parentID'
      resourceID:
        $ref: '#/definitions/resourceID'
      resourceName:
        $ref: '#/definitions/resourceName'
      resourceType:
        $ref: '#/definitions/resourceType'
      stateTag:
        $ref: '#/definitions/stateTag'
    type: object
  contentSerialization:
    description: contentSerialization
    type: string
  contentSize:
    description: contentSize
    type: string
  creationTime:
    description: creationTime
    type: string
  creator:
    description: creator
    type: string
  cseType:
    description: cseType
    type: string
  currentByteSize:
    description: currentByteSize
    type: string
  currentNrOfInstances:
    description: currentNrOfInstances
    type: string
  currentNrOfMembers:
    description: currentNrOfMembers
    type: string
  dataSize:
    description: dataSize
    type: string
  deliveryInfo:
    description: information of AE resource
    example:
      deliveryInfo:
        DeliveryAggregation: '{{DeliveryAggregation}}'
        DiscoveryResultType: '{{DiscoveryResultType}}'
        EventCategory: '{{EventCategory}}'
        FilterCriteria: '{{FilterCriteria}}'
        GroupRequestIdentifier: '{{GroupRequestIdentifier}}'
        Operation: '{{Operation}}'
        OperationalExecutionTime: '{{OperationalExecutionTime}}'
        OriginatingTimestamp: '{{OriginatingTimestamp}}'
        ReqExpirationTimestamp: '{{ReqExpirationTimestamp}}'
        RequestId: '{{RequestId}}'
        ResExpirationTimestamp: '{{ResExpirationTimestamp}}'
        ResourceType: '{{ResourceType}}'
        ResponseType: '{{ResponseType}}'
        ResultContent: '{{ResultContent}}'
        ResultPersistence: '{{ResultPersistence}}'
        content:
          accessControlPolicyIDs: '{{accessControlPolicyIDs}}'
          aggregatedRequest: '{{aggregatedRequest}}'
          creationTime: '{{creationTime}}'
          deliveryMetaData: '{{deliveryMetaData}}'
          eventCat: '{{eventCat}}'
          expirationTime: '{{expirationTime}}'
          labels: '{{labels}}'
          lastModifiedTime: '{{lastModifiedTime}}'
          lifespan: '{{lifespan}}'
          parentID: '{{parentID}}'
          resourceID: '{{resourceID}}'
          resourceName: '{{resourceName}}'
          resourceType: '{{resourceType}}'
          source: '{{source}}'
          stateTag: '{{stateTag}}'
          target: '{{target}}'
        msgOriginatorId: '{{msgOriginatorId}}'
        targetAddress: '{{targetAddress}}'
    properties:
      DeliveryAggregation:
        $ref: '#/definitions/DeliveryAggregation'
      DiscoveryResultType:
        $ref: '#/definitions/DiscoveryResultType'
      EventCategory:
        $ref: '#/definitions/EventCategory'
      FilterCriteria:
        $ref: '#/definitions/FilterCriteria'
      GroupRequestIdentifier:
        $ref: '#/definitions/GroupRequestIdentifier'
      Operation:
        $ref: '#/definitions/Operation'
      OperationalExecutionTime:
        $ref: '#/definitions/OperationalExecutionTime'
      OriginatingTimestamp:
        $ref: '#/definitions/OriginatingTimestamp'
      ReqExpirationTimestamp:
        $ref: '#/definitions/ReqExpirationTimestamp'
      RequestId:
        $ref: '#/definitions/RequestId'
      ResExpirationTimestamp:
        $ref: '#/definitions/ResExpirationTimestamp'
      ResponseType:
        $ref: '#/definitions/ResponseType'
      ResultContent:
        $ref: '#/definitions/ResultContent'
      ResultPersistence:
        $ref: '#/definitions/ResultPersistence'
      content:
        $ref: '#/definitions/deliverycontent'
      msgOriginatorId:
        $ref: '#/definitions/msgOriginatorId'
      resourceType:
        $ref: '#/definitions/ResourceType'
      targetAddress:
        $ref: '#/definitions/targetAddress'
    type: object
  deliveryMetaData:
    description: deliveryMetaData
    type: string
  deliverycontent:
    example:
      accessControlPolicyIDs: ''
      aggregatedRequest: ''
      creationTime: ''
      deliveryMetaData: ''
      eventCat: ''
      expirationTime: ''
      labels: ''
      lastModifiedTime: ''
      lifespan: ''
      parentID: ''
      resourceID: ''
      resourceName: ''
      resourceType: ''
      source: ''
      stateTag: ''
      target: ''
    properties:
      accessControlPolicyIDs:
        $ref: '#/definitions/accessControlPolicyIDs'
      aggregatedRequest:
        $ref: '#/definitions/aggregatedRequest'
      creationTime:
        $ref: '#/definitions/creationTime'
      deliveryMetaData:
        $ref: '#/definitions/deliveryMetaData'
      eventCat:
        $ref: '#/definitions/eventCat'
      expirationTime:
        $ref: '#/definitions/expirationTime'
      labels:
        $ref: '#/definitions/labels'
      lastModifiedTime:
        $ref: '#/definitions/lastModifiedTime'
      lifespan:
        $ref: '#/definitions/lifespan'
      parentID:
        $ref: '#/definitions/parentID'
      resourceID:
        $ref: '#/definitions/resourceID'
      resourceName:
        $ref: '#/definitions/resourceName'
      resourceType:
        $ref: '#/definitions/resourceType'
      source:
        $ref: '#/definitions/source'
      stateTag:
        $ref: '#/definitions/stateTag'
      target:
        $ref: '#/definitions/target'
    type: object
  description:
    description: description
    type: string
  deviceIdentifier:
    description: deviceIdentifier
    type: string
  event:
    description: event
    type: string
  eventCat:
    description: eventCat
    type: string
  eventConfigInfo:
    description: information of eventConfig resource
    example:
      eventConfigInfo:
        FromId: '{{FromId}}'
        ToAddress: '{{ToAddress}}'
        accessControlPolicyIDs: '{{accessControlPolicyIDs}}'
        creationTime: '{{creationTime}}'
        creator: '{{creator}}'
        dataSize: '{{dataSize}}'
        eventEnd: '{{eventEnd}}'
        eventID: '{{eventID}}'
        eventStart: '{{eventStart}}'
        eventType: '{{eventType}}'
        expirationTime: '{{expirationTime}}'
        labels: '{{labels}}'
        lastModifiedTime: '{{lastModifiedTime}}'
        operationType: '{{operationType}}'
        parentID: '{{parentID}}'
        resourceID: '{{resourceID}}'
        resourceName: '{{resourceName}}'
        resourceType: '{{resourceType}}'
    properties:
      FromId:
        $ref: '#/definitions/FromId'
      ToAddress:
        $ref: '#/definitions/ToAddress'
      accessControlPolicyIDs:
        $ref: '#/definitions/accessControlPolicyIDs'
      creationTime:
        $ref: '#/definitions/creationTime'
      creator:
        $ref: '#/definitions/creator'
      dataSize:
        $ref: '#/definitions/dataSize'
      eventEnd:
        $ref: '#/definitions/eventEnd'
      eventID:
        $ref: '#/definitions/eventID'
      eventStart:
        $ref: '#/definitions/eventStart'
      eventType:
        $ref: '#/definitions/eventType'
      expirationTime:
        $ref: '#/definitions/expirationTime'
      labels:
        $ref: '#/definitions/labels'
      lastModifiedTime:
        $ref: '#/definitions/lastModifiedTime'
      operationType:
        $ref: '#/definitions/operationType'
      parentID:
        $ref: '#/definitions/parentID'
      resourceID:
        $ref: '#/definitions/resourceID'
      resourceName:
        $ref: '#/definitions/resourceName'
      resourceType:
        $ref: '#/definitions/resourceType'
    type: object
  eventEnd:
    description: eventEnd
    type: string
  eventID:
    description: eventID
    type: string
  eventNotificationCriteria:
    description: eventNotificationCriteria
    type: string
  eventStart:
    description: eventStart
    type: string
  eventType:
    description: eventType
    type: string
  execDelay:
    description: execDelay
    type: string
  execEnable:
    description: execEnable
    type: string
  execFrequency:
    description: execFrequency
    type: string
  execNumber:
    description: execNumber
    type: string
  execReqArgs:
    description: execReqArgs
    type: string
  execTarget:
    description: execTarget
    type: string
  expirationCounter:
    description: expirationCounter
    type: string
  expirationTime:
    description: expirationTime
    type: string
  fanOutPointInfo:
    description: information of group resource
    example:
      fanOutPointInfo:
        FromId: '{{FromId}}'
        ToAddress: '{{ToAddress}}'
        content:
          creator: '{{creator}}'
          resourceID: '{{resourceID}}'
          resourceName: '{{resourceName}}'
          resourceType: '{{resourceType}}'
        groupReqId: '{{groupReqId}}'
    properties:
      FromId:
        $ref: '#/definitions/FromId'
      ToAddress:
        $ref: '#/definitions/ToAddress'
      content:
        $ref: '#/definitions/fanOutPointcontent'
      groupReqId:
        $ref: '#/definitions/groupReqId'
    type: object
  fanOutPointcontent:
    example:
      creator: ''
      resourceID: ''
      resourceName: ''
      resourceType: ''
    properties:
      creator:
        $ref: '#/definitions/creator'
      resourceID:
        $ref: '#/definitions/resourceID'
      resourceName:
        $ref: '#/definitions/resourceName'
      resourceType:
        $ref: '#/definitions/resourceType'
    type: object
  groupID:
    description: groupID
    type: string
  groupInfo:
    description: information of group resource
    example:
      groupInfo:
        FromId: '{{FromId}}'
        ToAddress: '{{ToAddress}}'
        accessControlPolicyIDs: '{{accessControlPolicyIDs}}'
        announceTo: '{{announceTo}}'
        announcedAttribute: '{{announcedAttribute}}'
        consistencyStrategy: '{{consistencyStrategy}}'
        creationTime: '{{creationTime}}'
        creator: '{{creator}}'
        currentNrOfMembers: '{{currentNrOfMembers}}'
        expirationTime: '{{expirationTime}}'
        groupName: '{{groupName}}'
        labels: '{{labels}}'
        lastModifiedTime: '{{lastModifiedTime}}'
        maxNrOfMembers: '{{maxNrOfMembers}}'
        memberIDs: '{{memberIDs}}'
        memberType: '{{memberType}}'
        memberTypeValidated: '{{memberTypeValidated}}'
        membersAccessControlPolicyIDs: '{{membersAccessControlPolicyIDs}}'
        parentID: '{{parentID}}'
        resourceID: '{{resourceID}}'
        resourceName: '{{resourceName}}'
        resourceType: '{{resourceType}}'
    properties:
      FromId:
        $ref: '#/definitions/FromId'
      ToAddress:
        $ref: '#/definitions/ToAddress'
      accessControlPolicyIDs:
        $ref: '#/definitions/accessControlPolicyIDs'
      announceTo:
        $ref: '#/definitions/announceTo'
      announcedAttribute:
        $ref: '#/definitions/announcedAttribute'
      consistencyStrategy:
        $ref: '#/definitions/consistencyStrategy'
      creationTime:
        $ref: '#/definitions/creationTime'
      creator:
        $ref: '#/definitions/creator'
      currentNrOfMembers:
        $ref: '#/definitions/currentNrOfMembers'
      expirationTime:
        $ref: '#/definitions/expirationTime'
      groupName:
        $ref: '#/definitions/groupName'
      labels:
        $ref: '#/definitions/labels'
      lastModifiedTime:
        $ref: '#/definitions/lastModifiedTime'
      maxNrOfMembers:
        $ref: '#/definitions/maxNrOfMembers'
      memberIDs:
        $ref: '#/definitions/memberIDs'
      memberType:
        $ref: '#/definitions/memberType'
      memberTypeValidated:
        $ref: '#/definitions/memberTypeValidated'
      membersAccessControlPolicyIDs:
        $ref: '#/definitions/membersAccessControlPolicyIDs'
      parentID:
        $ref: '#/definitions/parentID'
      resourceID:
        $ref: '#/definitions/resourceID'
      resourceName:
        $ref: '#/definitions/resourceName'
      resourceType:
        $ref: '#/definitions/resourceType'
    type: object
  groupName:
    description: groupName
    type: string
  groupReqId:
    description: groupReqId
    type: string
  hostedCSELink:
    description: hostedCSELink
    type: string
  inline_response_200:
    example:
      AEInfo:
        DeliveryAggregation: ''
        DiscoveryResultType: ''
        EventCategory: ''
        FilterCriteria: ''
        GroupRequestIdentifier: ''
        Operation: ''
        OperationalExecutionTime: ''
        OriginatingTimestamp: ''
        ReqExpirationTimestamp: ''
        RequestId: ''
        ResExpirationTimestamp: ''
        ResponseType: ''
        ResultContent: ''
        ResultPersistence: ''
        content: ''
        msgOriginatorId: ''
        resourceType: ''
        targetAddress: ''
    properties:
      AEInfo:
        $ref: '#/definitions/AEInfo'
  inline_response_200_1:
    example:
      remoteCSEInfo:
        DeliveryAggregation: ''
        DiscoveryResultType: ''
        EventCategory: ''
        FilterCriteria: ''
        GroupRequestIdentifier: ''
        Operation: ''
        OperationalExecutionTime: ''
        OriginatingTimestamp: ''
        ReqExpirationTimestamp: ''
        RequestId: ''
        ResExpirationTimestamp: ''
        ResponseType: ''
        ResultContent: ''
        ResultPersistence: ''
        content: ''
        msgOriginatorId: ''
        resourceType: ''
        targetAddress: ''
    properties:
      remoteCSEInfo:
        $ref: '#/definitions/remoteCSEInfo'
  inline_response_200_2:
    example:
      CSEBaseInfo:
        DeliveryAggregation: ''
        DiscoveryResultType: ''
        EventCategory: ''
        FilterCriteria: ''
        GroupRequestIdentifier: ''
        Operation: ''
        OperationalExecutionTime: ''
        OriginatingTimestamp: ''
        ReqExpirationTimestamp: ''
        RequestId: ''
        ResExpirationTimestamp: ''
        ResponseType: ''
        ResultContent: ''
        ResultPersistence: ''
        content: ''
        msgOriginatorId: ''
        resourceType: ''
        targetAddress: ''
    properties:
      CSEBaseInfo:
        $ref: '#/definitions/CSEBaseInfo'
  inline_response_200_accessControlPolicy:
    example:
      accessControlPolicyInfo:
        DeliveryAggregation: ''
        DiscoveryResultType: ''
        EventCategory: ''
        FilterCriteria: ''
        GroupRequestIdentifier: ''
        Operation: ''
        OperationalExecutionTime: ''
        OriginatingTimestamp: ''
        ReqExpirationTimestamp: ''
        RequestId: ''
        ResExpirationTimestamp: ''
        ResponseType: ''
        ResultContent: ''
        ResultPersistence: ''
        content: ''
        msgOriginatorId: ''
        resourceType: ''
        targetAddress: ''
    properties:
      accessControlPolicyInfo:
        $ref: '#/definitions/accessControlPolicyInfo'
  inline_response_200_container:
    example:
      containerInfo:
        DeliveryAggregation: ''
        DiscoveryResultType: ''
        EventCategory: ''
        FilterCriteria: ''
        GroupRequestIdentifier: ''
        Operation: ''
        OperationalExecutionTime: ''
        OriginatingTimestamp: ''
        ReqExpirationTimestamp: ''
        RequestId: ''
        ResExpirationTimestamp: ''
        ResponseType: ''
        ResultContent: ''
        ResultPersistence: ''
        content: ''
        msgOriginatorId: ''
        resourceType: ''
        targetAddress: ''
    properties:
      containerInfo:
        $ref: '#/definitions/containerInfo'
  inline_response_200_contentInstance:
    example:
      contentInstanceInfo:
        DeliveryAggregation: ''
        DiscoveryResultType: ''
        EventCategory: ''
        FilterCriteria: ''
        GroupRequestIdentifier: ''
        Operation: ''
        OperationalExecutionTime: ''
        OriginatingTimestamp: ''
        ReqExpirationTimestamp: ''
        RequestId: ''
        ResExpirationTimestamp: ''
        ResponseType: ''
        ResultContent: ''
        ResultPersistence: ''
        content: ''
        msgOriginatorId: ''
        resourceType: ''
        targetAddress: ''
    properties:
      contentInstanceInfo:
        $ref: '#/definitions/contentInstanceInfo'
  inline_response_200_delivery:
    example:
      deliveryInfo:
        DeliveryAggregation: ''
        DiscoveryResultType: ''
        EventCategory: ''
        FilterCriteria: ''
        GroupRequestIdentifier: ''
        Operation: ''
        OperationalExecutionTime: ''
        OriginatingTimestamp: ''
        ReqExpirationTimestamp: ''
        RequestId: ''
        ResExpirationTimestamp: ''
        ResponseType: ''
        ResultContent: ''
        ResultPersistence: ''
        content: ''
        msgOriginatorId: ''
        resourceType: ''
        targetAddress: ''
    properties:
      deliveryInfo:
        $ref: '#/definitions/deliveryInfo'
  inline_response_200_eventConfig:
    example:
      eventConfigInfo:
        FromId: ''
        ToAddress: ''
        accessControlPolicyIDs: ''
        creationTime: ''
        creator: ''
        dataSize: ''
        eventEnd: ''
        eventID: ''
        eventStart: ''
        eventType: ''
        expirationTime: ''
        labels: ''
        lastModifiedTime: ''
        operationType: ''
        parentID: ''
        resourceID: ''
        resourceName: ''
        resourceType: ''
    properties:
      eventConfigInfo:
        $ref: '#/definitions/eventConfigInfo'
  inline_response_200_fanOutPoint:
    example:
      fanOutPointInfo:
        FromId: ''
        ToAddress: ''
        content: ''
        groupReqId: ''
    properties:
      fanOutPointInfo:
        $ref: '#/definitions/fanOutPointInfo'
  inline_response_200_group:
    example:
      groupInfo:
        FromId: ''
        ToAddress: ''
        accessControlPolicyIDs: ''
        announceTo: ''
        announcedAttribute: ''
        consistencyStrategy: ''
        creationTime: ''
        creator: ''
        currentNrOfMembers: ''
        expirationTime: ''
        groupName: ''
        labels: ''
        lastModifiedTime: ''
        maxNrOfMembers: ''
        memberIDs: ''
        memberType: ''
        memberTypeValidated: ''
        membersAccessControlPolicyIDs: ''
        parentID: ''
        resourceID: ''
        resourceName: ''
        resourceType: ''
    properties:
      groupInfo:
        $ref: '#/definitions/groupInfo'
  inline_response_200_locationPolicy:
    example:
      locationPolicyInfo:
        FromId: ''
        ToAddress: ''
        accessControlPolicyIDs: ''
        announceTo: ''
        announcedAttribute: ''
        creationTime: ''
        expirationTime: ''
        labels: ''
        lastModifiedTime: ''
        locationContainerID: ''
        locationContainerName: ''
        locationServer: ''
        locationSource: ''
        locationStatus: ''
        locationTargetID: ''
        locationUpdatePeriod: ''
        parentID: ''
        resourceID: ''
        resourceName: ''
        resourceType: ''
    properties:
      locationPolicyInfo:
        $ref: '#/definitions/locationPolicyInfo'
  inline_response_200_m2mServiceSubscriptionProfile:
    example:
      m2mServiceSubscriptionProfileInfo:
        DeliveryAggregation: ''
        DiscoveryResultType: ''
        EventCategory: ''
        FilterCriteria: ''
        GroupRequestIdentifier: ''
        Operation: ''
        OperationalExecutionTime: ''
        OriginatingTimestamp: ''
        ReqExpirationTimestamp: ''
        RequestId: ''
        ResExpirationTimestamp: ''
        ResponseType: ''
        ResultContent: ''
        ResultPersistence: ''
        content: ''
        msgOriginatorId: ''
        resourceType: ''
        targetAddress: ''
    properties:
      m2mServiceSubscriptionProfileInfo:
        $ref: '#/definitions/m2mServiceSubscriptionProfileInfo'
  inline_response_200_mgmtCmd:
    example:
      mgmtCmdInfo:
        accessControlPolicyIDs: ''
        cmdType: ''
        creationTime: ''
        description: ''
        execDelay: ''
        execEnable: ''
        execFrequency: ''
        execNumber: ''
        execReqArgs: ''
        execTarget: ''
        expirationTime: ''
        labels: ''
        lastModifiedTime: ''
        parentID: ''
        resourceID: ''
        resourceName: ''
        resourceType: ''
    properties:
      mgmtCmdInfo:
        $ref: '#/definitions/mgmtCmdInfo'
  inline_response_200_mgmtObj:
    example:
      mgmtObjInfo:
        FromId: ''
        ToAddress: ''
        content: ''
    properties:
      mgmtObjInfo:
        $ref: '#/definitions/mgmtObjInfo'
  inline_response_200_node:
    example:
      nodeInfo:
        DeliveryAggregation: ''
        DiscoveryResultType: ''
        EventCategory: ''
        FilterCriteria: ''
        GroupRequestIdentifier: ''
        Operation: ''
        OperationalExecutionTime: ''
        OriginatingTimestamp: ''
        ReqExpirationTimestamp: ''
        RequestId: ''
        ResExpirationTimestamp: ''
        ResponseType: ''
        ResultContent: ''
        ResultPersistence: ''
        content: ''
        msgOriginatorId: ''
        resourceType: ''
        targetAddress: ''
    properties:
      nodeInfo:
        $ref: '#/definitions/nodeInfo'
  inline_response_200_pollingChannel:
    example:
      pollingChannelInfo:
        DeliveryAggregation: ''
        DiscoveryResultType: ''
        EventCategory: ''
        FilterCriteria: ''
        GroupRequestIdentifier: ''
        Operation: ''
        OperationalExecutionTime: ''
        OriginatingTimestamp: ''
        ReqExpirationTimestamp: ''
        RequestId: ''
        ResExpirationTimestamp: ''
        ResponseType: ''
        ResultContent: ''
        ResultPersistence: ''
        content: ''
        msgOriginatorId: ''
        resourceType: ''
        targetAddress: ''
    properties:
      pollingChannelInfo:
        $ref: '#/definitions/pollingChannelInfo'
  inline_response_200_request:
    example:
      requestInfo:
        DeliveryAggregation: ''
        DiscoveryResultType: ''
        EventCategory: ''
        FilterCriteria: ''
        GroupRequestIdentifier: ''
        Operation: ''
        OperationalExecutionTime: ''
        OriginatingTimestamp: ''
        ReqExpirationTimestamp: ''
        RequestId: ''
        ResExpirationTimestamp: ''
        ResponseType: ''
        ResultContent: ''
        ResultPersistence: ''
        content: ''
        msgOriginatorId: ''
        resourceType: ''
        targetAddress: ''
    properties:
      requestInfo:
        $ref: '#/definitions/requestInfo'
  inline_response_200_resource:
    example:
      resourceInfo:
        DeliveryAggregation: ''
        DiscoveryResultType: ''
        EventCategory: ''
        FilterCriteria: ''
        GroupRequestIdentifier: ''
        Operation: ''
        OperationalExecutionTime: ''
        OriginatingTimestamp: ''
        ReqExpirationTimestamp: ''
        RequestId: ''
        ResExpirationTimestamp: ''
        ResponseType: ''
        ResultContent: ''
        ResultPersistence: ''
        content: ''
        msgOriginatorId: ''
        resourceType: ''
        targetAddress: ''
    properties:
      resourceInfo:
        $ref: '#/definitions/resourceInfo'
  inline_response_200_serviceSubscribedAppRule:
    example:
      serviceSubscribedAppRuleInfo:
        DeliveryAggregation: ''
        DiscoveryResultType: ''
        EventCategory: ''
        FilterCriteria: ''
        GroupRequestIdentifier: ''
        Operation: ''
        OperationalExecutionTime: ''
        OriginatingTimestamp: ''
        ReqExpirationTimestamp: ''
        RequestId: ''
        ResExpirationTimestamp: ''
        ResponseType: ''
        ResultContent: ''
        ResultPersistence: ''
        content: ''
        msgOriginatorId: ''
        resourceType: ''
        targetAddress: ''
    properties:
      serviceSubscribedAppRuleInfo:
        $ref: '#/definitions/serviceSubscribedAppRuleInfo'
  inline_response_200_serviceSubscribedNode:
    example:
      serviceSubscribedNodeInfo:
        DeliveryAggregation: ''
        DiscoveryResultType: ''
        EventCategory: ''
        FilterCriteria: ''
        GroupRequestIdentifier: ''
        Operation: ''
        OperationalExecutionTime: ''
        OriginatingTimestamp: ''
        ReqExpirationTimestamp: ''
        RequestId: ''
        ResExpirationTimestamp: ''
        ResponseType: ''
        ResultContent: ''
        ResultPersistence: ''
        content: ''
        msgOriginatorId: ''
        resourceType: ''
        targetAddress: ''
    properties:
      serviceSubscribedNodeInfo:
        $ref: '#/definitions/serviceSubscribedNodeInfo'
  inline_response_200_statsCollect:
    example:
      statsCollectInfo:
        FromId: ''
        ToAddress: ''
        collectingEntityID: ''
        dataSize: ''
        event: ''
        eventEnd: ''
        eventStart: ''
        resourceID: ''
        resourceName: ''
        resourceType: ''
        statsCollectID: ''
        transactionType: ''
    properties:
      statsCollectInfo:
        $ref: '#/definitions/statsCollectInfo'
  inline_response_200_statsConfig:
    example:
      statsConfigInfo:
        FromId: ''
        ToAddress: ''
        accessControlPolicyIDs: ''
        creationTime: ''
        creator: ''
        expirationTime: ''
        labels: ''
        lastModifiedTime: ''
        parentID: ''
        resourceID: ''
        resourceName: ''
        resourceType: ''
    properties:
      statsConfigInfo:
        $ref: '#/definitions/statsConfigInfo'
  inline_response_200_subscription:
    example:
      subscriptionInfo:
        DeliveryAggregation: ''
        DiscoveryResultType: ''
        EventCategory: ''
        FilterCriteria: ''
        GroupRequestIdentifier: ''
        Operation: ''
        OperationalExecutionTime: ''
        OriginatingTimestamp: ''
        ReqExpirationTimestamp: ''
        RequestId: ''
        ResExpirationTimestamp: ''
        ResponseType: ''
        ResultContent: ''
        ResultPersistence: ''
        content: ''
        msgOriginatorId: ''
        resourceType: ''
        targetAddress: ''
    properties:
      subscriptionInfo:
        $ref: '#/definitions/subscriptionInfo'
  labels:
    description: labels
    type: string
  lastModifiedTime:
    description: lastModifiedTime
    type: string
  latestNotify:
    description: latestNotify
    type: string
  lifespan:
    description: lifespan
    type: string
  locationContainerID:
    description: locationContainerID
    type: string
  locationContainerName:
    description: locationContainerName
    type: string
  locationID:
    description: locationID
    type: string
  locationPolicyInfo:
    description: information of group resource
    example:
      locationPolicyInfo:
        FromId: '{{FromId}}'
        ToAddress: '{{ToAddress}}'
        accessControlPolicyIDs: '{{accessControlPolicyIDs}}'
        announceTo: '{{announceTo}}'
        announcedAttribute: '{{announcedAttribute}}'
        creationTime: '{{creationTime}}'
        expirationTime: '{{expirationTime}}'
        labels: '{{labels}}'
        lastModifiedTime: '{{lastModifiedTime}}'
        locationContainerID: '{{locationContainerID}}'
        locationContainerName: '{{locationContainerName}}'
        locationServer: '{{locationServer}}'
        locationSource: '{{locationSource}}'
        locationStatus: '{{locationStatus}}'
        locationTargetID: '{{locationTargetID}}'
        locationUpdatePeriod: '{{locationUpdatePeriod}}'
        parentID: '{{parentID}}'
        resourceID: '{{resourceID}}'
        resourceName: '{{resourceName}}'
        resourceType: '{{resourceType}}'
    properties:
      FromId:
        $ref: '#/definitions/FromId'
      ToAddress:
        $ref: '#/definitions/ToAddress'
      accessControlPolicyIDs:
        $ref: '#/definitions/accessControlPolicyIDs'
      announceTo:
        $ref: '#/definitions/announceTo'
      announcedAttribute:
        $ref: '#/definitions/announcedAttribute'
      creationTime:
        $ref: '#/definitions/creationTime'
      expirationTime:
        $ref: '#/definitions/expirationTime'
      labels:
        $ref: '#/definitions/labels'
      lastModifiedTime:
        $ref: '#/definitions/lastModifiedTime'
      locationContainerID:
        $ref: '#/definitions/locationContainerID'
      locationContainerName:
        $ref: '#/definitions/locationContainerName'
      locationServer:
        $ref: '#/definitions/locationServer'
      locationSource:
        $ref: '#/definitions/locationSource'
      locationStatus:
        $ref: '#/definitions/locationStatus'
      locationTargetID:
        $ref: '#/definitions/locationTargetID'
      locationUpdatePeriod:
        $ref: '#/definitions/locationUpdatePeriod'
      parentID:
        $ref: '#/definitions/parentID'
      resourceID:
        $ref: '#/definitions/resourceID'
      resourceName:
        $ref: '#/definitions/resourceName'
      resourceType:
        $ref: '#/definitions/resourceType'
    type: object
  locationServer:
    description: locationServer
    type: string
  locationSource:
    description: locationSource
    type: string
  locationStatus:
    description: locationStatus
    type: string
  locationTargetID:
    description: locationTargetID
    type: string
  locationUpdatePeriod:
    description: locationUpdatePeriod
    type: string
  m2mServiceSubscriptionProfileInfo:
    description: information of m2mServiceSubscriptionProfile resource
    example:
      m2mServiceSubscriptionProfileInfo:
        DeliveryAggregation: '{{DeliveryAggregation}}'
        DiscoveryResultType: '{{DiscoveryResultType}}'
        EventCategory: '{{EventCategory}}'
        FilterCriteria: '{{FilterCriteria}}'
        GroupRequestIdentifier: '{{GroupRequestIdentifier}}'
        Operation: '{{Operation}}'
        OperationalExecutionTime: '{{OperationalExecutionTime}}'
        OriginatingTimestamp: '{{OriginatingTimestamp}}'
        ReqExpirationTimestamp: '{{ReqExpirationTimestamp}}'
        RequestId: '{{RequestId}}'
        ResExpirationTimestamp: '{{ResExpirationTimestamp}}'
        ResourceType: '{{ResourceType}}'
        ResponseType: '{{ResponseType}}'
        ResultContent: '{{ResultContent}}'
        ResultPersistence: '{{ResultPersistence}}'
        content:
          accessControlPolicyIDs: '{{accessControlPolicyIDs}}'
          creationTime: '{{creationTime}}'
          expirationTime: '{{expirationTime}}'
          labels: '{{labels}}'
          lastModifiedTime: '{{lastModifiedTime}}'
          parentID: '{{parentID}}'
          resourceID: '{{resourceID}}'
          resourceName: '{{resourceName}}'
          resourceType: '{{resourceType}}'
        msgOriginatorId: '{{msgOriginatorId}}'
        targetAddress: '{{targetAddress}}'
    properties:
      DeliveryAggregation:
        $ref: '#/definitions/DeliveryAggregation'
      DiscoveryResultType:
        $ref: '#/definitions/DiscoveryResultType'
      EventCategory:
        $ref: '#/definitions/EventCategory'
      FilterCriteria:
        $ref: '#/definitions/FilterCriteria'
      GroupRequestIdentifier:
        $ref: '#/definitions/GroupRequestIdentifier'
      Operation:
        $ref: '#/definitions/Operation'
      OperationalExecutionTime:
        $ref: '#/definitions/OperationalExecutionTime'
      OriginatingTimestamp:
        $ref: '#/definitions/OriginatingTimestamp'
      ReqExpirationTimestamp:
        $ref: '#/definitions/ReqExpirationTimestamp'
      RequestId:
        $ref: '#/definitions/RequestId'
      ResExpirationTimestamp:
        $ref: '#/definitions/ResExpirationTimestamp'
      ResponseType:
        $ref: '#/definitions/ResponseType'
      ResultContent:
        $ref: '#/definitions/ResultContent'
      ResultPersistence:
        $ref: '#/definitions/ResultPersistence'
      content:
        $ref: '#/definitions/m2mServiceSubscriptionProfilecontent'
      msgOriginatorId:
        $ref: '#/definitions/msgOriginatorId'
      resourceType:
        $ref: '#/definitions/ResourceType'
      targetAddress:
        $ref: '#/definitions/targetAddress'
    type: object
  m2mServiceSubscriptionProfilecontent:
    example:
      accessControlPolicyIDs: ''
      creationTime: ''
      expirationTime: ''
      labels: ''
      lastModifiedTime: ''
      parentID: ''
      resourceID: ''
      resourceName: ''
      resourceType: ''
    properties:
      accessControlPolicyIDs:
        $ref: '#/definitions/accessControlPolicyIDs'
      creationTime:
        $ref: '#/definitions/creationTime'
      expirationTime:
        $ref: '#/definitions/expirationTime'
      labels:
        $ref: '#/definitions/labels'
      lastModifiedTime:
        $ref: '#/definitions/lastModifiedTime'
      parentID:
        $ref: '#/definitions/parentID'
      resourceID:
        $ref: '#/definitions/resourceID'
      resourceName:
        $ref: '#/definitions/resourceName'
      resourceType:
        $ref: '#/definitions/resourceType'
    type: object
  maxByteSize:
    description: maxByteSize
    type: string
  maxNrOfInstances:
    description: maxNrOfInstances
    type: string
  maxNrOfMembers:
    description: maxNrOfMembers
    type: string
  memberIDs:
    description: memberIDs
    type: string
  memberType:
    description: memberType
    type: string
  memberTypeValidated:
    description: memberTypeValidated
    type: string
  membersAccessControlPolicyIDs:
    description: membersAccessControlPolicyIDs
    type: string
  mgmtCmdInfo:
    description: information of mgmtCmdInfo resource
    example:
      mgmtCmdInfo:
        accessControlPolicyIDs: '{{accessControlPolicyIDs}}'
        cmdType: '{{cmdType}}'
        creationTime: '{{creationTime}}'
        description: '{{description}}'
        execDelay: '{{execDelay}}'
        execEnable: '{{execEnable}}'
        execFrequency: '{{execFrequency}}'
        execNumber: '{{execNumber}}'
        execReqArgs: '{{execReqArgs}}'
        execTarget: '{{execTarget}}'
        expirationTime: '{{expirationTime}}'
        labels: '{{labels}}'
        lastModifiedTime: '{{lastModifiedTime}}'
        parentID: '{{parentID}}'
        resourceID: '{{resourceID}}'
        resourceName: '{{resourceName}}'
        resourceType: '{{resourceType}}'
    properties:
      accessControlPolicyIDs:
        $ref: '#/definitions/accessControlPolicyIDs'
      cmdType:
        $ref: '#/definitions/cmdType'
      creationTime:
        $ref: '#/definitions/creationTime'
      description:
        $ref: '#/definitions/description'
      execDelay:
        $ref: '#/definitions/execDelay'
      execEnable:
        $ref: '#/definitions/execEnable'
      execFrequency:
        $ref: '#/definitions/execFrequency'
      execNumber:
        $ref: '#/definitions/execNumber'
      execReqArgs:
        $ref: '#/definitions/execReqArgs'
      execTarget:
        $ref: '#/definitions/execTarget'
      expirationTime:
        $ref: '#/definitions/expirationTime'
      labels:
        $ref: '#/definitions/labels'
      lastModifiedTime:
        $ref: '#/definitions/lastModifiedTime'
      parentID:
        $ref: '#/definitions/parentID'
      resourceID:
        $ref: '#/definitions/resourceID'
      resourceName:
        $ref: '#/definitions/resourceName'
      resourceType:
        $ref: '#/definitions/resourceType'
    type: object
  mgmtDefinition:
    description: mgmtDefinition
    type: string
  mgmtLink:
    description: mgmtLink
    type: string
  mgmtObjInfo:
    description: information of group resource
    example:
      mgmtObjInfo:
        FromId: '{{FromId}}'
        ToAddress: '{{ToAddress}}'
        content:
          accessControlPolicyIDs: '{{accessControlPolicyIDs}}'
          announceTo: '{{announceTo}}'
          announcedAttribute: '{{announcedAttribute}}'
          creationTime: '{{creationTime}}'
          description: '{{description}}'
          expirationTime: '{{expirationTime}}'
          labels: '{{labels}}'
          lastModifiedTime: '{{lastModifiedTime}}'
          mgmtDefinition: '{{mgmtDefinition}}'
          mgmtLink: '{{mgmtLink}}'
          objectAttribute: '{{objectAttribute}}'
          objectIDs: '{{objectIDs}}'
          objectPaths: '{{objectPaths}}'
          parentID: '{{parentID}}'
          resourceID: '{{resourceID}}'
          resourceName: '{{resourceName}}'
          resourceType: '{{resourceType}}'
    properties:
      FromId:
        $ref: '#/definitions/FromId'
      ToAddress:
        $ref: '#/definitions/ToAddress'
      content:
        $ref: '#/definitions/mgmtObjcontent'
    type: object
  mgmtObjcontent:
    example:
      accessControlPolicyIDs: ''
      announceTo: ''
      announcedAttribute: ''
      creationTime: ''
      description: ''
      expirationTime: ''
      labels: ''
      lastModifiedTime: ''
      mgmtDefinition: ''
      mgmtLink: ''
      objectAttribute: ''
      objectIDs: ''
      objectPaths: ''
      parentID: ''
      resourceID: ''
      resourceName: ''
      resourceType: ''
    properties:
      accessControlPolicyIDs:
        $ref: '#/definitions/accessControlPolicyIDs'
      announceTo:
        $ref: '#/definitions/announceTo'
      announcedAttribute:
        $ref: '#/definitions/announcedAttribute'
      creationTime:
        $ref: '#/definitions/creationTime'
      description:
        $ref: '#/definitions/description'
      expirationTime:
        $ref: '#/definitions/expirationTime'
      labels:
        $ref: '#/definitions/labels'
      lastModifiedTime:
        $ref: '#/definitions/lastModifiedTime'
      mgmtDefinition:
        $ref: '#/definitions/mgmtDefinition'
      mgmtLink:
        $ref: '#/definitions/mgmtLink'
      objectAttribute:
        $ref: '#/definitions/objectAttribute'
      objectIDs:
        $ref: '#/definitions/objectIDs'
      objectPaths:
        $ref: '#/definitions/objectPaths'
      parentID:
        $ref: '#/definitions/parentID'
      resourceID:
        $ref: '#/definitions/resourceID'
      resourceName:
        $ref: '#/definitions/resourceName'
      resourceType:
        $ref: '#/definitions/resourceType'
    type: object
  msgOriginatorId:
    description: msgOriginatorId
    type: string
  nodeID:
    description: nodeID
    type: string
  nodeInfo:
    description: information of AE resource
    example:
      nodeInfo:
        DeliveryAggregation: '{{DeliveryAggregation}}'
        DiscoveryResultType: '{{DiscoveryResultType}}'
        EventCategory: '{{EventCategory}}'
        FilterCriteria: '{{FilterCriteria}}'
        GroupRequestIdentifier: '{{GroupRequestIdentifier}}'
        Operation: '{{Operation}}'
        OperationalExecutionTime: '{{OperationalExecutionTime}}'
        OriginatingTimestamp: '{{OriginatingTimestamp}}'
        ReqExpirationTimestamp: '{{ReqExpirationTimestamp}}'
        RequestId: '{{RequestId}}'
        ResExpirationTimestamp: '{{ResExpirationTimestamp}}'
        ResourceType: '{{ResourceType}}'
        ResponseType: '{{ResponseType}}'
        ResultContent: '{{ResultContent}}'
        ResultPersistence: '{{ResultPersistence}}'
        content:
          accessControlPolicyIDs: '{{accessControlPolicyIDs}}'
          announceTo: '{{announceTo}}'
          announcedAttribute: '{{announcedAttribute}}'
          creationTime: '{{creationTime}}'
          expirationTime: '{{expirationTime}}'
          hostedCSELink: '{{hostedCSELink}}'
          labels: '{{labels}}'
          lastModifiedTime: '{{lastModifiedTime}}'
          nodeID: '{{nodeID}}'
          parentID: '{{parentID}}'
          resourceID: '{{resourceID}}'
          resourceName: '{{resourceName}}'
          resourceType: '{{resourceType}}'
        msgOriginatorId: '{{msgOriginatorId}}'
        targetAddress: '{{targetAddress}}'
    properties:
      DeliveryAggregation:
        $ref: '#/definitions/DeliveryAggregation'
      DiscoveryResultType:
        $ref: '#/definitions/DiscoveryResultType'
      EventCategory:
        $ref: '#/definitions/EventCategory'
      FilterCriteria:
        $ref: '#/definitions/FilterCriteria'
      GroupRequestIdentifier:
        $ref: '#/definitions/GroupRequestIdentifier'
      Operation:
        $ref: '#/definitions/Operation'
      OperationalExecutionTime:
        $ref: '#/definitions/OperationalExecutionTime'
      OriginatingTimestamp:
        $ref: '#/definitions/OriginatingTimestamp'
      ReqExpirationTimestamp:
        $ref: '#/definitions/ReqExpirationTimestamp'
      RequestId:
        $ref: '#/definitions/RequestId'
      ResExpirationTimestamp:
        $ref: '#/definitions/ResExpirationTimestamp'
      ResponseType:
        $ref: '#/definitions/ResponseType'
      ResultContent:
        $ref: '#/definitions/ResultContent'
      ResultPersistence:
        $ref: '#/definitions/ResultPersistence'
      content:
        $ref: '#/definitions/nodecontent'
      msgOriginatorId:
        $ref: '#/definitions/msgOriginatorId'
      resourceType:
        $ref: '#/definitions/ResourceType'
      targetAddress:
        $ref: '#/definitions/targetAddress'
    type: object
  nodeLink:
    description: nodeLink
    type: string
  nodecontent:
    example:
      accessControlPolicyIDs: ''
      announceTo: ''
      announcedAttribute: ''
      creationTime: ''
      expirationTime: ''
      hostedCSELink: ''
      labels: ''
      lastModifiedTime: ''
      nodeID: ''
      parentID: ''
      resourceID: ''
      resourceName: ''
      resourceType: ''
    properties:
      accessControlPolicyIDs:
        $ref: '#/definitions/accessControlPolicyIDs'
      announceTo:
        $ref: '#/definitions/announceTo'
      announcedAttribute:
        $ref: '#/definitions/announcedAttribute'
      creationTime:
        $ref: '#/definitions/creationTime'
      expirationTime:
        $ref: '#/definitions/expirationTime'
      hostedCSELink:
        $ref: '#/definitions/hostedCSELink'
      labels:
        $ref: '#/definitions/labels'
      lastModifiedTime:
        $ref: '#/definitions/lastModifiedTime'
      nodeID:
        $ref: '#/definitions/nodeID'
      parentID:
        $ref: '#/definitions/parentID'
      resourceID:
        $ref: '#/definitions/resourceID'
      resourceName:
        $ref: '#/definitions/resourceName'
      resourceType:
        $ref: '#/definitions/resourceType'
    type: object
  notificationContentType:
    description: notificationContentType
    type: string
  notificationEventCat:
    description: notificationEventCat
    type: string
  notificationStoragePriority:
    description: notificationStoragePriority
    type: string
  objectAttribute:
    description: objectAttribute
    type: string
  objectIDs:
    description: objectIDs
    type: string
  objectPaths:
    description: objectPaths
    type: string
  ontologyRef:
    description: ontologyRef
    type: string
  operationType:
    description: operationType
    type: string
  parentID:
    description: parentID
    type: string
  pendingNotification:
    description: pendingNotification
    type: string
  pointOfAccess:
    description: pointOfAccess
    type: string
  pollingChannelInfo:
    description: information of AE resource
    example:
      pollingChannelInfo:
        DeliveryAggregation: '{{DeliveryAggregation}}'
        DiscoveryResultType: '{{DiscoveryResultType}}'
        EventCategory: '{{EventCategory}}'
        FilterCriteria: '{{FilterCriteria}}'
        GroupRequestIdentifier: '{{GroupRequestIdentifier}}'
        Operation: '{{Operation}}'
        OperationalExecutionTime: '{{OperationalExecutionTime}}'
        OriginatingTimestamp: '{{OriginatingTimestamp}}'
        ReqExpirationTimestamp: '{{ReqExpirationTimestamp}}'
        RequestId: '{{RequestId}}'
        ResExpirationTimestamp: '{{ResExpirationTimestamp}}'
        ResourceType: '{{ResourceType}}'
        ResponseType: '{{ResponseType}}'
        ResultContent: '{{ResultContent}}'
        ResultPersistence: '{{ResultPersistence}}'
        content:
          creationTime: '{{creationTime}}'
          expirationTime: '{{expirationTime}}'
          labels: '{{labels}}'
          lastModifiedTime: '{{lastModifiedTime}}'
          parentID: '{{parentID}}'
          resourceID: '{{resourceID}}'
          resourceName: '{{resourceName}}'
          resourceType: '{{resourceType}}'
        msgOriginatorId: '{{msgOriginatorId}}'
        targetAddress: '{{targetAddress}}'
    properties:
      DeliveryAggregation:
        $ref: '#/definitions/DeliveryAggregation'
      DiscoveryResultType:
        $ref: '#/definitions/DiscoveryResultType'
      EventCategory:
        $ref: '#/definitions/EventCategory'
      FilterCriteria:
        $ref: '#/definitions/FilterCriteria'
      GroupRequestIdentifier:
        $ref: '#/definitions/GroupRequestIdentifier'
      Operation:
        $ref: '#/definitions/Operation'
      OperationalExecutionTime:
        $ref: '#/definitions/OperationalExecutionTime'
      OriginatingTimestamp:
        $ref: '#/definitions/OriginatingTimestamp'
      ReqExpirationTimestamp:
        $ref: '#/definitions/ReqExpirationTimestamp'
      RequestId:
        $ref: '#/definitions/RequestId'
      ResExpirationTimestamp:
        $ref: '#/definitions/ResExpirationTimestamp'
      ResponseType:
        $ref: '#/definitions/ResponseType'
      ResultContent:
        $ref: '#/definitions/ResultContent'
      ResultPersistence:
        $ref: '#/definitions/ResultPersistence'
      content:
        $ref: '#/definitions/pollingChannelcontent'
      msgOriginatorId:
        $ref: '#/definitions/msgOriginatorId'
      resourceType:
        $ref: '#/definitions/ResourceType'
      targetAddress:
        $ref: '#/definitions/targetAddress'
    type: object
  pollingChannelcontent:
    example:
      creationTime: ''
      expirationTime: ''
      labels: ''
      lastModifiedTime: ''
      parentID: ''
      resourceID: ''
      resourceName: ''
      resourceType: ''
    properties:
      creationTime:
        $ref: '#/definitions/creationTime'
      expirationTime:
        $ref: '#/definitions/expirationTime'
      labels:
        $ref: '#/definitions/labels'
      lastModifiedTime:
        $ref: '#/definitions/lastModifiedTime'
      parentID:
        $ref: '#/definitions/parentID'
      resourceID:
        $ref: '#/definitions/resourceID'
      resourceName:
        $ref: '#/definitions/resourceName'
      resourceType:
        $ref: '#/definitions/resourceType'
    type: object
  preSubscriptionNotify:
    description: preSubscriptionNotify
    type: string
  rateLimit:
    description: rateLimit
    type: string
  remoteCSEInfo:
    description: information of AE resource
    example:
      remoteCSEInfo:
        DeliveryAggregation: '{{DeliveryAggregation}}'
        DiscoveryResultType: '{{DiscoveryResultType}}'
        EventCategory: '{{EventCategory}}'
        FilterCriteria: '{{FilterCriteria}}'
        GroupRequestIdentifier: '{{GroupRequestIdentifier}}'
        Operation: '{{Operation}}'
        OperationalExecutionTime: '{{OperationalExecutionTime}}'
        OriginatingTimestamp: '{{OriginatingTimestamp}}'
        ReqExpirationTimestamp: '{{ReqExpirationTimestamp}}'
        RequestId: '{{RequestId}}'
        ResExpirationTimestamp: '{{ResExpirationTimestamp}}'
        ResourceType: '{{ResourceType}}'
        ResponseType: '{{ResponseType}}'
        ResultContent: '{{ResultContent}}'
        ResultPersistence: '{{ResultPersistence}}'
        content:
          CSE-ID: '{{CSE-ID}}'
          CSEBase: '{{CSEBase}}'
          M2M-Ext-ID: '{{M2M-Ext-ID}}'
          Trigger-Recipient-ID: '{{Trigger-Recipient-ID}}'
          accessControlPolicyIDs: '{{accessControlPolicyIDs}}'
          announceTo: '{{announceTo}}'
          announcedAttribute: '{{announcedAttribute}}'
          creationTime: '{{creationTime}}'
          cseType: '{{cseType}}'
          expirationTime: '{{expirationTime}}'
          labels: '{{labels}}'
          lastModifiedTime: '{{lastModifiedTime}}'
          nodeLink: '{{nodeLink}}'
          parentID: '{{parentID}}'
          requestReachability: '{{requestReachability}}'
          resourceID: '{{resourceID}}'
          resourceName: '{{resourceName}}'
          resourceType: '{{resourceType}}'
        msgOriginatorId: '{{msgOriginatorId}}'
        targetAddress: '{{targetAddress}}'
    properties:
      DeliveryAggregation:
        $ref: '#/definitions/DeliveryAggregation'
      DiscoveryResultType:
        $ref: '#/definitions/DiscoveryResultType'
      EventCategory:
        $ref: '#/definitions/EventCategory'
      FilterCriteria:
        $ref: '#/definitions/FilterCriteria'
      GroupRequestIdentifier:
        $ref: '#/definitions/GroupRequestIdentifier'
      Operation:
        $ref: '#/definitions/Operation'
      OperationalExecutionTime:
        $ref: '#/definitions/OperationalExecutionTime'
      OriginatingTimestamp:
        $ref: '#/definitions/OriginatingTimestamp'
      ReqExpirationTimestamp:
        $ref: '#/definitions/ReqExpirationTimestamp'
      RequestId:
        $ref: '#/definitions/RequestId'
      ResExpirationTimestamp:
        $ref: '#/definitions/ResExpirationTimestamp'
      ResponseType:
        $ref: '#/definitions/ResponseType'
      ResultContent:
        $ref: '#/definitions/ResultContent'
      ResultPersistence:
        $ref: '#/definitions/ResultPersistence'
      content:
        $ref: '#/definitions/remoteCSEcontent'
      msgOriginatorId:
        $ref: '#/definitions/msgOriginatorId'
      resourceType:
        $ref: '#/definitions/ResourceType'
      targetAddress:
        $ref: '#/definitions/targetAddress'
    type: object
  remoteCSEcontent:
    example:
      CSE-ID: ''
      CSEBase: ''
      M2M-Ext-ID: ''
      Trigger-Recipient-ID: ''
      accessControlPolicyIDs: ''
      announceTo: ''
      announcedAttribute: ''
      contentSerialization: ''
      creationTime: ''
      cseType: ''
      expirationTime: ''
      labels: ''
      lastModifiedTime: ''
      nodeLink: ''
      parentID: ''
      requestReachability: ''
      resourceID: ''
      resourceName: ''
      resourceType: ''
    properties:
      CSE-ID:
        $ref: '#/definitions/CSE-ID'
      CSEBase:
        $ref: '#/definitions/CSEBase'
      M2M-Ext-ID:
        $ref: '#/definitions/M2M-Ext-ID'
      Trigger-Recipient-ID:
        $ref: '#/definitions/Trigger-Recipient-ID'
      accessControlPolicyIDs:
        $ref: '#/definitions/accessControlPolicyIDs'
      announceTo:
        $ref: '#/definitions/announceTo'
      announcedAttribute:
        $ref: '#/definitions/announcedAttribute'
      creationTime:
        $ref: '#/definitions/creationTime'
      cseType:
        $ref: '#/definitions/cseType'
      expirationTime:
        $ref: '#/definitions/expirationTime'
      labels:
        $ref: '#/definitions/labels'
      lastModifiedTime:
        $ref: '#/definitions/lastModifiedTime'
      nodeLink:
        $ref: '#/definitions/nodeLink'
      parentID:
        $ref: '#/definitions/parentID'
      requestReachability:
        $ref: '#/definitions/requestReachability'
      resourceID:
        $ref: '#/definitions/resourceID'
      resourceName:
        $ref: '#/definitions/resourceName'
      resourceType:
        $ref: '#/definitions/resourceType'
    type: object
  requestInfo:
    description: information of request resource
    example:
      requestInfo:
        DeliveryAggregation: ''
        DiscoveryResultType: ''
        EventCategory: ''
        FilterCriteria: ''
        GroupRequestIdentifier: ''
        Operation: ''
        OperationalExecutionTime: ''
        OriginatingTimestamp: ''
        ReqExpirationTimestamp: ''
        RequestId: ''
        ResExpirationTimestamp: ''
        ResourceType: ''
        ResponseType: ''
        ResultContent: ''
        ResultPersistence: ''
        content: ''
        msgOriginatorId: ''
        targetAddress: ''
    properties:
      DeliveryAggregation:
        $ref: '#/definitions/DeliveryAggregation'
      DiscoveryResultType:
        $ref: '#/definitions/DiscoveryResultType'
      EventCategory:
        $ref: '#/definitions/EventCategory'
      FilterCriteria:
        $ref: '#/definitions/FilterCriteria'
      GroupRequestIdentifier:
        $ref: '#/definitions/GroupRequestIdentifier'
      Operation:
        $ref: '#/definitions/Operation'
      OperationalExecutionTime:
        $ref: '#/definitions/OperationalExecutionTime'
      OriginatingTimestamp:
        $ref: '#/definitions/OriginatingTimestamp'
      ReqExpirationTimestamp:
        $ref: '#/definitions/ReqExpirationTimestamp'
      RequestId:
        $ref: '#/definitions/RequestId'
      ResExpirationTimestamp:
        $ref: '#/definitions/ResExpirationTimestamp'
      ResponseType:
        $ref: '#/definitions/ResponseType'
      ResultContent:
        $ref: '#/definitions/ResultContent'
      ResultPersistence:
        $ref: '#/definitions/ResultPersistence'
      content:
        $ref: '#/definitions/requestcontent'
      msgOriginatorId:
        $ref: '#/definitions/msgOriginatorId'
      resourceType:
        $ref: '#/definitions/ResourceType'
      targetAddress:
        $ref: '#/definitions/targetAddress'
    type: object
  requestReachability:
    description: requestReachability
    type: string
  requestcontent:
    description: requestcontent
    type: string
  resourceID:
    description: resourceID
    type: string
  resourceInfo:
    description: information of CSEBaseInfo resource
    example:
      resourceInfo:
        DeliveryAggregation: '{{DeliveryAggregation}}'
        DiscoveryResultType: '{{DiscoveryResultType}}'
        EventCategory: '{{EventCategory}}'
        FilterCriteria: '{{FilterCriteria}}'
        GroupRequestIdentifier: '{{GroupRequestIdentifier}}'
        Operation: '{{Operation}}'
        OperationalExecutionTime: '{{OperationalExecutionTime}}'
        OriginatingTimestamp: '{{OriginatingTimestamp}}'
        ReqExpirationTimestamp: '{{ReqExpirationTimestamp}}'
        RequestId: '{{RequestId}}'
        ResExpirationTimestamp: '{{ResExpirationTimestamp}}'
        ResourceType: '{{ResourceType}}'
        ResponseType: '{{ResponseType}}'
        ResultContent: '{{ResultContent}}'
        ResultPersistence: '{{ResultPersistence}}'
        content: '{{content}}'
        msgOriginatorId: '{{msgOriginatorId}}'
        targetAddress: '{{targetAddress}}'
    properties:
      DeliveryAggregation:
        $ref: '#/definitions/DeliveryAggregation'
      DiscoveryResultType:
        $ref: '#/definitions/DiscoveryResultType'
      EventCategory:
        $ref: '#/definitions/EventCategory'
      FilterCriteria:
        $ref: '#/definitions/FilterCriteria'
      GroupRequestIdentifier:
        $ref: '#/definitions/GroupRequestIdentifier'
      Operation:
        $ref: '#/definitions/Operation'
      OperationalExecutionTime:
        $ref: '#/definitions/OperationalExecutionTime'
      OriginatingTimestamp:
        $ref: '#/definitions/OriginatingTimestamp'
      ReqExpirationTimestamp:
        $ref: '#/definitions/ReqExpirationTimestamp'
      RequestId:
        $ref: '#/definitions/RequestId'
      ResExpirationTimestamp:
        $ref: '#/definitions/ResExpirationTimestamp'
      ResponseType:
        $ref: '#/definitions/ResponseType'
      ResultContent:
        $ref: '#/definitions/ResultContent'
      ResultPersistence:
        $ref: '#/definitions/ResultPersistence'
      content:
        $ref: '#/definitions/resourcecontent'
      msgOriginatorId:
        $ref: '#/definitions/msgOriginatorId'
      resourceType:
        $ref: '#/definitions/ResourceType'
      targetAddress:
        $ref: '#/definitions/targetAddress'
    type: object
  resourceName:
    description: resourceName
    type: string
  resourceType:
    description: resourceType
    type: string
  resourcecontent:
    description: resourcecontent
    type: string
  ruleLinks:
    description: ruleLinks
    type: string
  serviceSubscribedAppRuleInfo:
    description: information of serviceSubscribedAppRule resource
    example:
      serviceSubscribedAppRuleInfo:
        DeliveryAggregation: '{{DeliveryAggregation}}'
        DiscoveryResultType: '{{DiscoveryResultType}}'
        EventCategory: '{{EventCategory}}'
        FilterCriteria: '{{FilterCriteria}}'
        GroupRequestIdentifier: '{{GroupRequestIdentifier}}'
        Operation: '{{Operation}}'
        OperationalExecutionTime: '{{OperationalExecutionTime}}'
        OriginatingTimestamp: '{{OriginatingTimestamp}}'
        ReqExpirationTimestamp: '{{ReqExpirationTimestamp}}'
        RequestId: '{{RequestId}}'
        ResExpirationTimestamp: '{{ResExpirationTimestamp}}'
        ResourceType: '{{ResourceType}}'
        ResponseType: '{{ResponseType}}'
        ResultContent: '{{ResultContent}}'
        ResultPersistence: '{{ResultPersistence}}'
        content:
          accessControlPolicyIDs: '{{accessControlPolicyIDs}}'
          allowedAEs: '{{allowedAEs}}'
          allowedApp-IDs: '{{allowedApp-IDs}}'
          applicableCredIDs: '{{applicableCredIDs}}'
          creationTime: '{{creationTime}}'
          expirationTime: '{{expirationTime}}'
          labels: '{{labels}}'
          lastModifiedTime: '{{lastModifiedTime}}'
          parentID: '{{parentID}}'
          resourceID: '{{resourceID}}'
          resourceName: '{{resourceName}}'
          resourceType: '{{resourceType}}'
        msgOriginatorId: '{{msgOriginatorId}}'
        targetAddress: '{{targetAddress}}'
    properties:
      DeliveryAggregation:
        $ref: '#/definitions/DeliveryAggregation'
      DiscoveryResultType:
        $ref: '#/definitions/DiscoveryResultType'
      EventCategory:
        $ref: '#/definitions/EventCategory'
      FilterCriteria:
        $ref: '#/definitions/FilterCriteria'
      GroupRequestIdentifier:
        $ref: '#/definitions/GroupRequestIdentifier'
      Operation:
        $ref: '#/definitions/Operation'
      OperationalExecutionTime:
        $ref: '#/definitions/OperationalExecutionTime'
      OriginatingTimestamp:
        $ref: '#/definitions/OriginatingTimestamp'
      ReqExpirationTimestamp:
        $ref: '#/definitions/ReqExpirationTimestamp'
      RequestId:
        $ref: '#/definitions/RequestId'
      ResExpirationTimestamp:
        $ref: '#/definitions/ResExpirationTimestamp'
      ResponseType:
        $ref: '#/definitions/ResponseType'
      ResultContent:
        $ref: '#/definitions/ResultContent'
      ResultPersistence:
        $ref: '#/definitions/ResultPersistence'
      content:
        $ref: '#/definitions/serviceSubscribedAppRulecontent'
      msgOriginatorId:
        $ref: '#/definitions/msgOriginatorId'
      resourceType:
        $ref: '#/definitions/ResourceType'
      targetAddress:
        $ref: '#/definitions/targetAddress'
    type: object
  serviceSubscribedAppRulecontent:
    example:
      accessControlPolicyIDs: ''
      allowedAEs: ''
      allowedApp-IDs: ''
      applicableCredIDs: ''
      creationTime: ''
      expirationTime: ''
      labels: ''
      lastModifiedTime: ''
      parentID: ''
      resourceID: ''
      resourceName: ''
      resourceType: ''
    properties:
      accessControlPolicyIDs:
        $ref: '#/definitions/accessControlPolicyIDs'
      allowedAEs:
        $ref: '#/definitions/allowedAEs'
      allowedApp-IDs:
        $ref: '#/definitions/allowedApp-IDs'
      applicableCredIDs:
        $ref: '#/definitions/applicableCredIDs'
      creationTime:
        $ref: '#/definitions/creationTime'
      expirationTime:
        $ref: '#/definitions/expirationTime'
      labels:
        $ref: '#/definitions/labels'
      lastModifiedTime:
        $ref: '#/definitions/lastModifiedTime'
      parentID:
        $ref: '#/definitions/parentID'
      resourceID:
        $ref: '#/definitions/resourceID'
      resourceName:
        $ref: '#/definitions/resourceName'
      resourceType:
        $ref: '#/definitions/resourceType'
    type: object
  serviceSubscribedNodeInfo:
    description: information of serviceSubscribedNode resource
    example:
      serviceSubscribedNodeInfo:
        DeliveryAggregation: '{{DeliveryAggregation}}'
        DiscoveryResultType: '{{DiscoveryResultType}}'
        EventCategory: '{{EventCategory}}'
        FilterCriteria: '{{FilterCriteria}}'
        GroupRequestIdentifier: '{{GroupRequestIdentifier}}'
        Operation: '{{Operation}}'
        OperationalExecutionTime: '{{OperationalExecutionTime}}'
        OriginatingTimestamp: '{{OriginatingTimestamp}}'
        ReqExpirationTimestamp: '{{ReqExpirationTimestamp}}'
        RequestId: '{{RequestId}}'
        ResExpirationTimestamp: '{{ResExpirationTimestamp}}'
        ResourceType: '{{ResourceType}}'
        ResponseType: '{{ResponseType}}'
        ResultContent: '{{ResultContent}}'
        ResultPersistence: '{{ResultPersistence}}'
        content:
          CSE-ID: '{{CSE-ID}}'
          accessControlPolicyIDs: '{{accessControlPolicyIDs}}'
          creationTime: '{{creationTime}}'
          deviceIdentifier: '{{deviceIdentifier}}'
          expirationTime: '{{expirationTime}}'
          labels: '{{labels}}'
          lastModifiedTime: '{{lastModifiedTime}}'
          nodeID: '{{nodeID}}'
          parentID: '{{parentID}}'
          resourceID: '{{resourceID}}'
          resourceName: '{{resourceName}}'
          resourceType: '{{resourceType}}'
          ruleLinks: '{{ruleLinks}}'
        msgOriginatorId: '{{msgOriginatorId}}'
        targetAddress: '{{targetAddress}}'
    properties:
      DeliveryAggregation:
        $ref: '#/definitions/DeliveryAggregation'
      DiscoveryResultType:
        $ref: '#/definitions/DiscoveryResultType'
      EventCategory:
        $ref: '#/definitions/EventCategory'
      FilterCriteria:
        $ref: '#/definitions/FilterCriteria'
      GroupRequestIdentifier:
        $ref: '#/definitions/GroupRequestIdentifier'
      Operation:
        $ref: '#/definitions/Operation'
      OperationalExecutionTime:
        $ref: '#/definitions/OperationalExecutionTime'
      OriginatingTimestamp:
        $ref: '#/definitions/OriginatingTimestamp'
      ReqExpirationTimestamp:
        $ref: '#/definitions/ReqExpirationTimestamp'
      RequestId:
        $ref: '#/definitions/RequestId'
      ResExpirationTimestamp:
        $ref: '#/definitions/ResExpirationTimestamp'
      ResponseType:
        $ref: '#/definitions/ResponseType'
      ResultContent:
        $ref: '#/definitions/ResultContent'
      ResultPersistence:
        $ref: '#/definitions/ResultPersistence'
      content:
        $ref: '#/definitions/serviceSubscribedNodecontent'
      msgOriginatorId:
        $ref: '#/definitions/msgOriginatorId'
      resourceType:
        $ref: '#/definitions/ResourceType'
      targetAddress:
        $ref: '#/definitions/targetAddress'
    type: object
  serviceSubscribedNodecontent:
    example:
      CSE-ID: ''
      accessControlPolicyIDs: ''
      creationTime: ''
      deviceIdentifier: ''
      expirationTime: ''
      labels: ''
      lastModifiedTime: ''
      nodeID: ''
      parentID: ''
      resourceID: ''
      resourceName: ''
      resourceType: ''
      ruleLinks: ''
    properties:
      CSE-ID:
        $ref: '#/definitions/CSE-ID'
      accessControlPolicyIDs:
        $ref: '#/definitions/accessControlPolicyIDs'
      creationTime:
        $ref: '#/definitions/creationTime'
      deviceIdentifier:
        $ref: '#/definitions/deviceIdentifier'
      expirationTime:
        $ref: '#/definitions/expirationTime'
      labels:
        $ref: '#/definitions/labels'
      lastModifiedTime:
        $ref: '#/definitions/lastModifiedTime'
      nodeID:
        $ref: '#/definitions/nodeID'
      parentID:
        $ref: '#/definitions/parentID'
      resourceID:
        $ref: '#/definitions/resourceID'
      resourceName:
        $ref: '#/definitions/resourceName'
      resourceType:
        $ref: '#/definitions/resourceType'
      ruleLinks:
        $ref: '#/definitions/ruleLinks'
    type: object
  source:
    description: source
    type: string
  stateTag:
    description: stateTag
    type: string
  statsCollectID:
    description: statsCollectID
    type: string
  statsCollectInfo:
    description: information of statsCollect resource
    example:
      statsCollectInfo:
        FromId: '{{FromId}}'
        ToAddress: '{{ToAddress}}'
        accessControlPolicyIDs: '{{accessControlPolicyIDs}}'
        creationTime: '{{creationTime}}'
        creator: '{{creator}}'
        dataSize: '{{dataSize}}'
        eventEnd: '{{eventEnd}}'
        eventID: '{{eventID}}'
        eventStart: '{{eventStart}}'
        eventType: '{{eventType}}'
        expirationTime: '{{expirationTime}}'
        labels: '{{labels}}'
        lastModifiedTime: '{{lastModifiedTime}}'
        operationType: '{{operationType}}'
        parentID: '{{parentID}}'
        resourceID: '{{resourceID}}'
        resourceName: '{{resourceName}}'
        resourceType: '{{resourceType}}'
    properties:
      FromId:
        $ref: '#/definitions/FromId'
      ToAddress:
        $ref: '#/definitions/ToAddress'
      collectingEntityID:
        $ref: '#/definitions/collectingEntityID'
      dataSize:
        $ref: '#/definitions/dataSize'
      event:
        $ref: '#/definitions/event'
      eventEnd:
        $ref: '#/definitions/eventEnd'
      eventStart:
        $ref: '#/definitions/eventStart'
      resourceID:
        $ref: '#/definitions/resourceID'
      resourceName:
        $ref: '#/definitions/resourceName'
      resourceType:
        $ref: '#/definitions/resourceType'
      statsCollectID:
        $ref: '#/definitions/statsCollectID'
      transactionType:
        $ref: '#/definitions/transactionType'
    type: object
  statsConfigInfo:
    description: information of statsConfig resource
    example:
      statsConfigInfo:
        FromId: '{{FromId}}'
        ToAddress: '{{ToAddress}}'
        accessControlPolicyIDs: '{{accessControlPolicyIDs}}'
        creationTime: '{{creationTime}}'
        creator: '{{creator}}'
        expirationTime: '{{expirationTime}}'
        labels: '{{labels}}'
        lastModifiedTime: '{{lastModifiedTime}}'
        parentID: '{{parentID}}'
        resourceID: '{{resourceID}}'
        resourceName: '{{resourceName}}'
        resourceType: '{{resourceType}}'
    properties:
      FromId:
        $ref: '#/definitions/FromId'
      ToAddress:
        $ref: '#/definitions/ToAddress'
      accessControlPolicyIDs:
        $ref: '#/definitions/accessControlPolicyIDs'
      creationTime:
        $ref: '#/definitions/creationTime'
      creator:
        $ref: '#/definitions/creator'
      expirationTime:
        $ref: '#/definitions/expirationTime'
      labels:
        $ref: '#/definitions/labels'
      lastModifiedTime:
        $ref: '#/definitions/lastModifiedTime'
      parentID:
        $ref: '#/definitions/parentID'
      resourceID:
        $ref: '#/definitions/resourceID'
      resourceName:
        $ref: '#/definitions/resourceName'
      resourceType:
        $ref: '#/definitions/resourceType'
    type: object
  subscriberURI:
    description: notificationEventCat
    type: string
  subscriptionInfo:
    description: information of AE resource
    example:
      subscriptionInfo:
        DeliveryAggregation: '{{DeliveryAggregation}}'
        DiscoveryResultType: '{{DiscoveryResultType}}'
        EventCategory: '{{EventCategory}}'
        FilterCriteria: '{{FilterCriteria}}'
        GroupRequestIdentifier: '{{GroupRequestIdentifier}}'
        Operation: '{{Operation}}'
        OperationalExecutionTime: '{{OperationalExecutionTime}}'
        OriginatingTimestamp: '{{OriginatingTimestamp}}'
        ReqExpirationTimestamp: '{{ReqExpirationTimestamp}}'
        RequestId: '{{RequestId}}'
        ResExpirationTimestamp: '{{ResExpirationTimestamp}}'
        ResourceType: '{{ResourceType}}'
        ResponseType: '{{ResponseType}}'
        ResultContent: '{{ResultContent}}'
        ResultPersistence: '{{ResultPersistence}}'
        content:
          accessControlPolicyIDs: '{{accessControlPolicyIDs}}'
          batchNotify: '{{batchNotify}}'
          creationTime: '{{creationTime}}'
          creator: '{{creator}}'
          eventNotificationCriteria: '{{eventNotificationCriteria}}'
          expirationCounter: '{{expirationCounter}}'
          expirationTime: '{{expirationTime}}'
          groupID: '{{groupID}}'
          labels: '{{labels}}'
          lastModifiedTime: '{{lastModifiedTime}}'
          latestNotify: '{{latestNotify}}'
          notificationContentType: '{{notificationContentType}}'
          notificationEventCat: '{{notificationEventCat}}'
          notificationStoragePriority: '{{notificationStoragePriority}}'
          parentID: '{{parentID}}'
          pendingNotification: '{{pendingNotification}}'
          preSubscriptionNotify: '{{preSubscriptionNotify}}'
          rateLimit: '{{rateLimit}}'
          resourceID: '{{resourceID}}'
          resourceName: '{{resourceName}}'
          resourceType: '{{resourceType}}'
          subscriberURI: '{{subscriberURI}}'
        msgOriginatorId: '{{msgOriginatorId}}'
        targetAddress: '{{targetAddress}}'
    properties:
      DeliveryAggregation:
        $ref: '#/definitions/DeliveryAggregation'
      DiscoveryResultType:
        $ref: '#/definitions/DiscoveryResultType'
      EventCategory:
        $ref: '#/definitions/EventCategory'
      FilterCriteria:
        $ref: '#/definitions/FilterCriteria'
      GroupRequestIdentifier:
        $ref: '#/definitions/GroupRequestIdentifier'
      Operation:
        $ref: '#/definitions/Operation'
      OperationalExecutionTime:
        $ref: '#/definitions/OperationalExecutionTime'
      OriginatingTimestamp:
        $ref: '#/definitions/OriginatingTimestamp'
      ReqExpirationTimestamp:
        $ref: '#/definitions/ReqExpirationTimestamp'
      RequestId:
        $ref: '#/definitions/RequestId'
      ResExpirationTimestamp:
        $ref: '#/definitions/ResExpirationTimestamp'
      ResponseType:
        $ref: '#/definitions/ResponseType'
      ResultContent:
        $ref: '#/definitions/ResultContent'
      ResultPersistence:
        $ref: '#/definitions/ResultPersistence'
      content:
        $ref: '#/definitions/subscriptioncontent'
      msgOriginatorId:
        $ref: '#/definitions/msgOriginatorId'
      resourceType:
        $ref: '#/definitions/ResourceType'
      targetAddress:
        $ref: '#/definitions/targetAddress'
    type: object
  subscriptioncontent:
    example:
      accessControlPolicyIDs: ''
      batchNotify: ''
      creationTime: ''
      creator: ''
      eventNotificationCriteria: ''
      expirationCounter: ''
      expirationTime: ''
      groupID: ''
      labels: ''
      lastModifiedTime: ''
      latestNotify: ''
      notificationContentType: ''
      notificationEventCat: ''
      notificationStoragePriority: ''
      parentID: ''
      pendingNotification: ''
      preSubscriptionNotify: ''
      rateLimit: ''
      resourceID: ''
      resourceName: ''
      resourceType: ''
      subscriberURI: ''
    properties:
      accessControlPolicyIDs:
        $ref: '#/definitions/accessControlPolicyIDs'
      batchNotify:
        $ref: '#/definitions/batchNotify'
      creationTime:
        $ref: '#/definitions/creationTime'
      creator:
        $ref: '#/definitions/creator'
      eventNotificationCriteria:
        $ref: '#/definitions/eventNotificationCriteria'
      expirationCounter:
        $ref: '#/definitions/expirationCounter'
      expirationTime:
        $ref: '#/definitions/expirationTime'
      groupID:
        $ref: '#/definitions/groupID'
      labels:
        $ref: '#/definitions/labels'
      lastModifiedTime:
        $ref: '#/definitions/lastModifiedTime'
      latestNotify:
        $ref: '#/definitions/latestNotify'
      notificationContentType:
        $ref: '#/definitions/notificationContentType'
      notificationEventCat:
        $ref: '#/definitions/notificationEventCat'
      notificationStoragePriority:
        $ref: '#/definitions/notificationStoragePriority'
      parentID:
        $ref: '#/definitions/parentID'
      pendingNotification:
        $ref: '#/definitions/pendingNotification'
      preSubscriptionNotify:
        $ref: '#/definitions/preSubscriptionNotify'
      rateLimit:
        $ref: '#/definitions/rateLimit'
      resourceID:
        $ref: '#/definitions/resourceID'
      resourceName:
        $ref: '#/definitions/resourceName'
      resourceType:
        $ref: '#/definitions/resourceType'
      subscriberURI:
        $ref: '#/definitions/subscriberURI'
    type: object
  target:
    description: target
    type: string
  targetAddress:
    description: targetAddress
    type: string
  transactionType:
    description: transactionType
    type: string
externalDocs:
  description: ETSI MEC015 V1.1.1 Bandwidth Management API
  url: http://www.etsi.org/deliver/etsi_gs/MEC/001_099/015/01.01.01_60/gs_MEC015v010101p.pdf
host: 127.0.0.1:8080
info:
  description: The ETSI IOT Bandwidth Management API described using OpenAPI
  title: IOT API
  version: 1.1.1
parameters:
  Body.AEInfo:
    description: AEInfo with updated information is included as entity body of the
      request
    in: body
    name: AEInfo
    required: true
    schema:
      $ref: '#/definitions/AEInfo'
  Body.CSEBaseInfo:
    description: CSEBaseInfo with updated information is included as entity body of
      the request
    in: body
    name: CSEBaseInfo
    required: true
    schema:
      $ref: '#/definitions/CSEBaseInfo'
  Body.accessControlPolicyInfo:
    description: accessControlPolicyInfo with updated information is included as entity
      body of the request
    in: body
    name: accessControlPolicyInfo
    required: true
    schema:
      $ref: '#/definitions/accessControlPolicyInfo'
  Body.containerInfo:
    description: containerInfo with updated information is included as entity body
      of the request
    in: body
    name: containerInfo
    required: true
    schema:
      $ref: '#/definitions/containerInfo'
  Body.contentInstanceInfo:
    description: contentInstanceInfo with updated information is included as entity
      body of the request
    in: body
    name: contentInstanceInfo
    required: true
    schema:
      $ref: '#/definitions/contentInstanceInfo'
  Body.deliveryInfo:
    description: deliveryInfo with updated information is included as entity body
      of the request
    in: body
    name: deliveryInfo
    required: true
    schema:
      $ref: '#/definitions/deliveryInfo'
  Body.eventConfigInfo:
    description: eventConfigInfo with updated information is included as entity body
      of the request
    in: body
    name: eventConfigInfo
    required: true
    schema:
      $ref: '#/definitions/eventConfigInfo'
  Body.fanOutPointInfo:
    description: fanOutPointInfo with updated information is included as entity body
      of the request
    in: body
    name: fanOutPointInfo
    required: true
    schema:
      $ref: '#/definitions/fanOutPointInfo'
  Body.groupInfo:
    description: groupInfo with updated information is included as entity body of
      the request
    in: body
    name: groupInfo
    required: true
    schema:
      $ref: '#/definitions/groupInfo'
  Body.locationPolicyInfo:
    description: locationPolicyInfo with updated information is included as entity
      body of the request
    in: body
    name: locationPolicyInfo
    required: true
    schema:
      $ref: '#/definitions/locationPolicyInfo'
  Body.m2mServiceSubscriptionProfileInfo:
    description: m2mServiceSubscriptionProfileInfo with updated information is included
      as entity body of the request
    in: body
    name: m2mServiceSubscriptionProfileInfo
    required: true
    schema:
      $ref: '#/definitions/m2mServiceSubscriptionProfileInfo'
  Body.mgmtCmdInfo:
    description: mgmtCmdInfo with updated information is included as entity body of
      the request
    in: body
    name: mgmtCmdInfo
    required: true
    schema:
      $ref: '#/definitions/mgmtCmdInfo'
  Body.mgmtObjInfo:
    description: mgmtObjInfo with updated information is included as entity body of
      the request
    in: body
    name: mgmtObjInfo
    required: true
    schema:
      $ref: '#/definitions/mgmtObjInfo'
  Body.nodeInfo:
    description: nodeInfo with updated information is included as entity body of the
      request
    in: body
    name: nodeInfo
    required: true
    schema:
      $ref: '#/definitions/nodeInfo'
  Body.pollingChannelInfo:
    description: pollingChannelInfo with updated information is included as entity
      body of the request
    in: body
    name: pollingChannelInfo
    required: true
    schema:
      $ref: '#/definitions/pollingChannelInfo'
  Body.remoteCSEInfo:
    description: remoteCSEInfo with updated information is included as entity body
      of the request
    in: body
    name: remoteCSEInfo
    required: true
    schema:
      $ref: '#/definitions/remoteCSEInfo'
  Body.resourceInfo:
    description: resourceInfo with updated information is included as entity body
      of the request
    in: body
    name: resourceInfo
    required: true
    schema:
      $ref: '#/definitions/resourceInfo'
  Body.serviceSubscribedAppRuleInfo:
    description: serviceSubscribedAppRuleInfo with updated information is included
      as entity body of the request
    in: body
    name: serviceSubscribedAppRuleInfo
    required: true
    schema:
      $ref: '#/definitions/serviceSubscribedAppRuleInfo'
  Body.serviceSubscribedNodeInfo:
    description: serviceSubscribedNodeInfo with updated information is included as
      entity body of the request
    in: body
    name: serviceSubscribedNodeInfo
    required: true
    schema:
      $ref: '#/definitions/serviceSubscribedNodeInfo'
  Body.statsCollectInfo:
    description: statsCollectInfo with updated information is included as entity body
      of the request
    in: body
    name: statsCollectInfo
    required: true
    schema:
      $ref: '#/definitions/statsCollectInfo'
  Body.statsConfigInfo:
    description: statsConfigInfo with updated information is included as entity body
      of the request
    in: body
    name: statsConfigInfo
    required: true
    schema:
      $ref: '#/definitions/statsConfigInfo'
  Body.subscriptionInfo:
    description: subscriptionInfo with updated information is included as entity body
      of the request
    in: body
    name: subscriptionInfo
    required: true
    schema:
      $ref: '#/definitions/subscriptionInfo'
paths:
  /AE:
    delete:
      description: 'This method delete the information about a specific AEInfo resource. '
      operationId: AEDELETE
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        204:
          description: No Content
      x-swagger-router-controller: Default
    get:
      description: This method retrieves information about a list of bandwidthAllocation
        resources
      operationId: AEGET
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, a response body containing an array of the bandwidthAllocations
            is returned.
          schema:
            $ref: '#/definitions/inline_response_200'
      x-swagger-router-controller: Default
    post:
      description: This method is used to create a AE resource.
      operationId: AEPOST
      parameters:
      - description: AEInfo with updated information is included as entity body of
          the request
        in: body
        name: AEInfo
        required: true
        schema:
          $ref: '#/definitions/AEInfo'
      produces:
      - application/json
      responses:
        201:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200'
      x-swagger-router-controller: Default
    put:
      description: 'This method updates the information about a specific AEInfo resource. '
      operationId: AEPUT
      parameters:
      - description: AEInfo with updated information is included as entity body of
          the request
        in: body
        name: AEInfo
        required: true
        schema:
          $ref: '#/definitions/AEInfo'
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200'
      x-swagger-router-controller: Default
  /CSEBase:
    get:
      description: This method retrieves information about a list of CSEBase resources
      operationId: CSEBaseGET
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, a response body containing an array of the CSEBase
            is returned.
          schema:
            $ref: '#/definitions/inline_response_200_2'
      x-swagger-router-controller: Default
  /accessControlPolicy:
    delete:
      description: 'This method delete the information about a specific accessControlPolicy
        resource. '
      operationId: accessControlPolicyDELETE
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        204:
          description: No Content
      x-swagger-router-controller: Default
    get:
      description: This method retrieves information about a list of accessControlPolicy
        resources
      operationId: accessControlPolicyGET
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, a response body containing an array of the accessControlPolicy
            is returned.
          schema:
            $ref: '#/definitions/inline_response_200_accessControlPolicy'
      x-swagger-router-controller: Default
    post:
      description: This method is used to create a accessControlPolicy resource.
      operationId: accessControlPolicyPOST
      parameters:
      - description: accessControlPolicy with updated information is included as entity
          body of the request
        in: body
        name: accessControlPolicyInfo
        required: true
        schema:
          $ref: '#/definitions/accessControlPolicyInfo'
      produces:
      - application/json
      responses:
        201:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_accessControlPolicy'
      x-swagger-router-controller: Default
    put:
      description: 'This method updates the information about a specific accessControlPolicy
        resource. '
      operationId: accessControlPolicyPUT
      parameters:
      - description: accessControlPolicy with updated information is included as entity
          body of the request
        in: body
        name: accessControlPolicyInfo
        required: true
        schema:
          $ref: '#/definitions/accessControlPolicyInfo'
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_accessControlPolicy'
      x-swagger-router-controller: Default
  /container:
    delete:
      description: 'This method delete the information about a specific container
        resource. '
      operationId: containerDELETE
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        204:
          description: No Content
      x-swagger-router-controller: Default
    get:
      description: This method retrieves information about a list of container resources
      operationId: containerGET
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, a response body containing an array of the container
            is returned.
          schema:
            $ref: '#/definitions/inline_response_200_container'
      x-swagger-router-controller: Default
    post:
      description: This method is used to create a container resource.
      operationId: containerPOST
      parameters:
      - description: container with updated information is included as entity body
          of the request
        in: body
        name: containerInfo
        required: true
        schema:
          $ref: '#/definitions/containerInfo'
      produces:
      - application/json
      responses:
        201:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_container'
      x-swagger-router-controller: Default
    put:
      description: 'This method updates the information about a specific container
        resource. '
      operationId: containerPUT
      parameters:
      - description: container with updated information is included as entity body
          of the request
        in: body
        name: containerInfo
        required: true
        schema:
          $ref: '#/definitions/containerInfo'
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_container'
      x-swagger-router-controller: Default
  /contentInstance:
    delete:
      description: 'This method delete the information about a specific contentInstance
        resource. '
      operationId: contentInstanceDELETE
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        204:
          description: No Content
      x-swagger-router-controller: Default
    get:
      description: This method retrieves information about a list of contentInstance
        resources
      operationId: contentInstanceGET
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, a response body containing an array of the contentInstance
            is returned.
          schema:
            $ref: '#/definitions/inline_response_200_contentInstance'
      x-swagger-router-controller: Default
    post:
      description: This method is used to create a contentInstance resource.
      operationId: contentInstancePOST
      parameters:
      - description: contentInstance with updated information is included as entity
          body of the request
        in: body
        name: contentInstanceInfo
        required: true
        schema:
          $ref: '#/definitions/contentInstanceInfo'
      produces:
      - application/json
      responses:
        201:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_contentInstance'
      x-swagger-router-controller: Default
  /delivery:
    delete:
      description: 'This method delete the information about a specific delivery resource. '
      operationId: deliveryDELETE
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        204:
          description: No Content
      x-swagger-router-controller: Default
    get:
      description: This method retrieves information about a list of delivery resources
      operationId: deliveryGET
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, a response body containing an array of the delivery
            is returned.
          schema:
            $ref: '#/definitions/inline_response_200_delivery'
      x-swagger-router-controller: Default
    post:
      description: This method is used to create a delivery resource.
      operationId: deliveryPOST
      parameters:
      - description: delivery with updated information is included as entity body
          of the request
        in: body
        name: deliveryInfo
        required: true
        schema:
          $ref: '#/definitions/deliveryInfo'
      produces:
      - application/json
      responses:
        201:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_delivery'
      x-swagger-router-controller: Default
    put:
      description: 'This method updates the information about a specific delivery
        resource. '
      operationId: deliveryPUT
      parameters:
      - description: delivery with updated information is included as entity body
          of the request
        in: body
        name: deliveryInfo
        required: true
        schema:
          $ref: '#/definitions/deliveryInfo'
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_delivery'
      x-swagger-router-controller: Default
  /eventConfig:
    delete:
      description: 'This method delete the information about a specific eventConfigInfo
        resource. '
      operationId: eventConfigDELETE
      parameters:
      - in: query
        name: FromId
        required: false
        type: string
      - in: query
        name: ToAddress
        required: false
        type: string
      produces:
      - application/json
      responses:
        204:
          description: No Content
      x-swagger-router-controller: Default
    get:
      description: This method retrieves information about a list of eventConfig resources
      operationId: eventConfigGET
      parameters:
      - in: query
        name: FromId
        required: false
        type: string
      - in: query
        name: ToAddress
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, a response body containing an array of the eventConfig
            is returned.
          schema:
            $ref: '#/definitions/inline_response_200_eventConfig'
      x-swagger-router-controller: Default
    post:
      description: This method is used to create a eventConfig resource.
      operationId: eventConfigPOST
      parameters:
      - description: eventConfigInfo with updated information is included as entity
          body of the request
        in: body
        name: eventConfigInfo
        required: true
        schema:
          $ref: '#/definitions/eventConfigInfo'
      produces:
      - application/json
      responses:
        201:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_eventConfig'
      x-swagger-router-controller: Default
    put:
      description: 'This method updates the information about a specific eventConfigInfo
        resource. '
      operationId: eventConfigPUT
      parameters:
      - description: eventConfigInfo with updated information is included as entity
          body of the request
        in: body
        name: eventConfigInfo
        required: true
        schema:
          $ref: '#/definitions/eventConfigInfo'
      - in: query
        name: FromId
        required: false
        type: string
      - in: query
        name: ToAddress
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_eventConfig'
      x-swagger-router-controller: Default
  /execInstance:
    delete:
      description: 'This method delete the information about a specific execInstanceInfo
        resource. '
      operationId: execInstanceDELETE
      parameters:
      - in: query
        name: resourceType
        required: false
        type: string
      - in: query
        name: resourceID
        required: false
        type: string
      - in: query
        name: resourceName
        required: false
        type: string
      - in: query
        name: parentID
        required: false
        type: string
      - in: query
        name: expirationTime
        required: false
        type: string
      - in: query
        name: accessControlPolicyIDs
        required: false
        type: string
      - in: query
        name: labels
        required: false
        type: string
      - in: query
        name: creationTime
        required: false
        type: string
      - in: query
        name: execNumber
        required: false
        type: string
      - in: query
        name: lastModifiedTime
        required: false
        type: string
      - in: query
        name: description
        required: false
        type: string
      - in: query
        name: cmdType
        required: false
        type: string
      - in: query
        name: execReqArgs
        required: false
        type: string
      - in: query
        name: execEnable
        required: false
        type: string
      - in: query
        name: execTarget
        required: false
        type: string
      - in: query
        name: execFrequency
        required: false
        type: string
      - in: query
        name: execDelay
        required: false
        type: string
      produces:
      - application/json
      responses:
        204:
          description: No Content
      x-swagger-router-controller: Default
    get:
      description: This method retrieves information about a list of execInstance
        resources
      operationId: execInstanceGET
      parameters:
      - in: query
        name: resourceType
        required: false
        type: string
      - in: query
        name: resourceID
        required: false
        type: string
      - in: query
        name: resourceName
        required: false
        type: string
      - in: query
        name: parentID
        required: false
        type: string
      - in: query
        name: expirationTime
        required: false
        type: string
      - in: query
        name: accessControlPolicyIDs
        required: false
        type: string
      - in: query
        name: labels
        required: false
        type: string
      - in: query
        name: creationTime
        required: false
        type: string
      - in: query
        name: execNumber
        required: false
        type: string
      - in: query
        name: lastModifiedTime
        required: false
        type: string
      - in: query
        name: description
        required: false
        type: string
      - in: query
        name: cmdType
        required: false
        type: string
      - in: query
        name: execReqArgs
        required: false
        type: string
      - in: query
        name: execEnable
        required: false
        type: string
      - in: query
        name: execTarget
        required: false
        type: string
      - in: query
        name: execFrequency
        required: false
        type: string
      - in: query
        name: execDelay
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, a response body containing an array of the mgmtCmd
            is returned.
          schema:
            $ref: '#/definitions/inline_response_200_mgmtCmd'
      x-swagger-router-controller: Default
  /fanOutPoint:
    delete:
      description: 'This method delete the information about a specific fanOutPointInfo
        resource. '
      operationId: fanOutPointDELETE
      parameters:
      - in: query
        name: FromId
        required: false
        type: string
      - in: query
        name: ToAddress
        required: false
        type: string
      - in: query
        name: groupReqId
        required: false
        type: string
      produces:
      - application/json
      responses:
        204:
          description: No Content
      x-swagger-router-controller: Default
    get:
      description: This method retrieves information about a list of fanOutPoint resources
      operationId: fanOutPointGET
      parameters:
      - in: query
        name: FromId
        required: false
        type: string
      - in: query
        name: ToAddress
        required: false
        type: string
      - in: query
        name: groupReqId
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, a response body containing an array of the fanOutPoint
            is returned.
          schema:
            $ref: '#/definitions/inline_response_200_fanOutPoint'
      x-swagger-router-controller: Default
    post:
      description: This method is used to create a fanOutPoint resource.
      operationId: fanOutPointPOST
      parameters:
      - description: fanOutPointInfo with updated information is included as entity
          body of the request
        in: body
        name: fanOutPointInfo
        required: true
        schema:
          $ref: '#/definitions/fanOutPointInfo'
      produces:
      - application/json
      responses:
        201:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_fanOutPoint'
      x-swagger-router-controller: Default
    put:
      description: 'This method updates the information about a specific fanOutPointInfo
        resource. '
      operationId: fanOutPointPUT
      parameters:
      - description: fanOutPointInfo with updated information is included as entity
          body of the request
        in: body
        name: fanOutPointInfo
        required: true
        schema:
          $ref: '#/definitions/fanOutPointInfo'
      - in: query
        name: FromId
        required: false
        type: string
      - in: query
        name: ToAddress
        required: false
        type: string
      - in: query
        name: groupReqId
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_fanOutPoint'
      x-swagger-router-controller: Default
  /group:
    delete:
      description: 'This method delete the information about a specific groupInfo
        resource. '
      operationId: groupDELETE
      parameters:
      - in: query
        name: FromId
        required: false
        type: string
      - in: query
        name: ToAddress
        required: false
        type: string
      produces:
      - application/json
      responses:
        204:
          description: No Content
      x-swagger-router-controller: Default
    get:
      description: This method retrieves information about a list of group resources
      operationId: groupGET
      parameters:
      - in: query
        name: FromId
        required: false
        type: string
      - in: query
        name: ToAddress
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, a response body containing an array of the group
            is returned.
          schema:
            $ref: '#/definitions/inline_response_200_group'
      x-swagger-router-controller: Default
    post:
      description: This method is used to create a group resource.
      operationId: groupPOST
      parameters:
      - description: groupInfo with updated information is included as entity body
          of the request
        in: body
        name: groupInfo
        required: true
        schema:
          $ref: '#/definitions/groupInfo'
      produces:
      - application/json
      responses:
        201:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_group'
      x-swagger-router-controller: Default
    put:
      description: 'This method updates the information about a specific groupInfo
        resource. '
      operationId: groupPUT
      parameters:
      - description: groupInfo with updated information is included as entity body
          of the request
        in: body
        name: groupInfo
        required: true
        schema:
          $ref: '#/definitions/groupInfo'
      - in: query
        name: FromId
        required: false
        type: string
      - in: query
        name: ToAddress
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_group'
      x-swagger-router-controller: Default
  /latest:
    delete:
      description: 'This method delete the information about a specific latest contentInstance
        resource. '
      operationId: latestDELETE
      parameters:
      - in: query
        name: creationTime
        required: false
        type: string
      produces:
      - application/json
      responses:
        204:
          description: No Content
      x-swagger-router-controller: Default
    get:
      description: This method retrieves information about a latest contentInstance
        resources
      operationId: latestGET
      parameters:
      - in: query
        name: creationTime
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, a response body containing a contentInstance
            is returned.
          schema:
            $ref: '#/definitions/inline_response_200_contentInstance'
      x-swagger-router-controller: Default
  /locationPolicy:
    delete:
      description: 'This method delete the information about a specific locationPolicyInfo
        resource. '
      operationId: locationPolicyDELETE
      parameters:
      - in: query
        name: FromId
        required: false
        type: string
      - in: query
        name: ToAddress
        required: false
        type: string
      produces:
      - application/json
      responses:
        204:
          description: No Content
      x-swagger-router-controller: Default
    get:
      description: This method retrieves information about a list of locationPolicy
        resources
      operationId: locationPolicyGET
      parameters:
      - in: query
        name: FromId
        required: false
        type: string
      - in: query
        name: ToAddress
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, a response body containing an array of the locationPolicy
            is returned.
          schema:
            $ref: '#/definitions/inline_response_200_locationPolicy'
      x-swagger-router-controller: Default
    post:
      description: This method is used to create a locationPolicy resource.
      operationId: locationPolicyPOST
      parameters:
      - description: locationPolicyInfo with updated information is included as entity
          body of the request
        in: body
        name: locationPolicyInfo
        required: true
        schema:
          $ref: '#/definitions/locationPolicyInfo'
      produces:
      - application/json
      responses:
        201:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_locationPolicy'
      x-swagger-router-controller: Default
    put:
      description: 'This method updates the information about a specific locationPolicyInfo
        resource. '
      operationId: locationPolicyPUT
      parameters:
      - description: locationPolicyInfo with updated information is included as entity
          body of the request
        in: body
        name: locationPolicyInfo
        required: true
        schema:
          $ref: '#/definitions/locationPolicyInfo'
      - in: query
        name: FromId
        required: false
        type: string
      - in: query
        name: ToAddress
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_locationPolicy'
      x-swagger-router-controller: Default
  /m2mServiceSubscriptionProfile:
    delete:
      description: 'This method delete the information about a specific m2mServiceSubscriptionProfile
        resource. '
      operationId: m2mServiceSubscriptionProfileDELETE
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        204:
          description: No Content
      x-swagger-router-controller: Default
    get:
      description: This method retrieves information about a list of m2mServiceSubscriptionProfile
        resources
      operationId: m2mServiceSubscriptionProfileGET
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, a response body containing an array of the m2mServiceSubscriptionProfile
            is returned.
          schema:
            $ref: '#/definitions/inline_response_200_m2mServiceSubscriptionProfile'
      x-swagger-router-controller: Default
    post:
      description: This method is used to create a m2mServiceSubscriptionProfile resource.
      operationId: m2mServiceSubscriptionProfilePOST
      parameters:
      - description: m2mServiceSubscriptionProfile with updated information is included
          as entity body of the request
        in: body
        name: m2mServiceSubscriptionProfileInfo
        required: true
        schema:
          $ref: '#/definitions/m2mServiceSubscriptionProfileInfo'
      produces:
      - application/json
      responses:
        201:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_m2mServiceSubscriptionProfile'
      x-swagger-router-controller: Default
    put:
      description: 'This method updates the information about a specific m2mServiceSubscriptionProfile
        resource. '
      operationId: m2mServiceSubscriptionProfilePUT
      parameters:
      - description: m2mServiceSubscriptionProfile with updated information is included
          as entity body of the request
        in: body
        name: m2mServiceSubscriptionProfileInfo
        required: true
        schema:
          $ref: '#/definitions/m2mServiceSubscriptionProfileInfo'
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_m2mServiceSubscriptionProfile'
      x-swagger-router-controller: Default
  /mgmtCmd:
    delete:
      description: 'This method delete the information about a specific mgmtCmdInfo
        resource. '
      operationId: mgmtCmdDELETE
      parameters:
      - in: query
        name: resourceType
        required: false
        type: string
      - in: query
        name: resourceID
        required: false
        type: string
      - in: query
        name: resourceName
        required: false
        type: string
      - in: query
        name: parentID
        required: false
        type: string
      - in: query
        name: expirationTime
        required: false
        type: string
      - in: query
        name: accessControlPolicyIDs
        required: false
        type: string
      - in: query
        name: labels
        required: false
        type: string
      - in: query
        name: creationTime
        required: false
        type: string
      - in: query
        name: execNumber
        required: false
        type: string
      - in: query
        name: lastModifiedTime
        required: false
        type: string
      - in: query
        name: description
        required: false
        type: string
      - in: query
        name: cmdType
        required: false
        type: string
      - in: query
        name: execReqArgs
        required: false
        type: string
      - in: query
        name: execEnable
        required: false
        type: string
      - in: query
        name: execTarget
        required: false
        type: string
      - in: query
        name: execFrequency
        required: false
        type: string
      - in: query
        name: execDelay
        required: false
        type: string
      produces:
      - application/json
      responses:
        204:
          description: No Content
      x-swagger-router-controller: Default
    get:
      description: This method retrieves information about a list of mgmtCmd resources
      operationId: mgmtCmdGET
      parameters:
      - in: query
        name: resourceType
        required: false
        type: string
      - in: query
        name: resourceID
        required: false
        type: string
      - in: query
        name: resourceName
        required: false
        type: string
      - in: query
        name: parentID
        required: false
        type: string
      - in: query
        name: expirationTime
        required: false
        type: string
      - in: query
        name: accessControlPolicyIDs
        required: false
        type: string
      - in: query
        name: labels
        required: false
        type: string
      - in: query
        name: creationTime
        required: false
        type: string
      - in: query
        name: execNumber
        required: false
        type: string
      - in: query
        name: lastModifiedTime
        required: false
        type: string
      - in: query
        name: description
        required: false
        type: string
      - in: query
        name: cmdType
        required: false
        type: string
      - in: query
        name: execReqArgs
        required: false
        type: string
      - in: query
        name: execEnable
        required: false
        type: string
      - in: query
        name: execTarget
        required: false
        type: string
      - in: query
        name: execFrequency
        required: false
        type: string
      - in: query
        name: execDelay
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, a response body containing an array of the mgmtCmd
            is returned.
          schema:
            $ref: '#/definitions/inline_response_200_mgmtCmd'
      x-swagger-router-controller: Default
    post:
      description: This method is used to create a mgmtCmd resource.
      operationId: mgmtCmdPOST
      parameters:
      - description: mgmtCmdInfo with updated information is included as entity body
          of the request
        in: body
        name: mgmtCmdInfo
        required: true
        schema:
          $ref: '#/definitions/mgmtCmdInfo'
      produces:
      - application/json
      responses:
        201:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_mgmtCmd'
      x-swagger-router-controller: Default
    put:
      description: 'This method updates the information about a specific mgmtCmdInfo
        resource. '
      operationId: mgmtCmdPUT
      parameters:
      - description: mgmtCmdInfo with updated information is included as entity body
          of the request
        in: body
        name: mgmtCmdInfo
        required: true
        schema:
          $ref: '#/definitions/mgmtCmdInfo'
      - in: query
        name: resourceType
        required: false
        type: string
      - in: query
        name: resourceID
        required: false
        type: string
      - in: query
        name: resourceName
        required: false
        type: string
      - in: query
        name: parentID
        required: false
        type: string
      - in: query
        name: expirationTime
        required: false
        type: string
      - in: query
        name: accessControlPolicyIDs
        required: false
        type: string
      - in: query
        name: labels
        required: false
        type: string
      - in: query
        name: creationTime
        required: false
        type: string
      - in: query
        name: execNumber
        required: false
        type: string
      - in: query
        name: lastModifiedTime
        required: false
        type: string
      - in: query
        name: description
        required: false
        type: string
      - in: query
        name: cmdType
        required: false
        type: string
      - in: query
        name: execReqArgs
        required: false
        type: string
      - in: query
        name: execEnable
        required: false
        type: string
      - in: query
        name: execTarget
        required: false
        type: string
      - in: query
        name: execFrequency
        required: false
        type: string
      - in: query
        name: execDelay
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_mgmtCmd'
      x-swagger-router-controller: Default
  /mgmtObj:
    delete:
      description: 'This method delete the information about a specific mgmtObjInfo
        resource. '
      operationId: mgmtObjDELETE
      parameters:
      - in: query
        name: FromId
        required: false
        type: string
      - in: query
        name: ToAddress
        required: false
        type: string
      produces:
      - application/json
      responses:
        204:
          description: No Content
      x-swagger-router-controller: Default
    get:
      description: This method retrieves information about a list of mgmtObj resources
      operationId: mgmtObjGET
      parameters:
      - in: query
        name: FromId
        required: false
        type: string
      - in: query
        name: ToAddress
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, a response body containing an array of the mgmtObj
            is returned.
          schema:
            $ref: '#/definitions/inline_response_200_mgmtObj'
      x-swagger-router-controller: Default
    post:
      description: This method is used to create a mgmtObj resource.
      operationId: mgmtObjPOST
      parameters:
      - description: mgmtObjInfo with updated information is included as entity body
          of the request
        in: body
        name: mgmtObjInfo
        required: true
        schema:
          $ref: '#/definitions/mgmtObjInfo'
      produces:
      - application/json
      responses:
        201:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_mgmtObj'
      x-swagger-router-controller: Default
    put:
      description: 'This method updates the information about a specific mgmtObjInfo
        resource. '
      operationId: mgmtObjPUT
      parameters:
      - description: mgmtObjInfo with updated information is included as entity body
          of the request
        in: body
        name: mgmtObjInfo
        required: true
        schema:
          $ref: '#/definitions/mgmtObjInfo'
      - in: query
        name: FromId
        required: false
        type: string
      - in: query
        name: ToAddress
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_mgmtObj'
      x-swagger-router-controller: Default
  /node:
    delete:
      description: 'This method delete the information about a specific nodeInfo resource. '
      operationId: nodeDELETE
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        204:
          description: No Content
      x-swagger-router-controller: Default
    get:
      description: This method retrieves information about a list of node resources
      operationId: nodeGET
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, a response body containing an array of the node
            is returned.
          schema:
            $ref: '#/definitions/inline_response_200_node'
      x-swagger-router-controller: Default
    post:
      description: This method is used to create a node resource.
      operationId: nodePOST
      parameters:
      - description: nodeInfo with updated information is included as entity body
          of the request
        in: body
        name: nodeInfo
        required: true
        schema:
          $ref: '#/definitions/nodeInfo'
      produces:
      - application/json
      responses:
        201:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_node'
      x-swagger-router-controller: Default
    put:
      description: 'This method updates the information about a specific nodeInfo
        resource. '
      operationId: nodePUT
      parameters:
      - description: nodeInfo with updated information is included as entity body
          of the request
        in: body
        name: nodeInfo
        required: true
        schema:
          $ref: '#/definitions/nodeInfo'
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_node'
      x-swagger-router-controller: Default
  /oldest:
    delete:
      description: 'This method delete the information about a specific oldest contentInstance
        resource. '
      operationId: oldestDELETE
      parameters:
      - in: query
        name: creationTime
        required: false
        type: string
      produces:
      - application/json
      responses:
        204:
          description: No Content
      x-swagger-router-controller: Default
    get:
      description: This method retrieves information about a oldest contentInstance
        resources
      operationId: oldestGET
      parameters:
      - in: query
        name: creationTime
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, a response body containing a contentInstance
            is returned.
          schema:
            $ref: '#/definitions/inline_response_200_contentInstance'
      x-swagger-router-controller: Default
  /pollingChannel:
    delete:
      description: 'This method delete the information about a specific pollingChannelInfo
        resource. '
      operationId: pollingChannelDELETE
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        204:
          description: No Content
      x-swagger-router-controller: Default
    get:
      description: This method retrieves information about a list of pollingChannel
        resources
      operationId: pollingChannelGET
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, a response body containing an array of the pollingChannel
            is returned.
          schema:
            $ref: '#/definitions/inline_response_200_pollingChannel'
      x-swagger-router-controller: Default
    post:
      description: This method is used to create a pollingChannel resource.
      operationId: pollingChannelPOST
      parameters:
      - description: pollingChannelInfo with updated information is included as entity
          body of the request
        in: body
        name: pollingChannelInfo
        required: true
        schema:
          $ref: '#/definitions/pollingChannelInfo'
      produces:
      - application/json
      responses:
        201:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_pollingChannel'
      x-swagger-router-controller: Default
    put:
      description: 'This method updates the information about a specific pollingChannelInfo
        resource. '
      operationId: pollingChannelPUT
      parameters:
      - description: pollingChannelInfo with updated information is included as entity
          body of the request
        in: body
        name: pollingChannelInfo
        required: true
        schema:
          $ref: '#/definitions/pollingChannelInfo'
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_pollingChannel'
      x-swagger-router-controller: Default
  /pollingChannelURI:
    get:
      description: This method retrieves information about a list of pollingChannelURI
        resources
      operationId: pollingChannelURIGET
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, a response body containing an array of the pollingChannelURI
            is returned.
          schema:
            $ref: '#/definitions/inline_response_200_pollingChannel'
      x-swagger-router-controller: Default
  /remoteCSE:
    delete:
      description: 'This method delete the information about a specific RemoteCSE
        resource. '
      operationId: RemoteCSEDELETE
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        204:
          description: No Content
      x-swagger-router-controller: Default
    get:
      description: This method retrieves information about a list of RemoteCSE resources
      operationId: RemoteCSEGET
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, a response body containing an array of the CSEBase
            is returned.
          schema:
            $ref: '#/definitions/inline_response_200_1'
      x-swagger-router-controller: Default
    post:
      description: This method is used to create a RemoteCSE resource.
      operationId: RemoteCSEPOST
      parameters:
      - description: RemoteCSE with updated information is included as entity body
          of the request
        in: body
        name: remoteCSEInfo
        required: true
        schema:
          $ref: '#/definitions/remoteCSEInfo'
      produces:
      - application/json
      responses:
        201:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_1'
      x-swagger-router-controller: Default
    put:
      description: 'This method updates the information about a specific RemoteCSE
        resource. '
      operationId: RemoteCSEPUT
      parameters:
      - description: RemoteCSE with updated information is included as entity body
          of the request
        in: body
        name: remoteCSEInfo
        required: true
        schema:
          $ref: '#/definitions/remoteCSEInfo'
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_1'
      x-swagger-router-controller: Default
  /request:
    delete:
      description: 'This method delete the information about a specific request resource. '
      operationId: requestDELETE
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        204:
          description: No Content
      x-swagger-router-controller: Default
    get:
      description: This method retrieves information about a list of request resources
      operationId: requestGET
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, a response body containing an array of the request
            is returned.
          schema:
            $ref: '#/definitions/inline_response_200_request'
      x-swagger-router-controller: Default
  /resource:
    get:
      description: This method retrieves information about a list of resource resources
      operationId: resourceGET
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, a response body containing an array of the resource
            is returned.
          schema:
            $ref: '#/definitions/inline_response_200_resource'
      x-swagger-router-controller: Default
  /serviceSubscribedAppRule:
    delete:
      description: 'This method delete the information about a specific serviceSubscribedAppRule
        resource. '
      operationId: serviceSubscribedAppRuleDELETE
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        204:
          description: No Content
      x-swagger-router-controller: Default
    get:
      description: This method retrieves information about a list of serviceSubscribedAppRule
        resources
      operationId: serviceSubscribedAppRuleGET
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, a response body containing an array of the serviceSubscribedAppRule
            is returned.
          schema:
            $ref: '#/definitions/inline_response_200_serviceSubscribedAppRule'
      x-swagger-router-controller: Default
    post:
      description: This method is used to create a serviceSubscribedAppRule resource.
      operationId: serviceSubscribedAppRulePOST
      parameters:
      - description: serviceSubscribedAppRule with updated information is included
          as entity body of the request
        in: body
        name: serviceSubscribedAppRuleInfo
        required: true
        schema:
          $ref: '#/definitions/serviceSubscribedAppRuleInfo'
      produces:
      - application/json
      responses:
        201:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_serviceSubscribedAppRule'
      x-swagger-router-controller: Default
    put:
      description: 'This method updates the information about a specific serviceSubscribedAppRule
        resource. '
      operationId: serviceSubscribedAppRulePUT
      parameters:
      - description: serviceSubscribedAppRule with updated information is included
          as entity body of the request
        in: body
        name: serviceSubscribedAppRuleInfo
        required: true
        schema:
          $ref: '#/definitions/serviceSubscribedAppRuleInfo'
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_serviceSubscribedAppRule'
      x-swagger-router-controller: Default
  /serviceSubscribedNode:
    delete:
      description: 'This method delete the information about a specific serviceSubscribedNode
        resource. '
      operationId: serviceSubscribedNodeDELETE
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        204:
          description: No Content
      x-swagger-router-controller: Default
    get:
      description: This method retrieves information about a list of serviceSubscribedNode
        resources
      operationId: serviceSubscribedNodeGET
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, a response body containing an array of the serviceSubscribedNode
            is returned.
          schema:
            $ref: '#/definitions/inline_response_200_serviceSubscribedNode'
      x-swagger-router-controller: Default
    post:
      description: This method is used to create a serviceSubscribedNode resource.
      operationId: serviceSubscribedNodePOST
      parameters:
      - description: serviceSubscribedNode with updated information is included as
          entity body of the request
        in: body
        name: serviceSubscribedNodeInfo
        required: true
        schema:
          $ref: '#/definitions/serviceSubscribedNodeInfo'
      produces:
      - application/json
      responses:
        201:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_serviceSubscribedNode'
      x-swagger-router-controller: Default
    put:
      description: 'This method updates the information about a specific serviceSubscribedNode
        resource. '
      operationId: serviceSubscribedNodePUT
      parameters:
      - description: serviceSubscribedNode with updated information is included as
          entity body of the request
        in: body
        name: serviceSubscribedNodeInfo
        required: true
        schema:
          $ref: '#/definitions/serviceSubscribedNodeInfo'
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_serviceSubscribedNode'
      x-swagger-router-controller: Default
  /statsCollect:
    delete:
      description: 'This method delete the information about a specific statsCollectInfo
        resource. '
      operationId: statsCollectDELETE
      parameters:
      - in: query
        name: FromId
        required: false
        type: string
      - in: query
        name: ToAddress
        required: false
        type: string
      produces:
      - application/json
      responses:
        204:
          description: No Content
      x-swagger-router-controller: Default
    get:
      description: This method retrieves information about a list of statsCollect
        resources
      operationId: statsCollectGET
      parameters:
      - in: query
        name: FromId
        required: false
        type: string
      - in: query
        name: ToAddress
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, a response body containing an array of the statsCollect
            is returned.
          schema:
            $ref: '#/definitions/inline_response_200_statsCollect'
      x-swagger-router-controller: Default
    post:
      description: This method is used to create a statsCollect resource.
      operationId: statsCollectPOST
      parameters:
      - description: statsCollectInfo with updated information is included as entity
          body of the request
        in: body
        name: statsCollectInfo
        required: true
        schema:
          $ref: '#/definitions/statsCollectInfo'
      produces:
      - application/json
      responses:
        201:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_statsCollect'
      x-swagger-router-controller: Default
    put:
      description: 'This method updates the information about a specific statsCollectInfo
        resource. '
      operationId: statsCollectPUT
      parameters:
      - description: statsCollectInfo with updated information is included as entity
          body of the request
        in: body
        name: statsCollectInfo
        required: true
        schema:
          $ref: '#/definitions/statsCollectInfo'
      - in: query
        name: FromId
        required: false
        type: string
      - in: query
        name: ToAddress
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_statsCollect'
      x-swagger-router-controller: Default
  /statsConfig:
    delete:
      description: 'This method delete the information about a specific statsConfigInfo
        resource. '
      operationId: statsConfigDELETE
      parameters:
      - in: query
        name: FromId
        required: false
        type: string
      - in: query
        name: ToAddress
        required: false
        type: string
      produces:
      - application/json
      responses:
        204:
          description: No Content
      x-swagger-router-controller: Default
    get:
      description: This method retrieves information about a list of statsConfig resources
      operationId: statsConfigGET
      parameters:
      - in: query
        name: FromId
        required: false
        type: string
      - in: query
        name: ToAddress
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, a response body containing an array of the statsConfig
            is returned.
          schema:
            $ref: '#/definitions/inline_response_200_statsConfig'
      x-swagger-router-controller: Default
    post:
      description: This method is used to create a statsConfig resource.
      operationId: statsConfigPOST
      parameters:
      - description: statsConfigInfo with updated information is included as entity
          body of the request
        in: body
        name: statsConfigInfo
        required: true
        schema:
          $ref: '#/definitions/statsConfigInfo'
      produces:
      - application/json
      responses:
        201:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_statsConfig'
      x-swagger-router-controller: Default
    put:
      description: 'This method updates the information about a specific statsConfigInfo
        resource. '
      operationId: statsConfigPUT
      parameters:
      - description: statsConfigInfo with updated information is included as entity
          body of the request
        in: body
        name: statsConfigInfo
        required: true
        schema:
          $ref: '#/definitions/statsConfigInfo'
      - in: query
        name: FromId
        required: false
        type: string
      - in: query
        name: ToAddress
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_statsConfig'
      x-swagger-router-controller: Default
  /subscription:
    delete:
      description: 'This method delete the information about a specific subscriptionInfo
        resource. '
      operationId: subscriptionDELETE
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        204:
          description: No Content
      x-swagger-router-controller: Default
    get:
      description: This method retrieves information about a list of subscription
        resources
      operationId: subscriptionGET
      parameters:
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, a response body containing an array of the subscription
            is returned.
          schema:
            $ref: '#/definitions/inline_response_200_subscription'
      x-swagger-router-controller: Default
    post:
      description: This method is used to create a subscription resource.
      operationId: subscriptionPOST
      parameters:
      - description: subscriptionInfo with updated information is included as entity
          body of the request
        in: body
        name: subscriptionInfo
        required: true
        schema:
          $ref: '#/definitions/subscriptionInfo'
      produces:
      - application/json
      responses:
        201:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_subscription'
      x-swagger-router-controller: Default
    put:
      description: 'This method updates the information about a specific subscriptionInfo
        resource. '
      operationId: subscriptionPUT
      parameters:
      - description: subscriptionInfo with updated information is included as entity
          body of the request
        in: body
        name: subscriptionInfo
        required: true
        schema:
          $ref: '#/definitions/subscriptionInfo'
      - in: query
        name: Operation
        required: false
        type: string
      - in: query
        name: targetAddress
        required: false
        type: string
      - in: query
        name: msgOriginatorId
        required: false
        type: string
      - in: query
        name: RequestId
        required: false
        type: string
      - in: query
        name: ResourceType
        required: false
        type: string
      - in: query
        name: OriginatingTimestamp
        required: false
        type: string
      - in: query
        name: ReqExpirationTimestamp
        required: false
        type: string
      - in: query
        name: ResExpirationTimestamp
        required: false
        type: string
      - in: query
        name: EventCategory
        required: false
        type: string
      - in: query
        name: OperationalExecutionTime
        required: false
        type: string
      - in: query
        name: ResponseType
        required: false
        type: string
      - in: query
        name: ResultPersistence
        required: false
        type: string
      - in: query
        name: ResultContent
        required: false
        type: string
      - in: query
        name: DeliveryAggregation
        required: false
        type: string
      - in: query
        name: GroupRequestIdentifier
        required: false
        type: string
      - in: query
        name: FilterCriteria
        required: false
        type: string
      - in: query
        name: DiscoveryResultType
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Upon success, the HTTP response shall include a "Location"
            HTTP header that contains the resource URI of the created resource.
          schema:
            $ref: '#/definitions/inline_response_200_subscription'
      x-swagger-router-controller: Default
produces:
- application/json
schemes:
- http
- https
security:
- OauthSecurity:
  - all
swagger: '2.0'
