---
swagger: "2.0"
info:
  description: "The ETSI IOT Bandwidth Management API described using OpenAPI"
  version: "1.1.1"
  title: "IOT_API"
host: "127.0.0.1:8080"
basePath: "/iot3/example"
schemes:
- "http"
- "https"
consumes:
- "application/json"
produces:
- "application/json"
security:
- OauthSecurity:
  - "all"
paths:
  /AE:
    post:
      description: "This method is used to create a AE resource."
      operationId: "AEPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "AEInfo"
        description: "AEInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/AEInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific AEInfo\
        \ resource. "
      operationId: "AEPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "AEInfo"
        description: "AEInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/AEInfo"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific AEInfo\
        \ resource. "
      operationId: "AEDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of bandwidthAllocation\
        \ resources"
      operationId: "AEGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the bandwidthAllocations\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200"
      x-swagger-router-controller: "Default" 
  /remoteCSE:
    post:
      description: "This method is used to create a RemoteCSE resource."
      operationId: "RemoteCSEPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "remoteCSEInfo"
        description: "RemoteCSE with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/remoteCSEInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_1"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific RemoteCSE\
        \ resource. "
      operationId: "RemoteCSEPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "remoteCSEInfo"
        description: "RemoteCSE with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/remoteCSEInfo"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_1"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific RemoteCSE\
        \ resource. "
      operationId: "RemoteCSEDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of RemoteCSE\
        \ resources"
      operationId: "RemoteCSEGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the CSEBase\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_1"
      x-swagger-router-controller: "Default"
  /CSEBase:
     get:
      description: "This method retrieves information about a list of CSEBase\
        \ resources"
      operationId: "CSEBaseGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the CSEBase\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_2"
      x-swagger-router-controller: "Default"
  /container:
    post:
      description: "This method is used to create a container resource."
      operationId: "containerPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "containerInfo"
        description: "container with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/containerInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_container"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific container\
        \ resource. "
      operationId: "containerPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "containerInfo"
        description: "container with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/containerInfo"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_container"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific container\
        \ resource. "
      operationId: "containerDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of container\
        \ resources"
      operationId: "containerGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the container\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_container"
      x-swagger-router-controller: "Default"
  /delivery:
    post:
      description: "This method is used to create a delivery resource."
      operationId: "deliveryPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "deliveryInfo"
        description: "delivery with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/deliveryInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_delivery"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific delivery\
        \ resource. "
      operationId: "deliveryPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "deliveryInfo"
        description: "delivery with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/deliveryInfo"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_delivery"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific delivery\
        \ resource. "
      operationId: "deliveryDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of delivery\
        \ resources"
      operationId: "deliveryGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the delivery\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_delivery"
      x-swagger-router-controller: "Default"
  /resource:
     get:
      description: "This method retrieves information about a list of resource\
        \ resources"
      operationId: "resourceGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the resource\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_resource"
      x-swagger-router-controller: "Default"
  /group:
    post:
      description: "This method is used to create a group resource."
      operationId: "groupPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "groupInfo"
        description: "groupInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/groupInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_group"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific groupInfo\
        \ resource. "
      operationId: "groupPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "groupInfo"
        description: "groupInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/groupInfo"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_group"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific groupInfo\
        \ resource. "
      operationId: "groupDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of group\
        \ resources"
      operationId: "groupGET"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the group\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_group"
      x-swagger-router-controller: "Default"
  /fanOutPoint:
    post:
      description: "This method is used to create a fanOutPoint resource."
      operationId: "fanOutPointPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "fanOutPointInfo"
        description: "fanOutPointInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/fanOutPointInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_fanOutPoint"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific fanOutPointInfo\
        \ resource. "
      operationId: "fanOutPointPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "fanOutPointInfo"
        description: "fanOutPointInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/fanOutPointInfo"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "groupReqId"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_fanOutPoint"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific fanOutPointInfo\
        \ resource. "
      operationId: "fanOutPointDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "groupReqId"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of fanOutPoint\
        \ resources"
      operationId: "fanOutPointGET"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "groupReqId"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the fanOutPoint\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_fanOutPoint"
      x-swagger-router-controller: "Default"
  /semanticFanOutPoint:
    get:
      description: "This method retrieves information about a list of semanticFanOutPoint\
        \ resources"
      operationId: "semanticFanOutPointGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the semanticFanOutPoint\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_semanticFanOutPoints"
      x-swagger-router-controller: "Default"
  /mgmtObj:
    post:
      description: "This method is used to create a mgmtObj resource."
      operationId: "mgmtObjPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "mgmtObjInfo"
        description: "mgmtObjInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/mgmtObjInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_mgmtObj"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific mgmtObjInfo\
        \ resource. "
      operationId: "mgmtObjPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "mgmtObjInfo"
        description: "mgmtObjInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/mgmtObjInfo"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_mgmtObj"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific mgmtObjInfo\
        \ resource. "
      operationId: "mgmtObjDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of mgmtObj\
        \ resources"
      operationId: "mgmtObjGET"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the mgmtObj\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_mgmtObj"
      x-swagger-router-controller: "Default"
  /mgmtCmd:
    post:
      description: "This method is used to create a mgmtCmd resource."
      operationId: "mgmtCmdPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "mgmtCmdInfo"
        description: "mgmtCmdInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/mgmtCmdInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_mgmtCmd"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific mgmtCmdInfo\
        \ resource. "
      operationId: "mgmtCmdPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "mgmtCmdInfo"
        description: "mgmtCmdInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/mgmtCmdInfo"
      - name: "resourceType"
        in: "query"
        required: false
        type: "string"
      - name: "resourceID"
        in: "query"
        required: false
        type: "string"
      - name: "resourceName"
        in: "query"
        required: false
        type: "string"
      - name: "parentID"
        in: "query"
        required: false
        type: "string"
      - name: "expirationTime"
        in: "query"
        required: false
        type: "string"
      - name: "accessControlPolicyIDs"
        in: "query"
        required: false
        type: "string"
      - name: "labels"
        in: "query"
        required: false
        type: "string"
      - name: "creationTime"
        in: "query"
        required: false
        type: "string"
      - name: "execNumber"
        in: "query"
        required: false
        type: "string"
      - name: "lastModifiedTime"
        in: "query"
        required: false
        type: "string"
      - name: "description"
        in: "query"
        required: false
        type: "string"
      - name: "cmdType"
        in: "query"
        required: false
        type: "string"
      - name: "execReqArgs"
        in: "query"
        required: false
        type: "string"
      - name: "execEnable"
        in: "query"
        required: false
        type: "string"
      - name: "execTarget"
        in: "query"
        required: false
        type: "string"
      - name: "execFrequency"
        in: "query"
        required: false
        type: "string"
      - name: "execDelay"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_mgmtCmd"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific mgmtCmdInfo\
        \ resource. "
      operationId: "mgmtCmdDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "resourceType"
        in: "query"
        required: false
        type: "string"
      - name: "resourceID"
        in: "query"
        required: false
        type: "string"
      - name: "resourceName"
        in: "query"
        required: false
        type: "string"
      - name: "parentID"
        in: "query"
        required: false
        type: "string"
      - name: "expirationTime"
        in: "query"
        required: false
        type: "string"
      - name: "accessControlPolicyIDs"
        in: "query"
        required: false
        type: "string"
      - name: "labels"
        in: "query"
        required: false
        type: "string"
      - name: "creationTime"
        in: "query"
        required: false
        type: "string"
      - name: "execNumber"
        in: "query"
        required: false
        type: "string"
      - name: "lastModifiedTime"
        in: "query"
        required: false
        type: "string"
      - name: "description"
        in: "query"
        required: false
        type: "string"
      - name: "cmdType"
        in: "query"
        required: false
        type: "string"
      - name: "execReqArgs"
        in: "query"
        required: false
        type: "string"
      - name: "execEnable"
        in: "query"
        required: false
        type: "string"
      - name: "execTarget"
        in: "query"
        required: false
        type: "string"
      - name: "execFrequency"
        in: "query"
        required: false
        type: "string"
      - name: "execDelay"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of mgmtCmd\
        \ resources"
      operationId: "mgmtCmdGET"
      produces:
      - "application/json"
      parameters:
      - name: "resourceType"
        in: "query"
        required: false
        type: "string"
      - name: "resourceID"
        in: "query"
        required: false
        type: "string"
      - name: "resourceName"
        in: "query"
        required: false
        type: "string"
      - name: "parentID"
        in: "query"
        required: false
        type: "string"
      - name: "expirationTime"
        in: "query"
        required: false
        type: "string"
      - name: "accessControlPolicyIDs"
        in: "query"
        required: false
        type: "string"
      - name: "labels"
        in: "query"
        required: false
        type: "string"
      - name: "creationTime"
        in: "query"
        required: false
        type: "string"
      - name: "execNumber"
        in: "query"
        required: false
        type: "string"
      - name: "lastModifiedTime"
        in: "query"
        required: false
        type: "string"
      - name: "description"
        in: "query"
        required: false
        type: "string"
      - name: "cmdType"
        in: "query"
        required: false
        type: "string"
      - name: "execReqArgs"
        in: "query"
        required: false
        type: "string"
      - name: "execEnable"
        in: "query"
        required: false
        type: "string"
      - name: "execTarget"
        in: "query"
        required: false
        type: "string"
      - name: "execFrequency"
        in: "query"
        required: false
        type: "string"
      - name: "execDelay"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the mgmtCmd\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_mgmtCmd"
      x-swagger-router-controller: "Default"
  /execInstance:
    delete:
      description: "This method delete the information about a specific execInstanceInfo\
        \ resource. "
      operationId: "execInstanceDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "resourceType"
        in: "query"
        required: false
        type: "string"
      - name: "resourceID"
        in: "query"
        required: false
        type: "string"
      - name: "resourceName"
        in: "query"
        required: false
        type: "string"
      - name: "parentID"
        in: "query"
        required: false
        type: "string"
      - name: "expirationTime"
        in: "query"
        required: false
        type: "string"
      - name: "accessControlPolicyIDs"
        in: "query"
        required: false
        type: "string"
      - name: "labels"
        in: "query"
        required: false
        type: "string"
      - name: "creationTime"
        in: "query"
        required: false
        type: "string"
      - name: "execNumber"
        in: "query"
        required: false
        type: "string"
      - name: "lastModifiedTime"
        in: "query"
        required: false
        type: "string"
      - name: "description"
        in: "query"
        required: false
        type: "string"
      - name: "cmdType"
        in: "query"
        required: false
        type: "string"
      - name: "execReqArgs"
        in: "query"
        required: false
        type: "string"
      - name: "execEnable"
        in: "query"
        required: false
        type: "string"
      - name: "execTarget"
        in: "query"
        required: false
        type: "string"
      - name: "execFrequency"
        in: "query"
        required: false
        type: "string"
      - name: "execDelay"
        in: "query"
        required: false
        type: "string"
      - name: "execResult"
        in: "query"
        required: false
        type: "string"
      - name: "execStatus"
        in: "query"
        required: false
        type: "string"
      - name: "execDisable"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of execInstance\
        \ resources"
      operationId: "execInstanceGET"
      produces:
      - "application/json"
      parameters:
      - name: "resourceType"
        in: "query"
        required: false
        type: "string"
      - name: "resourceID"
        in: "query"
        required: false
        type: "string"
      - name: "resourceName"
        in: "query"
        required: false
        type: "string"
      - name: "parentID"
        in: "query"
        required: false
        type: "string"
      - name: "expirationTime"
        in: "query"
        required: false
        type: "string"
      - name: "accessControlPolicyIDs"
        in: "query"
        required: false
        type: "string"
      - name: "labels"
        in: "query"
        required: false
        type: "string"
      - name: "creationTime"
        in: "query"
        required: false
        type: "string"
      - name: "execNumber"
        in: "query"
        required: false
        type: "string"
      - name: "lastModifiedTime"
        in: "query"
        required: false
        type: "string"
      - name: "description"
        in: "query"
        required: false
        type: "string"
      - name: "cmdType"
        in: "query"
        required: false
        type: "string"
      - name: "execReqArgs"
        in: "query"
        required: false
        type: "string"
      - name: "execEnable"
        in: "query"
        required: false
        type: "string"
      - name: "execTarget"
        in: "query"
        required: false
        type: "string"
      - name: "execFrequency"
        in: "query"
        required: false
        type: "string"
      - name: "execDelay"
        in: "query"
        required: false
        type: "string"
      - name: "execResult"
        in: "query"
        required: false
        type: "string"
      - name: "execStatus"
        in: "query"
        required: false
        type: "string"
      - name: "execDisable"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the execInstance\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_execInstance"
      x-swagger-router-controller: "Default"
  /locationPolicy:
    post:
      description: "This method is used to create a locationPolicy resource."
      operationId: "locationPolicyPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "locationPolicyInfo"
        description: "locationPolicyInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/locationPolicyInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_locationPolicy"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific locationPolicyInfo\
        \ resource. "
      operationId: "locationPolicyPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "locationPolicyInfo"
        description: "locationPolicyInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/locationPolicyInfo"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_locationPolicy"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific locationPolicyInfo\
        \ resource. "
      operationId: "locationPolicyDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of locationPolicy\
        \ resources"
      operationId: "locationPolicyGET"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the locationPolicy\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_locationPolicy"
      x-swagger-router-controller: "Default"
  /subscription:
    post:
      description: "This method is used to create a subscription resource."
      operationId: "subscriptionPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "subscriptionInfo"
        description: "subscriptionInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/subscriptionInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_subscription"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific subscriptionInfo\
        \ resource. "
      operationId: "subscriptionPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "subscriptionInfo"
        description: "subscriptionInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/subscriptionInfo"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_subscription"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific subscriptionInfo\
        \ resource. "
      operationId: "subscriptionDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of subscription\
        \ resources"
      operationId: "subscriptionGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the subscription\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_subscription"
      x-swagger-router-controller: "Default"
  /pollingChannel:
    post:
      description: "This method is used to create a pollingChannel resource."
      operationId: "pollingChannelPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "pollingChannelInfo"
        description: "pollingChannelInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/pollingChannelInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_pollingChannel"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific pollingChannelInfo\
        \ resource. "
      operationId: "pollingChannelPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "pollingChannelInfo"
        description: "pollingChannelInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/pollingChannelInfo"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_pollingChannel"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific pollingChannelInfo\
        \ resource. "
      operationId: "pollingChannelDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of pollingChannel\
        \ resources"
      operationId: "pollingChannelGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the pollingChannel\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_pollingChannel"
      x-swagger-router-controller: "Default"
  /pollingChannelURI:
    get:
      description: "This method retrieves information about a list of pollingChannelURI\
        \ resources"
      operationId: "pollingChannelURIGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the pollingChannelURI\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_pollingChannel"
      x-swagger-router-controller: "Default"
  /node:
    post:
      description: "This method is used to create a node resource."
      operationId: "nodePOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "nodeInfo"
        description: "nodeInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/nodeInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_node"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific nodeInfo\
        \ resource. "
      operationId: "nodePUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "nodeInfo"
        description: "nodeInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/nodeInfo"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_node"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific nodeInfo\
        \ resource. "
      operationId: "nodeDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of node\
        \ resources"
      operationId: "nodeGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the node\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_node"
      x-swagger-router-controller: "Default"
  /statsConfig:
    post:
      description: "This method is used to create a statsConfig resource."
      operationId: "statsConfigPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "statsConfigInfo"
        description: "statsConfigInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/statsConfigInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_statsConfig"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific statsConfigInfo\
        \ resource. "
      operationId: "statsConfigPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "statsConfigInfo"
        description: "statsConfigInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/statsConfigInfo"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_statsConfig"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific statsConfigInfo\
        \ resource. "
      operationId: "statsConfigDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of statsConfig\
        \ resources"
      operationId: "statsConfigGET"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the statsConfig\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_statsConfig"
      x-swagger-router-controller: "Default"
  /eventConfig:
    post:
      description: "This method is used to create a eventConfig resource."
      operationId: "eventConfigPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "eventConfigInfo"
        description: "eventConfigInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/eventConfigInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_eventConfig"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific eventConfigInfo\
        \ resource. "
      operationId: "eventConfigPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "eventConfigInfo"
        description: "eventConfigInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/eventConfigInfo"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_eventConfig"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific eventConfigInfo\
        \ resource. "
      operationId: "eventConfigDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of eventConfig\
        \ resources"
      operationId: "eventConfigGET"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the eventConfig\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_eventConfig"
      x-swagger-router-controller: "Default"
  /statsCollect:
    post:
      description: "This method is used to create a statsCollect resource."
      operationId: "statsCollectPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "statsCollectInfo"
        description: "statsCollectInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/statsCollectInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_statsCollect"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific statsCollectInfo\
        \ resource. "
      operationId: "statsCollectPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "statsCollectInfo"
        description: "statsCollectInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/statsCollectInfo"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_statsCollect"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific statsCollectInfo\
        \ resource. "
      operationId: "statsCollectDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of statsCollect\
        \ resources"
      operationId: "statsCollectGET"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the statsCollect\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_statsCollect"
      x-swagger-router-controller: "Default"
  /m2mServiceSubscriptionProfile:
    post:
      description: "This method is used to create a m2mServiceSubscriptionProfile resource."
      operationId: "m2mServiceSubscriptionProfilePOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "m2mServiceSubscriptionProfileInfo"
        description: "m2mServiceSubscriptionProfile with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/m2mServiceSubscriptionProfileInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_m2mServiceSubscriptionProfile"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific m2mServiceSubscriptionProfile\
        \ resource. "
      operationId: "m2mServiceSubscriptionProfilePUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "m2mServiceSubscriptionProfileInfo"
        description: "m2mServiceSubscriptionProfile with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/m2mServiceSubscriptionProfileInfo"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_m2mServiceSubscriptionProfile"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific m2mServiceSubscriptionProfile\
        \ resource. "
      operationId: "m2mServiceSubscriptionProfileDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of m2mServiceSubscriptionProfile\
        \ resources"
      operationId: "m2mServiceSubscriptionProfileGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the m2mServiceSubscriptionProfile\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_m2mServiceSubscriptionProfile"
      x-swagger-router-controller: "Default"
  /serviceSubscribedNode:
    post:
      description: "This method is used to create a serviceSubscribedNode resource."
      operationId: "serviceSubscribedNodePOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "serviceSubscribedNodeInfo"
        description: "serviceSubscribedNode with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/serviceSubscribedNodeInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_serviceSubscribedNode"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific serviceSubscribedNode\
        \ resource. "
      operationId: "serviceSubscribedNodePUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "serviceSubscribedNodeInfo"
        description: "serviceSubscribedNode with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/serviceSubscribedNodeInfo"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_serviceSubscribedNode"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific serviceSubscribedNode\
        \ resource. "
      operationId: "serviceSubscribedNodeDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of serviceSubscribedNode\
        \ resources"
      operationId: "serviceSubscribedNodeGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the serviceSubscribedNode\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_serviceSubscribedNode"
      x-swagger-router-controller: "Default"
  /contentInstance:
    post:
      description: "This method is used to create a contentInstance resource."
      operationId: "contentInstancePOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "contentInstanceInfo"
        description: "contentInstance with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/contentInstanceInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_contentInstance"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific contentInstance\
        \ resource. "
      operationId: "contentInstanceDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of contentInstance\
        \ resources"
      operationId: "contentInstanceGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the contentInstance\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_contentInstance"
      x-swagger-router-controller: "Default"
  /request:
    delete:
      description: "This method delete the information about a specific request\
        \ resource. "
      operationId: "requestDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of request\
        \ resources"
      operationId: "requestGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the request\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_request"
      x-swagger-router-controller: "Default"
  /accessControlPolicy:
    post:
      description: "This method is used to create a accessControlPolicy resource."
      operationId: "accessControlPolicyPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "accessControlPolicyInfo"
        description: "accessControlPolicy with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/accessControlPolicyInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_accessControlPolicy"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific accessControlPolicy\
        \ resource. "
      operationId: "accessControlPolicyPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "accessControlPolicyInfo"
        description: "accessControlPolicy with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/accessControlPolicyInfo"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_accessControlPolicy"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific accessControlPolicy\
        \ resource. "
      operationId: "accessControlPolicyDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of accessControlPolicy\
        \ resources"
      operationId: "accessControlPolicyGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the accessControlPolicy\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_accessControlPolicy"
      x-swagger-router-controller: "Default"
  /latest:
    delete:
      description: "This method delete the information about a specific latest contentInstance\
        \ resource. "
      operationId: "latestDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "creationTime"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a latest contentInstance\
        \ resources"
      operationId: "latestGET"
      produces:
      - "application/json"
      parameters:
      - name: "creationTime"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing a contentInstance\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_contentInstance"
      x-swagger-router-controller: "Default"
  /oldest:
    delete:
      description: "This method delete the information about a specific oldest contentInstance\
        \ resource. "
      operationId: "oldestDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "creationTime"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a oldest contentInstance\
        \ resources"
      operationId: "oldestGET"
      produces:
      - "application/json"
      parameters:
      - name: "creationTime"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing a contentInstance\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_contentInstance"
      x-swagger-router-controller: "Default"
  /serviceSubscribedAppRule:
    post:
      description: "This method is used to create a serviceSubscribedAppRule resource."
      operationId: "serviceSubscribedAppRulePOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "serviceSubscribedAppRuleInfo"
        description: "serviceSubscribedAppRule with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/serviceSubscribedAppRuleInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_serviceSubscribedAppRule"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific serviceSubscribedAppRule\
        \ resource. "
      operationId: "serviceSubscribedAppRulePUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "serviceSubscribedAppRuleInfo"
        description: "serviceSubscribedAppRule with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/serviceSubscribedAppRuleInfo"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_serviceSubscribedAppRule"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific serviceSubscribedAppRule\
        \ resource. "
      operationId: "serviceSubscribedAppRuleDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of serviceSubscribedAppRule\
        \ resources"
      operationId: "serviceSubscribedAppRuleGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the serviceSubscribedAppRule\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_serviceSubscribedAppRule"
      x-swagger-router-controller: "Default"
  /notificationTargetMgmtPolicyRef:
    post:
      description: "This method is used to create a notificationTargetMgmtPolicyRef resource."
      operationId: "notificationTargetMgmtPolicyRefPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "notificationTargetMgmtPolicyRefInfo"
        description: "notificationTargetMgmtPolicyRefInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/notificationTargetMgmtPolicyRefInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_notificationTargetMgmtPolicyRef"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific notificationTargetMgmtPolicyRefInfo\
        \ resource. "
      operationId: "notificationTargetMgmtPolicyRefPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "notificationTargetMgmtPolicyRefInfo"
        description: "notificationTargetMgmtPolicyRefInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/notificationTargetMgmtPolicyRefInfo"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_notificationTargetMgmtPolicyRef"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific notificationTargetMgmtPolicyRefInfo\
        \ resource. "
      operationId: "notificationTargetMgmtPolicyRefDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of notificationTargetMgmtPolicyRef\
        \ resources"
      operationId: "notificationTargetMgmtPolicyRefGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the notificationTargetMgmtPolicyRef\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_notificationTargetMgmtPolicyRef"
      x-swagger-router-controller: "Default"
  /notificationTargetPolicy:
    post:
      description: "This method is used to create a notificationTargetPolicy resource."
      operationId: "notificationTargetPolicyPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "notificationTargetPolicyInfo"
        description: "notificationTargetPolicyInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/notificationTargetPolicyInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_notificationTargetPolicy"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific notificationTargetPolicyInfo\
        \ resource. "
      operationId: "notificationTargetPolicyPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "notificationTargetPolicyInfo"
        description: "notificationTargetPolicyInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/notificationTargetPolicyInfo"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_notificationTargetPolicy"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific notificationTargetPolicyInfo\
        \ resource. "
      operationId: "notificationTargetPolicyDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of notificationTargetPolicy\
        \ resources"
      operationId: "notificationTargetPolicyGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the notificationTargetPolicy\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_notificationTargetPolicy"
      x-swagger-router-controller: "Default"
  /policyDeletionRules:
    post:
      description: "This method is used to create a policyDeletionRules resource."
      operationId: "policyDeletionRulesPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "policyDeletionRulesInfo"
        description: "policyDeletionRulesInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/policyDeletionRulesInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_policyDeletionRules"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific policyDeletionRulesInfo\
        \ resource. "
      operationId: "policyDeletionRulesPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "policyDeletionRulesInfo"
        description: "policyDeletionRulesInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/policyDeletionRulesInfo"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_policyDeletionRules"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific policyDeletionRulesInfo\
        \ resource. "
      operationId: "policyDeletionRulesDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of policyDeletionRules\
        \ resources"
      operationId: "policyDeletionRulesGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the policyDeletionRules\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_policyDeletionRules"
      x-swagger-router-controller: "Default"
  /flexContainer:
    post:
      description: "This method is used to create a flexContainer resource."
      operationId: "flexContainerPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "flexContainerInfo"
        description: "flexContainerInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/flexContainerInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_flexContainer"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific flexContainerInfo\
        \ resource. "
      operationId: "flexContainerPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "flexContainerInfo"
        description: "flexContainerInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/flexContainerInfo"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_flexContainer"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific flexContainerInfo\
        \ resource. "
      operationId: "flexContainerDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of flexContainer\
        \ resources"
      operationId: "flexContainerGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the flexContainer\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_flexContainer"
      x-swagger-router-controller: "Default"
  /timeSeries:
    post:
      description: "This method is used to create a timeSeries resource."
      operationId: "timeSeriesPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "timeSeriesInfo"
        description: "timeSeriesInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/timeSeriesInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_timeSeries"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific timeSeriesInfo\
        \ resource. "
      operationId: "timeSeriesPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "timeSeriesInfo"
        description: "timeSeriesInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/timeSeriesInfo"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_timeSeries"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific timeSeriesInfo\
        \ resource. "
      operationId: "timeSeriesDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of timeSeries\
        \ resources"
      operationId: "timeSeriesGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the timeSeries\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_timeSeries"
      x-swagger-router-controller: "Default"
  /timeSeriesInstance:
    post:
      description: "This method is used to create a timeSeriesInstance resource."
      operationId: "timeSeriesInstancePOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "timeSeriesInstanceInfo"
        description: "timeSeriesInstanceInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/timeSeriesInstanceInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_timeSeriesInstance"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific timeSeriesInstanceInfo\
        \ resource. "
      operationId: "timeSeriesInstanceDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of timeSeriesInstance\
        \ resources"
      operationId: "timeSeriesInstanceGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the timeSeriesInstance\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_timeSeriesInstance"
      x-swagger-router-controller: "Default"
  /role:
    post:
      description: "This method is used to create a role resource."
      operationId: "rolePOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "roleInfo"
        description: "roleInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/roleInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_role"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific roleInfo\
        \ resource. "
      operationId: "rolePUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "roleInfo"
        description: "roleInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/roleInfo"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_role"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific roleInfo\
        \ resource. "
      operationId: "roleDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of role\
        \ resources"
      operationId: "roleGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the role\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_role"
      x-swagger-router-controller: "Default"
  /token:
    post:
      description: "This method is used to create a token resource."
      operationId: "tokenPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "tokenInfo"
        description: "tokenInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/tokenInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_token"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific tokenInfo\
        \ resource. "
      operationId: "tokenPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "tokenInfo"
        description: "tokenInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/tokenInfo"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_token"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific tokenInfo\
        \ resource. "
      operationId: "tokenDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of token\
        \ resources"
      operationId: "tokenGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the token\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_token"
      x-swagger-router-controller: "Default"
  /dynamicAuthorizationConsultation:
    post:
      description: "This method is used to create a dynamicAuthorizationConsultation resource."
      operationId: "dynamicAuthorizationConsultationPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "dynamicAuthorizationConsultationInfo"
        description: "dynamicAuthorizationConsultationInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/dynamicAuthorizationConsultationInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_dynamicAuthorizationConsultation"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific dynamicAuthorizationConsultationInfo\
        \ resource. "
      operationId: "dynamicAuthorizationConsultationPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "dynamicAuthorizationConsultationInfo"
        description: "dynamicAuthorizationConsultationInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/dynamicAuthorizationConsultationInfo"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_dynamicAuthorizationConsultation"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific dynamicAuthorizationConsultationInfo\
        \ resource. "
      operationId: "dynamicAuthorizationConsultationDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of dynamicAuthorizationConsultation\
        \ resources"
      operationId: "dynamicAuthorizationConsultationGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the dynamicAuthorizationConsultation\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_dynamicAuthorizationConsultation"
      x-swagger-router-controller: "Default"
  /schedule:
    post:
      description: "This method is used to create a schedule resource."
      operationId: "schedulePOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "scheduleInfo"
        description: "scheduleInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/scheduleInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_schedule"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific scheduleInfo\
        \ resource. "
      operationId: "schedulePUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "scheduleInfo"
        description: "scheduleInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/scheduleInfo"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_schedule"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific scheduleInfo\
        \ resource. "
      operationId: "scheduleDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of schedule\
        \ resources"
      operationId: "scheduleGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the schedule\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_schedule"
      x-swagger-router-controller: "Default"
  /authorizationDecision:
    post:
      description: "This method is used to create a authorizationDecision resource."
      operationId: "authorizationDecisionPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "authorizationDecisionInfo"
        description: "authorizationDecisionInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/authorizationDecisionInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_authorizationDecision"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific authorizationDecisionInfo\
        \ resource. "
      operationId: "authorizationDecisionPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "authorizationDecisionInfo"
        description: "authorizationDecisionInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/authorizationDecisionInfo"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_authorizationDecision"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific authorizationDecisionInfo\
        \ resource. "
      operationId: "authorizationDecisionDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of authorizationDecision\
        \ resources"
      operationId: "authorizationDecisionGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the authorizationDecision\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_authorizationDecision"
      x-swagger-router-controller: "Default"
  /authorizationPolicy:
    post:
      description: "This method is used to create a authorizationPolicy resource."
      operationId: "authorizationPolicyPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "authorizationPolicyInfo"
        description: "authorizationPolicyInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/authorizationPolicyInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_authorizationPolicy"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific authorizationPolicyInfo\
        \ resource. "
      operationId: "authorizationPolicyPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "authorizationPolicyInfo"
        description: "authorizationPolicyInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/authorizationPolicyInfo"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_authorizationPolicy"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific authorizationPolicyInfo\
        \ resource. "
      operationId: "authorizationPolicyDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of authorizationPolicy\
        \ resources"
      operationId: "authorizationPolicyGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the authorizationPolicy\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_authorizationPolicy"
      x-swagger-router-controller: "Default"
  /authorizationInformation:
    post:
      description: "This method is used to create a authorizationInformation resource."
      operationId: "authorizationInformationPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "authorizationInformationInfo"
        description: "authorizationInformationInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/authorizationInformationInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_authorizationInformation"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific authorizationInformationInfo\
        \ resource. "
      operationId: "authorizationInformationPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "authorizationInformationInfo"
        description: "authorizationInformationInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/authorizationInformationInfo"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_authorizationInformation"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific authorizationInformationInfo\
        \ resource. "
      operationId: "authorizationInformationDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of authorizationInformation\
        \ resources"
      operationId: "authorizationInformationGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the authorizationInformation\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_authorizationInformation"
      x-swagger-router-controller: "Default"
  /localMulticastGroup:
    post:
      description: "This method is used to create a localMulticastGroup resource."
      operationId: "localMulticastGroupPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "localMulticastGroupInfo"
        description: "localMulticastGroupInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/localMulticastGroupInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_localMulticastGroup"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific localMulticastGroupInfo\
        \ resource. "
      operationId: "localMulticastGroupPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "localMulticastGroupInfo"
        description: "localMulticastGroupInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/localMulticastGroupInfo"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_localMulticastGroup"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific localMulticastGroupInfo\
        \ resource. "
      operationId: "localMulticastGroupDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of localMulticastGroup\
        \ resources"
      operationId: "localMulticastGroupGET"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the localMulticastGroup\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_localMulticastGroup"
      x-swagger-router-controller: "Default"
  /crossResourceSubscription:
    post:
      description: "This method is used to create a crossResourceSubscription resource."
      operationId: "crossResourceSubscriptionPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "crossResourceSubscriptionInfo"
        description: "crossResourceSubscriptionInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/crossResourceSubscriptionInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_crossResourceSubscription"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific crossResourceSubscriptionInfo\
        \ resource. "
      operationId: "crossResourceSubscriptionPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "crossResourceSubscriptionInfo"
        description: "crossResourceSubscriptionInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/crossResourceSubscriptionInfo"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_crossResourceSubscription"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific crossResourceSubscriptionInfo\
        \ resource. "
      operationId: "crossResourceSubscriptionDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of crossResourceSubscription\
        \ resources"
      operationId: "crossResourceSubscriptionGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the crossResourceSubscription\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_crossResourceSubscription"
      x-swagger-router-controller: "Default"
  /triggerRequest:
    post:
      description: "This method is used to create a triggerRequest resource."
      operationId: "triggerRequestPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "triggerRequestInfo"
        description: "triggerRequestInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/triggerRequestInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_triggerRequest"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific triggerRequestInfo\
        \ resource. "
      operationId: "triggerRequestPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "triggerRequestInfo"
        description: "triggerRequestInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/triggerRequestInfo"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_triggerRequest"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific triggerRequestInfo\
        \ resource. "
      operationId: "triggerRequestDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of triggerRequest\
        \ resources"
      operationId: "triggerRequestGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the triggerRequest\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_triggerRequest"
      x-swagger-router-controller: "Default"
  /transactionMgmt:
    post:
      description: "This method is used to create a transactionMgmt resource."
      operationId: "transactionMgmtPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "transactionMgmtInfo"
        description: "transactionMgmtInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/transactionMgmtInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_transactionMgmt"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific transactionMgmtInfo\
        \ resource. "
      operationId: "transactionMgmtPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "transactionMgmtInfo"
        description: "transactionMgmtInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/transactionMgmtInfo"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_transactionMgmt"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific transactionMgmtInfo\
        \ resource. "
      operationId: "transactionMgmtDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of transactionMgmt\
        \ resources"
      operationId: "transactionMgmtGET"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the transactionMgmt\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_transactionMgmt"
      x-swagger-router-controller: "Default"
  /transaction:
    post:
      description: "This method is used to create a transaction resource."
      operationId: "transactionPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "transactionInfo"
        description: "transactionInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/transactionInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_transaction"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific transactionInfo\
        \ resource. "
      operationId: "transactionPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "transactionInfo"
        description: "transactionInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/transactionInfo"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_transaction"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific transactionInfo\
        \ resource. "
      operationId: "transactionDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of transaction\
        \ resources"
      operationId: "transactionGET"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the transaction\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_transaction"
      x-swagger-router-controller: "Default"
  /multimediaSession:
    post:
      description: "This method is used to create a multimediaSession resource."
      operationId: "multimediaSessionPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "multimediaSessionInfo"
        description: "multimediaSessionInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/multimediaSessionInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_multimediaSession"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific multimediaSessionInfo\
        \ resource. "
      operationId: "multimediaSessionPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "multimediaSessionInfo"
        description: "multimediaSessionInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/multimediaSessionInfo"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_multimediaSession"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific multimediaSessionInfo\
        \ resource. "
      operationId: "multimediaSessionDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of multimediaSession\
        \ resources"
      operationId: "multimediaSessionGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the multimediaSession\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_multimediaSession"
      x-swagger-router-controller: "Default"
  /backgroundDataTransfer:
    post:
      description: "This method is used to create a backgroundDataTransfer resource."
      operationId: "backgroundDataTransferPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "backgroundDataTransferInfo"
        description: "backgroundDataTransferInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/backgroundDataTransferInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_backgroundDataTransfer"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific backgroundDataTransferInfo\
        \ resource. "
      operationId: "backgroundDataTransferPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "backgroundDataTransferInfo"
        description: "backgroundDataTransferInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/backgroundDataTransferInfo"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_backgroundDataTransfer"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific backgroundDataTransferInfo\
        \ resource. "
      operationId: "backgroundDataTransferDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of backgroundDataTransfer\
        \ resources"
      operationId: "backgroundDataTransferGET"
      produces:
      - "application/json"
      parameters:
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DesiredIdentifierResultType"
        in: "query"
        required: false
        type: "string"
      - name: "TokenRequestIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "Tokens"
        in: "query"
        required: false
        type: "string"
      - name: "TokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "RoleIDs"
        in: "query"
        required: false
        type: "string"
      - name: "LocalTokenIDs"
        in: "query"
        required: false
        type: "string"
      - name: "ReleaseVersionIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "VendorInformation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestTargetMembers"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignatureIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationSignature"
        in: "query"
        required: false
        type: "string"
      - name: "AuthorizationRelationshipIndicator"
        in: "query"
        required: false
        type: "string"
      - name: "SemanticQueryIndicator"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the backgroundDataTransfer\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_backgroundDataTransfer"
      x-swagger-router-controller: "Default"
definitions:
  inline_response_200_backgroundDataTransfer:
    properties:
      backgroundDataTransferInfo:
        $ref: "#/definitions/backgroundDataTransferInfo"
    example:
      backgroundDataTransferInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  backgroundDataTransferInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/backgroundDataTransfercontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of schedule resource"
    example:
      backgroundDataTransferInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""
          dynamicAuthorizationConsultationIDs: ""
          accessControlPolicyIDs: ""
          networkCoordinated: ""
          announceTo: ""
          announcedAttribute: ""
          scheduleElement: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  backgroundDataTransfercontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
      networkCoordinated:
        $ref: "#/definitions/networkCoordinated"
      announceTo:
        $ref: "#/definitions/announceTo"
      announcedAttribute:
        $ref: "#/definitions/announcedAttribute"
      scheduleElement:
        $ref: "#/definitions/scheduleElement"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
      dynamicAuthorizationConsultationIDs: ""
      accessControlPolicyIDs: ""
      networkCoordinated: ""
      announceTo: ""
      announcedAttribute: ""
      scheduleElement: ""
  inline_response_200_multimediaSession:
    properties:
      multimediaSessionInfo:
        $ref: "#/definitions/multimediaSessionInfo"
    example:
      multimediaSessionInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  multimediaSessionInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/multimediaSessioncontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of schedule resource"
    example:
      multimediaSessionInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  inline_response_200_transaction:
    properties:
      transactionInfo:
        $ref: "#/definitions/transactionInfo"
    example:
      transactionInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  transactionInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/transactioncontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of schedule resource"
    example:
      transactionInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""
          dynamicAuthorizationConsultationIDs: ""
          accessControlPolicyIDs: ""
          creator: ""
          transactionID: ""
          transactionControl: ""
          transactionState: ""
          transactionLockTime: ""
          transactionExecuteTime: ""
          transactionCommitTime: ""
          transactionLockType: ""
          requestPrimitive: ""
          responsePrimitive: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  transactioncontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
      creator:
        $ref: "#/definitions/creator"
      transactionID:
        $ref: "#/definitions/transactionID"
      transactionControl:
        $ref: "#/definitions/transactionControl"
      transactionState:
        $ref: "#/definitions/transactionState"
      transactionLockTime:
        $ref: "#/definitions/transactionLockTime"
      transactionExecuteTime:
        $ref: "#/definitions/transactionExecuteTime"
      transactionCommitTime:
        $ref: "#/definitions/transactionCommitTime"
      transactionLockType:
        $ref: "#/definitions/transactionLockType"
      requestPrimitive:
        $ref: "#/definitions/requestPrimitive"
      responsePrimitive:
        $ref: "#/definitions/responsePrimitive"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
      dynamicAuthorizationConsultationIDs: ""
      accessControlPolicyIDs: ""
      creator: ""
      transactionControl: ""
      transactionState: ""
      transactionLockTime: ""
      transactionExecuteTime: ""
      transactionCommitTime: ""
      transactionLockType: ""
      requestPrimitive: ""
      responsePrimitive: ""
  inline_response_200_transactionMgmt:
    properties:
      transactionMgmtInfo:
        $ref: "#/definitions/transactionMgmtInfo"
    example:
      transactionMgmtInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  transactionMgmtInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/transactionMgmtcontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of schedule resource"
    example:
      transactionMgmtInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""
          dynamicAuthorizationConsultationIDs: ""
          accessControlPolicyIDs: ""
          creator: ""
          transactionID: ""
          transactionControl: ""
          transactionState: ""
          transactionLockTime: ""
          transactionExecuteTime: ""
          transactionCommitTime: ""
          transactionLockType: ""
          requestPrimitive: ""
          responsePrimitive: ""
          transactionExpirationTime: ""
          transactionMode: ""
          transactionMaxRetries: ""
          transactionMgmtHandling: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  transactionMgmtcontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
      creator:
        $ref: "#/definitions/creator"
      transactionID:
        $ref: "#/definitions/transactionID"
      transactionControl:
        $ref: "#/definitions/transactionControl"
      transactionState:
        $ref: "#/definitions/transactionState"
      transactionLockTime:
        $ref: "#/definitions/transactionLockTime"
      transactionExecuteTime:
        $ref: "#/definitions/transactionExecuteTime"
      transactionCommitTime:
        $ref: "#/definitions/transactionCommitTime"
      transactionLockType:
        $ref: "#/definitions/transactionLockType"
      requestPrimitive:
        $ref: "#/definitions/requestPrimitive"
      responsePrimitive:
        $ref: "#/definitions/responsePrimitive"
      transactionExpirationTime:
        $ref: "#/definitions/transactionExpirationTime"
      transactionMode:
        $ref: "#/definitions/transactionMode"
      transactionMaxRetries:
        $ref: "#/definitions/transactionMaxRetries"
      transactionMgmtHandling:
        $ref: "#/definitions/transactionMgmtHandling"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
      dynamicAuthorizationConsultationIDs: ""
      accessControlPolicyIDs: ""
      creator: ""
      transactionID: ""
      transactionControl: ""
      transactionState: ""
      transactionLockTime: ""
      transactionExecuteTime: ""
      transactionCommitTime: ""
      transactionLockType: ""
      requestPrimitive: ""
      responsePrimitive: ""
      transactionExpirationTime: ""
      transactionMode: ""
      transactionMaxRetries: ""
      transactionMgmtHandling: ""
  inline_response_200_triggerRequest:
    properties:
      triggerRequestInfo:
        $ref: "#/definitions/triggerRequestInfo"
    example:
      triggerRequestInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  triggerRequestInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/triggerRequestcontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of schedule resource"
    example:
      triggerRequestInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""
          dynamicAuthorizationConsultationIDs: ""
          accessControlPolicyIDs: ""
          M2M-Ext-ID: ""
          Trigger-Recipient-ID: ""
          triggerPurpose: ""
          triggerStatus: ""
          triggerValidityTime: ""
          triggerInfoAE-ID: ""
          triggerInfoAddress: ""
          triggerInfoOperation: ""
          targetedResourceType: ""
          triggerReference: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  triggerRequestcontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
      M2M-Ext-ID:
        $ref: "#/definitions/M2M-Ext-ID"
      trigger-Recipient-ID:
        $ref: "#/definitions/trigger-Recipient-ID"
      triggerPurpose:
        $ref: "#/definitions/triggerPurpose"
      triggerStatus:
        $ref: "#/definitions/triggerStatus"
      triggerValidityTime:
        $ref: "#/definitions/triggerValidityTime"
      triggerInfoAE-ID:
        $ref: "#/definitions/triggerInfoAE-ID"
      triggerInfoAddress:
        $ref: "#/definitions/triggerInfoAddress"
      triggerInfoOperation:
        $ref: "#/definitions/triggerInfoOperation"
      targetedResourceType:
        $ref: "#/definitions/targetedResourceType"
      triggerReference:
        $ref: "#/definitions/triggerReference"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
      dynamicAuthorizationConsultationIDs: ""
      accessControlPolicyIDs: ""
      M2M-Ext-ID: ""
      Trigger-Recipient-ID: ""
      triggerPurpose: ""
      triggerStatus: ""
      triggerValidityTime: ""
      triggerInfoAE-ID: ""
      triggerInfoAddress: ""
      triggerInfoOperation: ""
      targetedResourceType: ""
      triggerReference: ""
  inline_response_200_crossResourceSubscription:
    properties:
      crossResourceSubscriptionInfo:
        $ref: "#/definitions/crossResourceSubscriptionInfo"
    example:
      crossResourceSubscriptionInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  crossResourceSubscriptionInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/crossResourceSubscriptioncontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of schedule resource"
    example:
      crossResourceSubscriptionInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""
          dynamicAuthorizationConsultationIDs: ""
          accessControlPolicyIDs: ""
          announceTo: ""
          announcedAttribute: ""
          creator: ""
          expirationCounter: ""
          notificationURI: ""
          notificationEventCat: ""
          subscriberURI: ""
          regularResourcesAsTarget: ""
          subscriptionResourcesAsTarget: ""
          timeWindowType: ""
          timeWindowSize: ""
          eventNotificationCriteriaSet: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  crossResourceSubscriptioncontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
      announceTo:
        $ref: "#/definitions/announceTo"
      announcedAttribute:
        $ref: "#/definitions/announcedAttribute"
      creator:
        $ref: "#/definitions/creator"
      expirationCounter:
        $ref: "#/definitions/expirationCounter"
      notificationURI:
        $ref: "#/definitions/notificationURI"
      notificationEventCat:
        $ref: "#/definitions/notificationEventCat"
      subscriberURI:
        $ref: "#/definitions/subscriberURI"
      regularResourcesAsTarget:
        $ref: "#/definitions/regularResourcesAsTarget"
      subscriptionResourcesAsTarget:
        $ref: "#/definitions/subscriptionResourcesAsTarget"
      timeWindowType:
        $ref: "#/definitions/timeWindowType"
      timeWindowSize:
        $ref: "#/definitions/timeWindowSize"
      eventNotificationCriteriaSet:
        $ref: "#/definitions/eventNotificationCriteriaSet"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
      dynamicAuthorizationConsultationIDs: ""
      accessControlPolicyIDs: ""
      announceTo: ""
      announcedAttribute: ""
      creator: ""
      expirationCounter: ""
      notificationURI: ""
      notificationEventCat: ""
      subscriberURI: ""
      regularResourcesAsTarget: ""
      subscriptionResourcesAsTarget: ""
      timeWindowType: ""
      timeWindowSize: ""
      eventNotificationCriteriaSet: ""
  inline_response_200_localMulticastGroup:
    properties:
      localMulticastGroupInfo:
        $ref: "#/definitions/localMulticastGroupInfo"
    example:
      localMulticastGroupInfo:
        FromId: ""
        ToAddress: ""
        resourceType: ""
        resourceID: ""
        resourceName: ""
        parentID: ""
        creationTime: ""
        lastModifiedTime: ""
        expirationTime: ""
        accessControlPolicyIDs: ""
        labels: ""
        dynamicAuthorizationConsultationIDs: ""
        announceTo: ""
        announcedAttribute: ""
        externalGroupID: ""
        multicastAddress: ""
        multicastGroupFanoutTarget: ""
        memberList: ""
        responseTarget: ""
        responseTimeWindow: ""
        TMGI: ""
  localMulticastGroupInfo:
    type: "object"
    properties:
      FromId:
        $ref: "#/definitions/FromId"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      labels:
        $ref: "#/definitions/labels"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
      announceTo:
        $ref: "#/definitions/announceTo"
      announcedAttribute:
        $ref: "#/definitions/announcedAttribute"
      externalGroupID:
        $ref: "#/definitions/externalGroupID"
      multicastAddress:
        $ref: "#/definitions/multicastAddress"
      multicastGroupFanoutTarget:
        $ref: "#/definitions/multicastGroupFanoutTarget"
      memberList:
        $ref: "#/definitions/memberList"
      responseTarget:
        $ref: "#/definitions/responseTarget"
      responseTimeWindow:
        $ref: "#/definitions/responseTimeWindow"
      TMGI:
        $ref: "#/definitions/TMGI"
    description: "information of statsCollect resource"
    example:
      localMulticastGroupInfo:
        FromId: ""
        ToAddress: ""
        resourceType: ""
        resourceID: ""
        resourceName: ""
        parentID: ""
        creationTime: ""
        lastModifiedTime: ""
        expirationTime: ""
        accessControlPolicyIDs: ""
        labels: ""
        dynamicAuthorizationConsultationIDs: ""
        announceTo: ""
        announcedAttribute: ""
        externalGroupID: ""
        multicastAddress: ""
        multicastGroupFanoutTarget: ""
        memberList: ""
        responseTarget: ""
        responseTimeWindow: ""
        TMGI: ""
  inline_response_200_authorizationInformation:
    properties:
      authorizationInformationInfo:
        $ref: "#/definitions/authorizationInformationInfo"
    example:
      authorizationInformationInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  authorizationInformationInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/authorizationInformationcontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of schedule resource"
    example:
      authorizationInformationInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""
          dynamicAuthorizationConsultationIDs: ""
          accessControlPolicyIDs: ""
          status: ""
          from: ""
          roleIDs: ""
          tokenIDs: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  authorizationInformationcontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
      status:
        $ref: "#/definitions/status"
      from:
        $ref: "#/definitions/from"
      roleIDs:
        $ref: "#/definitions/RoleIDs"
      tokenIDs:
        $ref: "#/definitions/TokenIDs"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
      dynamicAuthorizationConsultationIDs: ""
      accessControlPolicyIDs: ""
      status: ""
      from: ""
      roleIDs: ""
      tokenIDs: ""
  inline_response_200_authorizationPolicy:
    properties:
      authorizationPolicyInfo:
        $ref: "#/definitions/authorizationPolicyInfo"
    example:
      authorizationPolicyInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  authorizationPolicyInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/authorizationPolicycontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of schedule resource"
    example:
      authorizationPolicyInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""
          dynamicAuthorizationConsultationIDs: ""
          accessControlPolicyIDs: ""
          status: ""
          to: ""
          policies: ""
          combiningAlgorithm: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  authorizationPolicycontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
      status:
        $ref: "#/definitions/status"
      to:
        $ref: "#/definitions/to"
      policies:
        $ref: "#/definitions/policies"
      combiningAlgorithm:
        $ref: "#/definitions/combiningAlgorithm"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
      dynamicAuthorizationConsultationIDs: ""
      accessControlPolicyIDs: ""
      status: ""
      to: ""
      policies: ""
      combiningAlgorithm: ""
  inline_response_200_authorizationDecision:
    properties:
      authorizationDecisionInfo:
        $ref: "#/definitions/authorizationDecisionInfo"
    example:
      authorizationDecisionInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  authorizationDecisionInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/authorizationDecisioncontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of schedule resource"
    example:
      authorizationDecisionInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""
          dynamicAuthorizationConsultationIDs: ""
          accessControlPolicyIDs: ""
          decision: ""
          status: ""
          to: ""
          from: ""
          operation: ""
          requestedResourceType: ""
          filterUsage: ""
          roleIDs: ""
          tokenIDs: ""
          tokens: ""
          requestTime: ""
          originatorLocation: ""
          originatorIP: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  authorizationDecisioncontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      decision:
        $ref: "#/definitions/decision"
      status:
        $ref: "#/definitions/status"
      to:
        $ref: "#/definitions/to"
      from:
        $ref: "#/definitions/from"
      operation:
        $ref: "#/definitions/operation"
      requestedResourceType:
        $ref: "#/definitions/requestedResourceType"
      filterUsage:
        $ref: "#/definitions/filterUsage"
      roleIDs:
        $ref: "#/definitions/RoleIDs"
      tokenIDs:
        $ref: "#/definitions/TokenIDs"
      tokens:
        $ref: "#/definitions/Tokens"
      requestTime:
        $ref: "#/definitions/requestTime"
      originatorLocation:
        $ref: "#/definitions/originatorLocation"
      originatorIP:
        $ref: "#/definitions/originatorIP"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
      dynamicAuthorizationConsultationIDs: ""
      accessControlPolicyIDs: ""
      decision: ""
      status: ""
      to: ""
      from: ""
      operation: ""
      requestedResourceType: ""
      filterUsage: ""
      roleIDs: ""
      tokenIDs: ""
      tokens: ""
      requestTime: ""
      originatorLocation: ""
      originatorIP: ""
  inline_response_200_schedule:
    properties:
      scheduleInfo:
        $ref: "#/definitions/scheduleInfo"
    example:
      scheduleInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  scheduleInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/schedulecontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of schedule resource"
    example:
      scheduleInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""
          announceTo: ""
          announcedAttribute: ""
          scheduleElement: ""
          networkCoordinated: ""
          accessControlPolicyIDs: ""
          dynamicAuthorizationConsultationIDs: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  schedulecontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      announceTo:
        $ref: "#/definitions/announceTo"
      announcedAttribute:
        $ref: "#/definitions/announcedAttribute"
      scheduleElement:
        $ref: "#/definitions/scheduleElement"
      networkCoordinated:
        $ref: "#/definitions/networkCoordinated"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
      announceTo: ""
      announcedAttribute: ""
      scheduleElement: ""
      networkCoordinated: ""
      accessControlPolicyIDs: ""
      dynamicAuthorizationConsultationIDs: ""
  inline_response_200_dynamicAuthorizationConsultation:
    properties:
      dynamicAuthorizationConsultationInfo:
        $ref: "#/definitions/dynamicAuthorizationConsultationInfo"
    example:
      dynamicAuthorizationConsultationInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  dynamicAuthorizationConsultationInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/dynamicAuthorizationConsultationcontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of dynamicAuthorizationConsultationInfo resource"
    example:
      dynamicAuthorizationConsultationInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  inline_response_200_token:
    properties:
      tokenInfo:
        $ref: "#/definitions/tokenInfo"
    example:
      tokenInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  tokenInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/tokencontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of role resource"
    example:
      tokenInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          creationTime: ""
          lastModifiedTime: ""
          accessControlPolicyIDs: ""
          labels: ""
          dynamicAuthorizationConsultationIDs: ""
          issuer: ""
          holder: ""
          notBefore: ""
          notAfter: ""
          tokenID : ""
          tokenObject: ""
          version: ""
          audience: ""
          tokenName: ""
          permissions: ""
          extension: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  tokencontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      creationTime:
        $ref: "#/definitions/creationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
      issuer:
        $ref: "#/definitions/issuer"
      holder:
        $ref: "#/definitions/holder"
      notBefore:
        $ref: "#/definitions/notBefore"
      notAfter:
        $ref: "#/definitions/notAfter"
      tokenID:
        $ref: "#/definitions/tokenID"
      tokenObject:
        $ref: "#/definitions/tokenObject"
      version:
        $ref: "#/definitions/version"
      audience:
        $ref: "#/definitions/audience"
      tokenName:
        $ref: "#/definitions/tokenName"
      permissions:
        $ref: "#/definitions/permissions"
      extension:
        $ref: "#/definitions/extension"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      creationTime: ""
      accessControlPolicyIDs: ""
      lastModifiedTime: ""
      labels: ""
      dynamicAuthorizationConsultationIDs: ""
      issuer: ""
      holder: ""
      notBefore: ""
      notAfter: ""
      tokenID: ""
      tokenObject: ""
      version: ""
      audience: ""
      tokenName: ""
      permissions: ""
      extension: ""
  inline_response_200_role:
    properties:
      roleInfo:
        $ref: "#/definitions/roleInfo"
    example:
      roleInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  roleInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/rolecontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of role resource"
    example:
      roleInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          creationTime: ""
          lastModifiedTime: ""
          accessControlPolicyIDs: ""
          labels: ""
          dynamicAuthorizationConsultationIDs: ""
          roleID: ""
          issuer: ""
          holder: ""
          notBefore: ""
          notAfter: ""
          roleName: ""
          tokenLink: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  rolecontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      creationTime:
        $ref: "#/definitions/creationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
      roleID:
        $ref: "#/definitions/roleID"
      issuer:
        $ref: "#/definitions/issuer"
      holder:
        $ref: "#/definitions/holder"
      notBefore:
        $ref: "#/definitions/notBefore"
      notAfter:
        $ref: "#/definitions/notAfter"
      roleName:
        $ref: "#/definitions/roleName"
      tokenLink:
        $ref: "#/definitions/tokenLink"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      creationTime: ""
      accessControlPolicyIDs: ""
      lastModifiedTime: ""
      labels: ""
      dynamicAuthorizationConsultationIDs: ""
      roleID: ""
      issuer: ""
      holder: ""
      notBefore: ""
      notAfter: ""
      roleName: ""
      tokenLink: ""
  inline_response_200_timeSeriesInstance:
    properties:
      timeSeriesInstanceInfo:
        $ref: "#/definitions/timeSeriesInstanceInfo"
    example:
      timeSeriesInstanceInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  timeSeriesInstanceInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/timeSeriesInstancecontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of timeSeriesInfo resource"
    example:
      timeSeriesInstanceInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""
          announceTo: ""
          announcedAttribute: ""
          dataGenerationTime: ""
          content: ""
          contentSize: ""
          sequenceNr: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  timeSeriesInstancecontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      announceTo:
        $ref: "#/definitions/announceTo"
      announcedAttribute:
        $ref: "#/definitions/announcedAttribute"
      dataGenerationTime:
        $ref: "#/definitions/dataGenerationTime"
      content:
        $ref: "#/definitions/content"
      contentSize:
        $ref: "#/definitions/contentSize"
      sequenceNr:
        $ref: "#/definitions/sequenceNr"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
      announceTo: ""
      announcedAttribute: ""
      dataGenerationTime: ""
      content: ""
      contentSize: ""
      sequenceNr: ""
  inline_response_200_timeSeries:
    properties:
      timeSeriesInfo:
        $ref: "#/definitions/timeSeriesInfo"
    example:
      timeSeriesInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  timeSeriesInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/timeSeriescontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of timeSeriesInfo resource"
    example:
      timeSeriesInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          creationTime: ""
          lastModifiedTime: ""
          accessControlPolicyIDs: ""
          labels: ""
          dynamicAuthorizationConsultationIDs: ""
          announceTo: ""
          announcedAttribute: ""
          creator: ""
          maxNrOfInstances: ""
          maxByteSize: ""
          maxInstanceAge: ""
          currentNrOfInstances: ""
          currentByteSize: ""
          ontologyRef: ""
          missingDataDetectTimer: ""
          periodicInterval: ""
          missingDataDetect: ""
          missingDataMaxNr: ""
          missingDataList: ""
          missingDataCurrentNr: ""
          contentInfo: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  timeSeriescontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      creationTime:
        $ref: "#/definitions/creationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
      announceTo:
        $ref: "#/definitions/announceTo"
      announcedAttribute:
        $ref: "#/definitions/announcedAttribute"
      creator:
        $ref: "#/definitions/creator"
      maxNrOfInstances:
        $ref: "#/definitions/maxNrOfInstances"
      maxByteSize:
        $ref: "#/definitions/maxByteSize"
      maxInstanceAge:
        $ref: "#/definitions/maxInstanceAge"
      currentNrOfInstances:
        $ref: "#/definitions/currentNrOfInstances"
      currentByteSize:
        $ref: "#/definitions/currentByteSize"
      ontologyRef:
        $ref: "#/definitions/ontologyRef"
      missingDataDetectTimer:
        $ref: "#/definitions/missingDataDetectTimer"
      periodicInterval:
        $ref: "#/definitions/periodicInterval"
      missingDataDetect:
        $ref: "#/definitions/missingDataDetect"
      missingDataMaxNr:
        $ref: "#/definitions/missingDataMaxNr"
      missingDataList:
        $ref: "#/definitions/missingDataList"
      missingDataCurrentNr:
        $ref: "#/definitions/missingDataCurrentNr"
      contentInfo:
        $ref: "#/definitions/contentInfo"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      creationTime: ""
      accessControlPolicyIDs: ""
      lastModifiedTime: ""
      labels: ""
      dynamicAuthorizationConsultationIDs: ""
      announceTo: ""
      announcedAttribute: ""
      creator: ""
      maxNrOfInstances: ""
      maxByteSize: ""
      maxInstanceAge: ""
      currentNrOfInstances: ""
      currentByteSize: ""
      locationID: ""
      ontologyRef: ""
      disableRetrieval: ""
      missingDataDetectTimer: ""
      periodicInterval: ""
      missingDataDetect: ""
      missingDataMaxNr: ""
      missingDataList: ""
      missingDataCurrentNr: ""
      contentInfo: ""
  inline_response_200_flexContainer:
    properties:
      flexContainerInfo:
        $ref: "#/definitions/flexContainerInfo"
    example:
      flexContainerInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  flexContainerInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/flexContainercontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of policyDeletionRulesInfo resource"
    example:
      flexContainerInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          creationTime: ""
          lastModifiedTime: ""
          accessControlPolicyIDs: ""
          labels: ""
          dynamicAuthorizationConsultationIDs: ""
          stateTag: ""
          announceTo: ""
          announcedAttribute: ""
          creator: ""
          maxNrOfInstances: ""
          maxByteSize: ""
          maxInstanceAge: ""
          currentNrOfInstances: ""
          currentByteSize: ""
          locationID: ""
          ontologyRef: ""
          disableRetrieval: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  flexContainercontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      creationTime:
        $ref: "#/definitions/creationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
      stateTag:
        $ref: "#/definitions/stateTag"
      announceTo:
        $ref: "#/definitions/announceTo"
      announcedAttribute:
        $ref: "#/definitions/announcedAttribute"
      creator:
        $ref: "#/definitions/creator"
      maxNrOfInstances:
        $ref: "#/definitions/maxNrOfInstances"
      maxByteSize:
        $ref: "#/definitions/maxByteSize"
      maxInstanceAge:
        $ref: "#/definitions/maxInstanceAge"
      currentNrOfInstances:
        $ref: "#/definitions/currentNrOfInstances"
      currentByteSize:
        $ref: "#/definitions/currentByteSize"
      locationID:
        $ref: "#/definitions/locationID"
      ontologyRef:
        $ref: "#/definitions/ontologyRef"
      disableRetrieval:
        $ref: "#/definitions/disableRetrieval"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      creationTime: ""
      accessControlPolicyIDs: ""
      lastModifiedTime: ""
      labels: ""
      dynamicAuthorizationConsultationIDs: ""
      stateTag: ""
      announceTo: ""
      announcedAttribute: ""
      creator: ""
      maxNrOfInstances: ""
      maxByteSize: ""
      maxInstanceAge: ""
      currentNrOfInstances: ""
      currentByteSize: ""
      locationID: ""
      ontologyRef: ""
      disableRetrieval: ""
  inline_response_200_policyDeletionRules:
    properties:
      policyDeletionRulesInfo:
        $ref: "#/definitions/policyDeletionRulesInfo"
    example:
      policyDeletionRulesInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  policyDeletionRulesInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/policyDeletionRulescontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of policyDeletionRulesInfo resource"
    example:
      policyDeletionRulesInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          creationTime: ""
          lastModifiedTime: ""
          accessControlPolicyIDs: ""
          labels: ""
          dynamicAuthorizationConsultationIDs: ""
          stateTag: ""
          announceTo: ""
          announcedAttribute: ""
          creator: ""
          maxNrOfInstances: ""
          maxByteSize: ""
          maxInstanceAge: ""
          currentNrOfInstances: ""
          currentByteSize: ""
          locationID: ""
          ontologyRef: ""
          disableRetrieval: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  policyDeletionRulescontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      creationTime:
        $ref: "#/definitions/creationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
      stateTag:
        $ref: "#/definitions/stateTag"
      announceTo:
        $ref: "#/definitions/announceTo"
      announcedAttribute:
        $ref: "#/definitions/announcedAttribute"
      creator:
        $ref: "#/definitions/creator"
      maxNrOfInstances:
        $ref: "#/definitions/maxNrOfInstances"
      maxByteSize:
        $ref: "#/definitions/maxByteSize"
      maxInstanceAge:
        $ref: "#/definitions/maxInstanceAge"
      currentNrOfInstances:
        $ref: "#/definitions/currentNrOfInstances"
      currentByteSize:
        $ref: "#/definitions/currentByteSize"
      locationID:
        $ref: "#/definitions/locationID"
      ontologyRef:
        $ref: "#/definitions/ontologyRef"
      disableRetrieval:
        $ref: "#/definitions/disableRetrieval"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      creationTime: ""
      accessControlPolicyIDs: ""
      lastModifiedTime: ""
      labels: ""
      dynamicAuthorizationConsultationIDs: ""
      stateTag: ""
      announceTo: ""
      announcedAttribute: ""
      creator: ""
      maxNrOfInstances: ""
      maxByteSize: ""
      maxInstanceAge: ""
      currentNrOfInstances: ""
      currentByteSize: ""
      locationID: ""
      ontologyRef: ""
      disableRetrieval: ""
  inline_response_200_notificationTargetPolicy:
    properties:
      notificationTargetPolicyInfo:
        $ref: "#/definitions/notificationTargetPolicyInfo"
    example:
      notificationTargetPolicyInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  notificationTargetPolicyInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/notificationTargetPolicycontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of notificationTargetPolicyInfo resource"
    example:
      notificationTargetPolicyInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          creationTime: ""
          lastModifiedTime: ""
          accessControlPolicyIDs: ""
          labels: ""
          dynamicAuthorizationConsultationIDs: ""
          stateTag: ""
          announceTo: ""
          announcedAttribute: ""
          creator: ""
          maxNrOfInstances: ""
          maxByteSize: ""
          maxInstanceAge: ""
          currentNrOfInstances: ""
          currentByteSize: ""
          locationID: ""
          ontologyRef: ""
          disableRetrieval: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  notificationTargetPolicycontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      creationTime:
        $ref: "#/definitions/creationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
      stateTag:
        $ref: "#/definitions/stateTag"
      announceTo:
        $ref: "#/definitions/announceTo"
      announcedAttribute:
        $ref: "#/definitions/announcedAttribute"
      creator:
        $ref: "#/definitions/creator"
      maxNrOfInstances:
        $ref: "#/definitions/maxNrOfInstances"
      maxByteSize:
        $ref: "#/definitions/maxByteSize"
      maxInstanceAge:
        $ref: "#/definitions/maxInstanceAge"
      currentNrOfInstances:
        $ref: "#/definitions/currentNrOfInstances"
      currentByteSize:
        $ref: "#/definitions/currentByteSize"
      locationID:
        $ref: "#/definitions/locationID"
      ontologyRef:
        $ref: "#/definitions/ontologyRef"
      disableRetrieval:
        $ref: "#/definitions/disableRetrieval"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      creationTime: ""
      accessControlPolicyIDs: ""
      lastModifiedTime: ""
      labels: ""
      dynamicAuthorizationConsultationIDs: ""
      stateTag: ""
      announceTo: ""
      announcedAttribute: ""
      creator: ""
      maxNrOfInstances: ""
      maxByteSize: ""
      maxInstanceAge: ""
      currentNrOfInstances: ""
      currentByteSize: ""
      locationID: ""
      ontologyRef: ""
      disableRetrieval: ""
  inline_response_200_notificationTargetMgmtPolicyRef:
    properties:
      notificationTargetMgmtPolicyRefInfo:
        $ref: "#/definitions/notificationTargetMgmtPolicyRefInfo"
    example:
      notificationTargetMgmtPolicyRefInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  notificationTargetMgmtPolicyRefInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/notificationTargetMgmtPolicyRefcontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of serviceSubscribedAppRule resource"
    example:
      notificationTargetMgmtPolicyRefInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          creationTime: ""
          lastModifiedTime: ""
          accessControlPolicyIDs: ""
          labels: ""
          dynamicAuthorizationConsultationIDs: ""
          stateTag: ""
          announceTo: ""
          announcedAttribute: ""
          creator: ""
          maxNrOfInstances: ""
          maxByteSize: ""
          maxInstanceAge: ""
          currentNrOfInstances: ""
          currentByteSize: ""
          locationID: ""
          ontologyRef: ""
          disableRetrieval: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  notificationTargetMgmtPolicyRefcontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      creationTime:
        $ref: "#/definitions/creationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
      stateTag:
        $ref: "#/definitions/stateTag"
      announceTo:
        $ref: "#/definitions/announceTo"
      announcedAttribute:
        $ref: "#/definitions/announcedAttribute"
      creator:
        $ref: "#/definitions/creator"
      maxNrOfInstances:
        $ref: "#/definitions/maxNrOfInstances"
      maxByteSize:
        $ref: "#/definitions/maxByteSize"
      maxInstanceAge:
        $ref: "#/definitions/maxInstanceAge"
      currentNrOfInstances:
        $ref: "#/definitions/currentNrOfInstances"
      currentByteSize:
        $ref: "#/definitions/currentByteSize"
      locationID:
        $ref: "#/definitions/locationID"
      ontologyRef:
        $ref: "#/definitions/ontologyRef"
      disableRetrieval:
        $ref: "#/definitions/disableRetrieval"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      creationTime: ""
      accessControlPolicyIDs: ""
      lastModifiedTime: ""
      labels: ""
      dynamicAuthorizationConsultationIDs: ""
      stateTag: ""
      announceTo: ""
      announcedAttribute: ""
      creator: ""
      maxNrOfInstances: ""
      maxByteSize: ""
      maxInstanceAge: ""
      currentNrOfInstances: ""
      currentByteSize: ""
      locationID: ""
      ontologyRef: ""
      disableRetrieval: ""
  inline_response_200_serviceSubscribedAppRule:
    properties:
      serviceSubscribedAppRuleInfo:
        $ref: "#/definitions/serviceSubscribedAppRuleInfo"
    example:
      serviceSubscribedAppRuleInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  serviceSubscribedAppRuleInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/serviceSubscribedAppRulecontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of serviceSubscribedAppRule resource"
    example:
      serviceSubscribedAppRuleInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          creationTime: ""
          lastModifiedTime: ""
          accessControlPolicyIDs: ""
          labels: ""
          applicableCredIDs: ""
          allowedApp-IDs: ""
          allowedAEs: ""
          dynamicAuthorizationConsultationIDs: ""
          allowedRole-IDs: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  serviceSubscribedAppRulecontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      creationTime:
        $ref: "#/definitions/creationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      applicableCredIDs:
        $ref: "#/definitions/applicableCredIDs"
      allowedApp-IDs:
        $ref: "#/definitions/allowedApp-IDs"
      allowedAEs:
        $ref: "#/definitions/allowedAEs"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
      allowedRole-IDs:
        $ref: "#/definitions/allowedRole-IDs"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      creationTime: ""
      accessControlPolicyIDs: ""
      lastModifiedTime: ""
      labels: ""
      applicableCredIDs: ""
      allowedApp-IDs: ""
      allowedAEs: ""
      dynamicAuthorizationConsultationIDs: ""
      allowedRole-IDs: ""
  inline_response_200_accessControlPolicy:
    properties:
      accessControlPolicyInfo:
        $ref: "#/definitions/accessControlPolicyInfo"
    example:
      accessControlPolicyInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  accessControlPolicyInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/accessControlPolicycontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of accessControlPolicy resource"
    example:
      accessControlPolicyInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  inline_response_200_request:
    properties:
      requestInfo:
        $ref: "#/definitions/requestInfo"
    example:
      requestInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  requestInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/requestcontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of request resource"
    example:
      requestInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  inline_response_200_contentInstance:
    properties:
      contentInstanceInfo:
        $ref: "#/definitions/contentInstanceInfo"
    example:
      contentInstanceInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  contentInstanceInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/contentInstancecontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of contentInstance resource"
    example:
      contentInstanceInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""
          announceTo: ""
          announcedAttribute: ""
          creator: ""
          contentInfo: ""
          contentSize: ""
          ontologyRef: ""
          stateTag: ""
          content: ""
          contentRef: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  contentInstancecontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      announceTo:
        $ref: "#/definitions/announceTo"
      announcedAttribute:
        $ref: "#/definitions/announcedAttribute"
      creator:
        $ref: "#/definitions/creator"
      contentInfo:
        $ref: "#/definitions/contentInfo"
      contentSize:
        $ref: "#/definitions/contentSize"
      ontologyRef:
        $ref: "#/definitions/ontologyRef"
      stateTag:
        $ref: "#/definitions/stateTag"
      content:
        $ref: "#/definitions/content"
      contentRef:
        $ref: "#/definitions/contentRef"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
      announceTo: ""
      announcedAttribute: ""
      creator: ""
      contentInfo: ""
      contentSize: ""
      ontologyRef: ""
      stateTag: ""
      content: ""
      contentRef: ""
  inline_response_200_serviceSubscribedNode:
    properties:
      serviceSubscribedNodeInfo:
        $ref: "#/definitions/serviceSubscribedNodeInfo"
    example:
      serviceSubscribedNodeInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  serviceSubscribedNodeInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/serviceSubscribedNodecontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of serviceSubscribedNode resource"
    example:
      serviceSubscribedNodeInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          accessControlPolicyIDs: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""
          nodeID: ""
          CSE-ID: ""
          deviceIdentifier: ""
          ruleLinks: ""
          dynamicAuthorizationConsultationIDs: ""
          niddRequired: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  serviceSubscribedNodecontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      nodeID:
        $ref: "#/definitions/nodeID"
      CSE-ID:
        $ref: "#/definitions/CSE-ID"
      deviceIdentifier:
        $ref: "#/definitions/deviceIdentifier"
      ruleLinks:
        $ref: "#/definitions/ruleLinks"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
      niddRequired:
        $ref: "#/definitions/niddRequired"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      accessControlPolicyIDs: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
      nodeID: ""
      CSE-ID: ""
      deviceIdentifier: ""
      ruleLinks: ""
      dynamicAuthorizationConsultationIDs: ""
      niddRequired: ""
  inline_response_200_m2mServiceSubscriptionProfile:
    properties:
      m2mServiceSubscriptionProfileInfo:
        $ref: "#/definitions/m2mServiceSubscriptionProfileInfo"
    example:
      m2mServiceSubscriptionProfileInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  m2mServiceSubscriptionProfileInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/m2mServiceSubscriptionProfilecontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of m2mServiceSubscriptionProfile resource"
    example:
      m2mServiceSubscriptionProfileInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          accessControlPolicyIDs: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""
          dynamicAuthorizationConsultationIDs: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  m2mServiceSubscriptionProfilecontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      accessControlPolicyIDs: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
      dynamicAuthorizationConsultationIDs: ""
  inline_response_200_statsCollect:
    properties:
      statsCollectInfo:
        $ref: "#/definitions/statsCollectInfo"
    example:
      statsCollectInfo:
        FromId: ""
        ToAddress: ""
        resourceType: ""
        resourceID: ""
        resourceName: ""
        statsCollectID: ""
        collectingEntityID: ""
        event: ""
        eventStart: ""
        eventEnd: ""
        transactionType: ""
        dataSize: ""
  statsCollectInfo:
    type: "object"
    properties:
      FromId:
        $ref: "#/definitions/FromId"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      statsCollectID:
        $ref: "#/definitions/statsCollectID"
      collectingEntityID:
        $ref: "#/definitions/collectingEntityID"
      event:
        $ref: "#/definitions/event"
      eventStart:
        $ref: "#/definitions/eventStart"
      eventEnd:
        $ref: "#/definitions/eventEnd"
      transactionType:
        $ref: "#/definitions/transactionType"
      dataSize:
        $ref: "#/definitions/dataSize"
    description: "information of statsCollect resource"
    example:
      statsCollectInfo:
        FromId: ""
        ToAddress: ""
        resourceType: ""
        resourceID: ""
        resourceName: ""
        statsCollectID: ""
        collectingEntityID: ""
        event: ""
        eventStart: ""
        eventEnd: ""
        transactionType: ""
        dataSize: ""
  inline_response_200_eventConfig:
    properties:
      eventConfigInfo:
        $ref: "#/definitions/eventConfigInfo"
    example:
      eventConfigInfo:
        FromId: ""
        ToAddress: ""
        resourceType: ""
        resourceID: ""
        resourceName: ""
        parentID: ""
        expirationTime: ""
        accessControlPolicyIDs: ""
        labels: ""
        creationTime: ""
        lastModifiedTime: ""
        creator: ""
        eventType: ""
        eventStart: ""
        eventEnd: ""
        operationType: ""
        dataSize: ""
        dynamicAuthorizationConsultationIDs: ""
        eventResourceIDs: ""
        eventID: ""
        eventResourceTypes: ""
  eventConfigInfo:
    type: "object"
    properties:
      FromId:
        $ref: "#/definitions/FromId"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      creator:
        $ref: "#/definitions/creator"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
      eventType:
        $ref: "#/definitions/eventType"
      eventStart:
        $ref: "#/definitions/eventStart"
      eventEnd:
        $ref: "#/definitions/eventEnd"
      operationType:
        $ref: "#/definitions/operationType"
      dataSize:
        $ref: "#/definitions/dataSize"
      eventID:
        $ref: "#/definitions/eventID"
      eventResourceIDs:
        $ref: "#/definitions/eventResourceIDs"
      eventResourceTypes:
        $ref: "#/definitions/eventResourceTypes"
    description: "information of eventConfig resource"
    example:
      eventConfigInfo:
        FromId: ""
        ToAddress: ""
        resourceType: ""
        resourceID: ""
        resourceName: ""
        parentID: ""
        expirationTime: ""
        accessControlPolicyIDs: ""
        labels: ""
        creationTime: ""
        lastModifiedTime: ""
        creator: ""
        dynamicAuthorizationConsultationIDs: ""
        eventType: ""
        eventStart: ""
        eventEnd: ""
        operationType: ""
        dataSize: ""
        eventID: ""
        eventResourceIDs: ""
        eventResourceTypes: ""
  inline_response_200_statsConfig:
    properties:
      statsConfigInfo:
        $ref: "#/definitions/statsConfigInfo"
    example:
      statsConfigInfo:
        FromId: ""
        ToAddress: ""
        resourceType: ""
        resourceID: ""
        resourceName: ""
        parentID: ""
        expirationTime: ""
        accessControlPolicyIDs: ""
        labels: ""
        creationTime: ""
        lastModifiedTime: ""
        creator: ""
        dynamicAuthorizationConsultationIDs: ""
  statsConfigInfo:
    type: "object"
    properties:
      FromId:
        $ref: "#/definitions/FromId"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      creator:
        $ref: "#/definitions/creator"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
    description: "information of statsConfig resource"
    example:
      statsConfigInfo:
        FromId: ""
        ToAddress: ""
        resourceType: ""
        resourceID: ""
        resourceName: ""
        parentID: ""
        expirationTime: ""
        accessControlPolicyIDs: ""
        labels: ""
        creationTime: ""
        lastModifiedTime: ""
        creator: ""
  inline_response_200_node:
    properties:
      nodeInfo:
        $ref: "#/definitions/nodeInfo"
    example:
      nodeInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  nodeInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/nodecontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of AE resource"
    example:
      nodeInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          accessControlPolicyIDs: ""
          hostedCSELink: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""
          announceTo: ""
          announcedAttribute: ""
          nodeID: ""
          mgmtClientAddress: ""
          dynamicAuthorizationConsultationIDs: ""
          hostedServiceLinks: ""
          networkID: ""
          hostedAELinks: ""
          roamingStatus: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  nodecontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      hostedCSELink:
        $ref: "#/definitions/hostedCSELink"
      announceTo:
        $ref: "#/definitions/announceTo"
      announcedAttribute:
        $ref: "#/definitions/announcedAttribute"
      nodeID:
        $ref: "#/definitions/nodeID"
      mgmtClientAddress:
        $ref: "#/definitions/mgmtClientAddress"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
      hostedServiceLinks:
        $ref: "#/definitions/hostedServiceLinks"
      networkID:
        $ref: "#/definitions/networkID"
      hostedAELinks:
        $ref: "#/definitions/hostedAELinks"
      roamingStatus:
        $ref: "#/definitions/roamingStatus"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      accessControlPolicyIDs: ""
      hostedCSELink: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
      announceTo: ""
      announcedAttribute: ""
      nodeID: ""
      mgmtClientAddress: ""
      dynamicAuthorizationConsultationIDs: ""
      hostedServiceLinks: ""
      networkID: ""
      hostedAELinks: ""
      roamingStatus: ""
  inline_response_200_pollingChannel:
    properties:
      pollingChannelInfo:
        $ref: "#/definitions/pollingChannelInfo"
    example:
      pollingChannelInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  pollingChannelInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/pollingChannelcontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of AE resource"
    example:
      pollingChannelInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  pollingChannelcontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
  inline_response_200_subscription:
    properties:
      subscriptionInfo:
        $ref: "#/definitions/subscriptionInfo"
    example:
      subscriptionInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  subscriptionInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/subscriptioncontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of AE resource"
    example:
      subscriptionInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""
          accessControlPolicyIDs: ""
          eventNotificationCriteria: ""
          expirationCounter: ""
          groupID: ""
          batchNotify: ""
          rateLimit: ""
          preSubscriptionNotify: ""
          pendingNotification: ""
          notificationStoragePriority: ""
          latestNotify: ""
          notificationContentType: ""
          notificationEventCat: ""
          creator: ""
          subscriberURI: ""
          dynamicAuthorizationConsultationIDs: ""
          notificationForwardingURI: ""
          notificationURI: ""
          associatedCrossResourceSub: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  subscriptioncontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      eventNotificationCriteria:
        $ref: "#/definitions/eventNotificationCriteria"
      expirationCounter:
        $ref: "#/definitions/expirationCounter"
      groupID:
        $ref: "#/definitions/groupID"
      batchNotify:
        $ref: "#/definitions/batchNotify"
      rateLimit:
        $ref: "#/definitions/rateLimit"
      preSubscriptionNotify:
        $ref: "#/definitions/preSubscriptionNotify"
      pendingNotification:
        $ref: "#/definitions/pendingNotification"
      notificationStoragePriority:
        $ref: "#/definitions/notificationStoragePriority"
      latestNotify:
        $ref: "#/definitions/latestNotify"
      notificationContentType:
        $ref: "#/definitions/notificationContentType"
      notificationEventCat:
        $ref: "#/definitions/notificationEventCat"
      creator:
        $ref: "#/definitions/creator"
      subscriberURI:
        $ref: "#/definitions/subscriberURI"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
      notificationForwardingURI:
        $ref: "#/definitions/notificationForwardingURI"
      notificationURI:
        $ref: "#/definitions/notificationURI"
      associatedCrossResourceSub:
        $ref: "#/definitions/associatedCrossResourceSub"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
      accessControlPolicyIDs: ""
      eventNotificationCriteria: ""
      expirationCounter: ""
      groupID: ""
      batchNotify: ""
      rateLimit: ""
      preSubscriptionNotify: ""
      pendingNotification: ""
      notificationStoragePriority: ""
      latestNotify: ""
      notificationContentType: ""
      notificationEventCat: ""
      creator: ""
      subscriberURI: ""
      dynamicAuthorizationConsultationIDs: ""
      notificationForwardingURI: ""
      notificationURI: ""
      associatedCrossResourceSub: ""
  inline_response_200_locationPolicy:
    properties:
      locationPolicyInfo:
        $ref: "#/definitions/locationPolicyInfo"
    example:
      locationPolicyInfo:
        FromId: ""
        ToAddress: ""
        resourceType: ""
        resourceID: ""
        resourceName: ""
        parentID: ""
        expirationTime: ""
        accessControlPolicyIDs: ""
        labels: ""
        creationTime: ""
        lastModifiedTime: ""
        announceTo: ""
        announcedAttribute: ""
        locationSource: ""
        locationUpdatePeriod: ""
        locationTargetID: ""
        locationServer: ""
        locationContainerID: ""
        locationContainerName: ""
        locationStatus: ""
        locationInformationType: ""
        geographicalTargetArea: ""
        geofenceEventCriteria: ""
        dynamicAuthorizationConsultationIDs: ""
        authID: ""
        locationUpdateEventCriteria: ""
        retrieveLastKnownLocation: ""
  locationPolicyInfo:
    type: "object"
    properties:
      FromId:
        $ref: "#/definitions/FromId"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      announceTo:
        $ref: "#/definitions/announceTo"
      announcedAttribute:
        $ref: "#/definitions/announcedAttribute"
      locationSource:
        $ref: "#/definitions/locationSource"
      locationUpdatePeriod:
        $ref: "#/definitions/locationUpdatePeriod"
      locationTargetID:
        $ref: "#/definitions/locationTargetID"
      locationServer:
        $ref: "#/definitions/locationServer"
      locationContainerID:
        $ref: "#/definitions/locationContainerID"
      locationContainerName:
        $ref: "#/definitions/locationContainerName"
      locationStatus:
        $ref: "#/definitions/locationStatus"
      locationInformationType:
        $ref: "#/definitions/locationInformationType"
      geographicalTargetArea:
        $ref: "#/definitions/geographicalTargetArea"
      geofenceEventCriteria:
        $ref: "#/definitions/geofenceEventCriteria"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
      authID:
        $ref: "#/definitions/authID"
      locationUpdateEventCriteria:
        $ref: "#/definitions/locationUpdateEventCriteria"
      retrieveLastKnownLocation:
        $ref: "#/definitions/retrieveLastKnownLocation"
    description: "information of group resource"
    example:
      locationPolicyInfo:
        FromId: ""
        ToAddress: ""
        resourceType: ""
        resourceID: ""
        resourceName: ""
        parentID: ""
        expirationTime: ""
        accessControlPolicyIDs: ""
        labels: ""
        creationTime: ""
        lastModifiedTime: ""
        announceTo: ""
        announcedAttribute: ""
        locationSource: ""
        locationUpdatePeriod: ""
        locationTargetID: ""
        locationServer: ""
        locationContainerID: ""
        locationContainerName: ""
        locationStatus: ""
        locationInformationType: ""
        geographicalTargetArea: ""
        geofenceEventCriteria: ""
        dynamicAuthorizationConsultationIDs: ""
        authID: ""
        locationUpdateEventCriteria: ""
        retrieveLastKnownLocation: ""
  inline_response_200_execInstance:
    properties:
      execInstanceInfo:
        $ref: "#/definitions/execInstanceInfo"
    example:
      execInstanceInfo:
        resourceType: ""
        resourceID: ""
        resourceName: ""
        parentID: ""
        expirationTime: ""
        accessControlPolicyIDs: ""
        labels: ""
        creationTime: ""
        execNumber: ""
        lastModifiedTime: ""
        description: ""
        cmdType: ""
        execReqArgs: ""
        execEnable: ""
        execTarget: ""
        execFrequency: ""
        execDelay: ""
        dynamicAuthorizationConsultationIDs: ""
        execMode: ""
        execResult: ""
        execStatus: ""
        execDisable: ""
  execInstanceInfo:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      labels:
        $ref: "#/definitions/labels"
      creationTime:
        $ref: "#/definitions/creationTime"
      execNumber:
        $ref: "#/definitions/execNumber"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      description:
        $ref: "#/definitions/description"
      cmdType:
        $ref: "#/definitions/cmdType"
      execReqArgs:
        $ref: "#/definitions/execReqArgs"
      execEnable:
        $ref: "#/definitions/execEnable"
      execTarget:
        $ref: "#/definitions/execTarget"
      execFrequency:
        $ref: "#/definitions/execFrequency"
      execDelay:
        $ref: "#/definitions/execDelay"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
      execMode:
        $ref: "#/definitions/execMode"
      execResult:
        $ref: "#/definitions/execResult"
      execStatus:
        $ref: "#/definitions/execStatus"
      execDisable:
        $ref: "#/definitions/execDisable"
    description: "information of execInstanceInfo resource"
    example:
      execInstanceInfo:
        resourceType: ""
        resourceID: ""
        resourceName: ""
        parentID: ""
        expirationTime: ""
        accessControlPolicyIDs: ""
        labels: ""
        creationTime: ""
        execNumber: ""
        lastModifiedTime: ""
        description: ""
        cmdType: ""
        execReqArgs: ""
        execEnable: ""
        execTarget: ""
        execFrequency: ""
        execDelay: ""
        dynamicAuthorizationConsultationIDs: ""
        execMode: ""
        execResult: ""
        execStatus: ""
        execDisable: ""
  inline_response_200_mgmtCmd:
    properties:
      mgmtCmdInfo:
        $ref: "#/definitions/mgmtCmdInfo"
    example:
      mgmtCmdInfo:
        resourceType: ""
        resourceID: ""
        resourceName: ""
        parentID: ""
        expirationTime: ""
        accessControlPolicyIDs: ""
        labels: ""
        creationTime: ""
        execNumber: ""
        lastModifiedTime: ""
        description: ""
        cmdType: ""
        execReqArgs: ""
        execEnable: ""
        execTarget: ""
        execFrequency: ""
        execDelay: ""
        dynamicAuthorizationConsultationIDs: ""
        execMode: ""
  mgmtCmdInfo:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      labels:
        $ref: "#/definitions/labels"
      creationTime:
        $ref: "#/definitions/creationTime"
      execNumber:
        $ref: "#/definitions/execNumber"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      description:
        $ref: "#/definitions/description"
      cmdType:
        $ref: "#/definitions/cmdType"
      execReqArgs:
        $ref: "#/definitions/execReqArgs"
      execEnable:
        $ref: "#/definitions/execEnable"
      execTarget:
        $ref: "#/definitions/execTarget"
      execFrequency:
        $ref: "#/definitions/execFrequency"
      execDelay:
        $ref: "#/definitions/execDelay"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
      execMode:
        $ref: "#/definitions/execMode"
    description: "information of mgmtCmdInfo resource"
    example:
      mgmtCmdInfo:
        resourceType: ""
        resourceID: ""
        resourceName: ""
        parentID: ""
        expirationTime: ""
        accessControlPolicyIDs: ""
        labels: ""
        creationTime: ""
        execNumber: ""
        lastModifiedTime: ""
        description: ""
        cmdType: ""
        execReqArgs: ""
        execEnable: ""
        execTarget: ""
        execFrequency: ""
        execDelay: ""
        dynamicAuthorizationConsultationIDs: ""
        execMode: ""
  inline_response_200_mgmtObj:
    properties:
      mgmtObjInfo:
        $ref: "#/definitions/mgmtObjInfo"
    example:
      mgmtObjInfo:
        FromId: ""
        ToAddress: ""
        content: ""
  mgmtObjInfo:
    type: "object"
    properties:
      FromId:
        $ref: "#/definitions/FromId"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      content:
        $ref: "#/definitions/mgmtObjcontent"
    description: "information of group resource"
    example:
      mgmtObjInfo:
        FromId: ""
        ToAddress: ""
        content: 
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          accessControlPolicyIDs: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""        
          announceTo: ""
          announcedAttribute: ""
          mgmtDefinition: ""
          objectIDs: ""
          objectPaths: ""
          mgmtSchema: ""
          mgmtLink: ""
          objectAttribute: ""
          description: ""
          dynamicAuthorizationConsultationIDs: ""
  mgmtObjcontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      announceTo:
        $ref: "#/definitions/announceTo"
      announcedAttribute:
        $ref: "#/definitions/announcedAttribute"
      mgmtDefinition:
        $ref: "#/definitions/mgmtDefinition"
      objectIDs:
        $ref: "#/definitions/objectIDs"
      objectPaths:
        $ref: "#/definitions/objectPaths"
      mgmtSchema:
        $ref: "#/definitions/mgmtSchema"
      mgmtLink:
        $ref: "#/definitions/mgmtLink"
      objectAttribute:
        $ref: "#/definitions/objectAttribute"
      description:
        $ref: "#/definitions/description"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      accessControlPolicyIDs: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""        
      announceTo: ""
      announcedAttribute: ""
      mgmtDefinition: ""
      objectIDs: ""
      objectPaths: ""
      mgmtSchema: ""
      mgmtLink: ""
      objectAttribute: ""
      description: ""
  inline_response_200_semanticFanOutPoints:
    properties:
      semanticFanOutPointInfo:
        $ref: "#/definitions/semanticFanOutPointInfo"
    example:
      semanticFanOutPointInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  semanticFanOutPointInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/semanticFanOutPointcontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of request resource"
    example:
      semanticFanOutPointInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  inline_response_200_fanOutPoint:
    properties:
      fanOutPointInfo:
        $ref: "#/definitions/fanOutPointInfo"
    example:
      fanOutPointInfo:
        FromId: ""
        ToAddress: ""
        groupReqId: ""
        content: ""
  fanOutPointInfo:
    type: "object"
    properties:
      FromId:
        $ref: "#/definitions/FromId"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      groupReqId:
        $ref: "#/definitions/groupReqId"
      content:
        $ref: "#/definitions/fanOutPointcontent"
    description: "information of group resource"
    example:
      fanOutPointInfo:
        FromId: ""
        ToAddress: ""
        groupReqId: ""
        content: 
          resourceType: ""
          creator: ""
          resourceID: ""
          resourceName: ""
          ResultExpirationTime: ""
          ResponseType: ""
  fanOutPointcontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      creator:
        $ref: "#/definitions/creator"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      ResultExpirationTime:
        $ref: "#/definitions/ResultExpirationTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
    example:
      resourceType: ""
      creator: ""
      resourceID: ""
      resourceName: ""
      ResultExpirationTime: ""
      ResponseType: ""
  inline_response_200_group:
    properties:
      groupInfo:
        $ref: "#/definitions/groupInfo"
    example:
      groupInfo:
        FromId: ""
        ToAddress: ""
        resourceType: ""
        resourceID: ""
        resourceName: ""
        parentID: ""
        expirationTime: ""
        accessControlPolicyIDs: ""
        labels: ""
        creationTime: ""
        lastModifiedTime: ""
        announceTo: ""
        announcedAttribute: ""
        dynamicAuthorizationConsultationIDs: ""
        creator: ""
        memberType: ""
        currentNrOfMembers: ""
        maxNrOfMembers: ""
        memberIDs: ""
        membersAccessControlPolicyIDs: ""
        memberTypeValidated: ""
        consistencyStrategy: ""
        groupName: ""
        semanticSupportIndicator: ""
        notifyAggregation: ""
        specializationType: ""
  groupInfo:
    type: "object"
    properties:
      FromId:
        $ref: "#/definitions/FromId"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      announceTo:
        $ref: "#/definitions/announceTo"
      announcedAttribute:
        $ref: "#/definitions/announcedAttribute"
      memberType:
        $ref: "#/definitions/memberType"
      creator:
        $ref: "#/definitions/creator"
      maxNrOfMembers:
        $ref: "#/definitions/maxNrOfMembers"
      currentNrOfMembers:
        $ref: "#/definitions/currentNrOfMembers"
      memberIDs:
        $ref: "#/definitions/memberIDs"
      membersAccessControlPolicyIDs:
        $ref: "#/definitions/membersAccessControlPolicyIDs"
      memberTypeValidated:
        $ref: "#/definitions/memberTypeValidated"
      consistencyStrategy:
        $ref: "#/definitions/consistencyStrategy"
      groupName:
        $ref: "#/definitions/groupName"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
      semanticSupportIndicator:
        $ref: "#/definitions/semanticSupportIndicator"
      notifyAggregation:
        $ref: "#/definitions/notifyAggregation"
      specializationType:
        $ref: "#/definitions/specializationType"
    description: "information of group resource"
    example:
      groupInfo:
        FromId: ""
        ToAddress: ""
        resourceType: ""
        resourceID: ""
        resourceName: ""
        parentID: ""
        expirationTime: ""
        accessControlPolicyIDs: ""
        labels: ""
        creationTime: ""
        lastModifiedTime: ""
        announceTo: ""
        announcedAttribute: ""
        dynamicAuthorizationConsultationIDs: ""
        creator: ""
        memberType: ""
        currentNrOfMembers: ""
        maxNrOfMembers: ""
        memberIDs: ""
        membersAccessControlPolicyIDs: ""
        memberTypeValidated: ""
        consistencyStrategy: ""
        groupName: ""
        semanticSupportIndicator: ""
        notifyAggregation: ""
        specializationType: ""
  inline_response_200_container:
    properties:
      containerInfo:
        $ref: "#/definitions/containerInfo"
    example:
      containerInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  containerInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/containercontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of container resource"
    example:
      containerInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          accessControlPolicyIDs: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""
          announceTo: ""
          announcedAttribute: ""
          stateTag: ""
          creator: ""
          maxNrOfInstances: ""
          maxByteSize: ""
          ontologyRef: ""
          currentNrOfInstances: ""
          currentByteSize: ""
          locationID: ""
          dynamicAuthorizationConsultationIDs: ""
          maxInstanceAge: ""
          disableRetrieval: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  containercontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      announceTo:
        $ref: "#/definitions/announceTo"
      announcedAttribute:
        $ref: "#/definitions/announcedAttribute"
      stateTag:
        $ref: "#/definitions/stateTag"
      creator:
        $ref: "#/definitions/creator"
      maxNrOfInstances:
        $ref: "#/definitions/maxNrOfInstances"
      ontologyRef:
        $ref: "#/definitions/ontologyRef"
      maxByteSize:
        $ref: "#/definitions/maxByteSize"
      currentNrOfInstances:
        $ref: "#/definitions/currentNrOfInstances"
      currentByteSize:
        $ref: "#/definitions/currentByteSize"
      locationID:
        $ref: "#/definitions/locationID"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
      maxInstanceAge:
        $ref: "#/definitions/maxInstanceAge"
      disableRetrieval:
        $ref: "#/definitions/disableRetrieval"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      accessControlPolicyIDs: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
      announceTo: ""
      announcedAttribute: ""
      stateTag: ""
      creator: ""
      maxNrOfInstances: ""
      maxByteSize: ""
      ontologyRef: ""
      currentNrOfInstances: ""
      currentByteSize: ""
      locationID: ""
      dynamicAuthorizationConsultationIDs: ""
      maxInstanceAge: ""
      disableRetrieval: ""
  inline_response_200_delivery:
    properties:
      deliveryInfo:
        $ref: "#/definitions/deliveryInfo"
    example:
      deliveryInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  deliveryInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/deliverycontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of AE resource"
    example:
      deliveryInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          accessControlPolicyIDs: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""
          source: ""
          target: ""
          lifespan: ""
          eventCat: ""
          deliveryMetaData: ""
          aggregatedRequest: ""
          dynamicAuthorizationConsultationIDs: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  deliverycontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
      source:
        $ref: "#/definitions/source"
      target:
        $ref: "#/definitions/target"
      lifespan:
        $ref: "#/definitions/lifespan"
      eventCat:
        $ref: "#/definitions/eventCat"
      deliveryMetaData:
        $ref: "#/definitions/deliveryMetaData"
      aggregatedRequest:
        $ref: "#/definitions/aggregatedRequest"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      accessControlPolicyIDs: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
      dynamicAuthorizationConsultationIDs: ""
      source: ""
      target: ""
      lifespan: ""
      eventCat: ""
      deliveryMetaData: ""
      aggregatedRequest: ""
  inline_response_200_resource:
    properties:
      resourceInfo:
        $ref: "#/definitions/resourceInfo"
    example:
      resourceInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  resourceInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/resourcecontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of CSEBaseInfo resource"
    example:
      resourceInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  inline_response_200_2:
    properties:
      CSEBaseInfo:
        $ref: "#/definitions/CSEBaseInfo"
    example:
      CSEBaseInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  CSEBaseInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/CSEBaseInfocontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of CSEBaseInfo resource"
    example:
      CSEBaseInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  inline_response_200_1:
    properties:
      remoteCSEInfo:
        $ref: "#/definitions/remoteCSEInfo"
    example:
      remoteCSEInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  remoteCSEInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/remoteCSEcontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of remoteCSEInfo resource"
    example:
      remoteCSEInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content: 
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          creationTime: ""
          lastModifiedTime: ""
          expirationTime: ""
          accessControlPolicyIDs: ""
          labels: ""
          announceTo: ""
          announcedAttribute: ""
          cseType: ""
          CSEBase: ""
          CSE-ID: ""
          M2M-Ext-ID: ""
          Trigger-Recipient-ID: ""
          requestReachability: ""
          nodeLink: ""
          dynamicAuthorizationConsultationIDs: ""
          pointOfAccess: ""
          e2eSecInfo: ""
          triggerReferenceNumber: ""
          supportedReleaseVersions: ""
          activityPatternElements: ""
          externalGroupID: ""
          descendantCSEs: ""
          contentSerialization: ""
          triggerEnable: ""
          multicastCapability: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  remoteCSEcontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      announceTo:
        $ref: "#/definitions/announceTo"
      announcedAttribute:
        $ref: "#/definitions/announcedAttribute"
      cseType:
        $ref: "#/definitions/cseType"
      CSEBase:
        $ref: "#/definitions/CSEBase"
      CSE-ID:
        $ref: "#/definitions/CSE-ID"
      M2M-Ext-ID:
        $ref: "#/definitions/M2M-Ext-ID"
      Trigger-Recipient-ID:
        $ref: "#/definitions/Trigger-Recipient-ID"
      requestReachability:
        $ref: "#/definitions/requestReachability"
      nodeLink:
        $ref: "#/definitions/nodeLink"
      dynamicAuthorizationConsultationIDs:
        $ref: "#/definitions/dynamicAuthorizationConsultationIDs"
      pointOfAccess:
        $ref: "#/definitions/pointOfAccess"
      e2eSecInfo:
        $ref: "#/definitions/e2eSecInfo"
      triggerReferenceNumber:
        $ref: "#/definitions/triggerReferenceNumber"
      supportedReleaseVersions:
        $ref: "#/definitions/supportedReleaseVersions"
      activityPatternElements:
        $ref: "#/definitions/activityPatternElements"
      externalGroupID:
        $ref: "#/definitions/externalGroupID"
      descendantCSEs:
        $ref: "#/definitions/descendantCSEs"
      contentSerialization:
        $ref: "#/definitions/contentSerialization"
      triggerEnable:
        $ref: "#/definitions/triggerEnable"
      multicastCapability:
        $ref: "#/definitions/multicastCapability"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      accessControlPolicyIDs: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
      announceTo: ""
      announcedAttribute: ""
      cseType: ""
      CSEBase: ""
      CSE-ID: ""
      M2M-Ext-ID: ""
      Trigger-Recipient-ID: ""
      requestReachability: ""
      nodeLink: ""
      contentSerialization: ""
      activityPatternElements: ""
      externalGroupID: ""
      descendantCSEs: ""
      contentSerialization: ""
      triggerEnable: ""
      multicastCapability: ""
  inline_response_200:
    properties:
      AEInfo:
        $ref: "#/definitions/AEInfo"
    example:
      AEInfo:
        Operation : ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        ToAddress: ""
        FromId: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  AEInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/AEcontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      FromId:
        $ref: "#/definitions/FromId"
      DesiredIdentifierResultType:
        $ref: "#/definitions/DesiredIdentifierResultType"
      TokenRequestIndicator:
        $ref: "#/definitions/TokenRequestIndicator"
      Tokens:
        $ref: "#/definitions/Tokens"
      TokenIDs:
        $ref: "#/definitions/TokenIDs"
      RoleIDs:
        $ref: "#/definitions/RoleIDs"
      LocalTokenIDs:
        $ref: "#/definitions/LocalTokenIDs"
      ReleaseVersionIndicator:
        $ref: "#/definitions/ReleaseVersionIndicator"
      VendorInformation:
        $ref: "#/definitions/VendorInformation"
      GroupRequestTargetMembers:
        $ref: "#/definitions/GroupRequestTargetMembers"
      AuthorizationSignatureIndicator:
        $ref: "#/definitions/AuthorizationSignatureIndicator"
      AuthorizationSignature:
        $ref: "#/definitions/AuthorizationSignature"
      AuthorizationRelationshipIndicator:
        $ref: "#/definitions/AuthorizationRelationshipIndicator"
      SemanticQueryIndicator :
        $ref: "#/definitions/SemanticQueryIndicator"
    description: "information of AE resource"
    example:
      AEInfo:
        ToAddress: ""
        FromId: ""
        Operation : ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          accessControlPolicyIDs: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""
          announceTo: ""
          announcedAttribute: ""
          appName: ""
          App-ID: ""
          AE-ID: ""
          pointOfAccess: ""
          ontologyRef: ""
          requestReachability: ""
          nodeLink: ""
          contentSerialization: ""
          e2eSecInfo: ""
          supportedReleaseVersions: ""
          dynamicAuthorizationConsultationIDs: ""
          M2M-Ext-ID: ""
          sessionCapabilities: ""
          triggerReferenceNumbe: ""
          trackRegistrationPoints: ""
          triggerEnable: ""
          trigger-Recipient-ID: ""
          registrationStatus: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DesiredIdentifierResultType: ""
        TokenRequestIndicator: ""
        Tokens: ""
        TokenIDs: ""
        RoleIDs: ""
        LocalTokenIDs: ""
        ReleaseVersionIndicator: ""
        VendorInformation: ""
        GroupRequestTargetMembers: "" 
        AuthorizationSignatureIndicator: ""
        AuthorizationSignature: ""
        AuthorizationRelationshipIndicator: ""
        SemanticQueryIndicator: ""
  AEcontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      announceTo:
        $ref: "#/definitions/announceTo"
      announcedAttribute:
        $ref: "#/definitions/announcedAttribute"
      appName:
        $ref: "#/definitions/appName"
      App-ID:
        $ref: "#/definitions/App-ID"
      AE-ID:
        $ref: "#/definitions/AE-ID"
      pointOfAccess:
        $ref: "#/definitions/pointOfAccess"
      ontologyRef:
        $ref: "#/definitions/ontologyRef"
      requestReachability:
        $ref: "#/definitions/requestReachability"
      nodeLink:
        $ref: "#/definitions/nodeLink"
      contentSerialization:
        $ref: "#/definitions/contentSerialization"
      M2M-Ext-ID:
        $ref: "#/definitions/M2M-Ext-ID"
      sessionCapabilities:
        $ref: "#/definitions/sessionCapabilities"
      triggerReferenceNumbe:
        $ref: "#/definitions/triggerReferenceNumbe"
      trackRegistrationPoints:
        $ref: "#/definitions/trackRegistrationPoints"
      triggerEnable:
        $ref: "#/definitions/triggerEnable"
      trigger-Recipient-ID:
        $ref: "#/definitions/Trigger-Recipient-ID"
      registrationStatus:
        $ref: "#/definitions/registrationStatus"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      accessControlPolicyIDs: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
      announceTo: ""
      announcedAttribute: ""
      appName: ""
      App-ID: ""
      AE-ID: ""
      pointOfAccess: ""
      ontologyRef: ""
      requestReachability: ""
      nodeLink: ""
      contentSerialization: ""
      e2eSecInfo: ""
      supportedReleaseVersions: ""
      dynamicAuthorizationConsultationIDs: ""
      M2M-Ext-ID: ""
      sessionCapabilities: ""
      triggerReferenceNumbe: ""
      trackRegistrationPoints: ""
      triggerEnable: ""
      trigger-Recipient-ID: ""
      registrationStatus: ""
  Operation:
    type: "string"
    description: "Operation"
  RequestId:
    type: "string"
    description: "RequestId"
  ResourceType:
    type: "string"
    description: "resourceType"
  OriginatingTimestamp:
    type: "string"
    description: "OriginatingTimestamp"
  ReqExpirationTimestamp:
    type: "string"
    description: "ReqExpirationTimestamp"
  ResExpirationTimestamp:
    type: "string"
    description: "ResExpirationTimestamp"
  EventCategory:
    type: "string"
    description: "EventCategory"
  OperationalExecutionTime:
    type: "string"
    description: "OperationalExecutionTime"
  ResponseType:
    type: "string"
    description: "ResponseType"
  ResultPersistence:
    type: "string"
    description: "ResultPersistence"
  ResultContent:
    type: "string"
    description: "ResultContent"
  DeliveryAggregation:
    type: "string"
    description: "DeliveryAggregation"
  GroupRequestIdentifier:
    type: "string"
    description: "GroupRequestIdentifier"
  FilterCriteria:
    type: "string"
    description: "FilterCriteria"
  DesiredIdentifierResultType:
    type: "string"
    description: "DesiredIdentifierResultType"
  TokenRequestIndicator:
    type: "string"
    description: "TokenRequestIndicator"
  Tokens:
    type: "string"
    description: "Tokens"
  TokenIDs:
    type: "string"
    description: "TokenIDs"
  RoleIDs:
    type: "string"
    description: "RoleIDs"
  LocalTokenIDs:
    type: "string"
    description: "LocalTokenIDs"
  ReleaseVersionIndicator:
    type: "string"
    description: "ReleaseVersionIndicator"
  VendorInformation:
    type: "string"
    description: "VendorInformation"
  GroupRequestTargetMembers:
    type: "string"
    description: "GroupRequestTargetMembers" 
  AuthorizationSignatureIndicator:
    type: "string"
    description: "AuthorizationSignatureIndicator"
  AuthorizationSignature:
    type: "string"
    description: "AuthorizationSignature"
  AuthorizationRelationshipIndicator:
    type: "string"
    description: "AuthorizationRelationshipIndicator"
  SemanticQueryIndicator:
    type: "string"
    description: "SemanticQueryIndicator"
  resourceType:
    type: "string"
    description: "resourceType"
  resourceID:
    type: "string"
    description: "resourceID"
  resourceName:
    type: "string"
    description: "resourceName"
  parentID:
    type: "string"
    description: "parentID"
  expirationTime:
    type: "string"
    description: "expirationTime"
  accessControlPolicyIDs:
    type: "string"
    description: "accessControlPolicyIDs"
  creationTime:
    type: "string"
    description: "creationTime"
  lastModifiedTime:
    type: "string"
    description: "lastModifiedTime"
  labels:
    type: "string"
    description: "labels"
  announceTo:
    type: "string"
    description: "announceTo"
  announcedAttribute:
    type: "string"
    description: "announcedAttribute"
  appName:
    type: "string"
    description: "appName"
  App-ID:
    type: "string"
    description: "App-ID"
  AE-ID:
    type: "string"
    description: "AE-ID"
  pointOfAccess:
    type: "string"
    description: "pointOfAccess"
  ontologyRef:
    type: "string"
    description: "ontologyRef"
  requestReachability:
    type: "string"
    description: "requestReachability"
  nodeLink:
    type: "string"
    description: "nodeLink"
  e2eSecInfo:
    type: "string"
    description: "e2eSecInfo"
  supportedReleaseVersions:
    type: "string"
    description: "supportedReleaseVersions"
  dynamicAuthorizationConsultationIDs:
    type: "string"
    description: "dynamicAuthorizationConsultationIDs"  
  sessionCapabilities:
    type: "string"
    description: "sessionCapabilities"
  triggerReferenceNumbe:
    type: "string"
    description: "triggerReferenceNumbe"
  trackRegistrationPoints:
    type: "string"
    description: "trackRegistrationPoints"
  triggerEnable:
    type: "string"
    description: "triggerEnable"
  trigger-Recipient-ID:
    type: "string"
    description: "trigger-Recipient-ID"
  registrationStatus:
    type: "string"
    description: "registrationStatus"
  stateTag:
    type: "string"
    description: "stateTag"
  creator:
    type: "string"
    description: "creator"
  maxNrOfInstances:
    type: "string"
    description: "maxNrOfInstances"
  maxByteSize:
    type: "string"
    description: "maxByteSize"
  currentNrOfInstances:
    type: "string"
    description: "currentNrOfInstances"
  currentByteSize:
    type: "string"
    description: "currentByteSize"
  locationID:
    type: "string"
    description: "locationID"
  CSEBaseInfocontent: 
    type: "string"
    description: "CSEBaseInfocontent"
  resourcecontent: 
    type: "string"
    description: "resourcecontent"
  cseType:
    type: "string"
    description: "cseType"
  CSEBase:
    type: "string"
    description: "CSEBase"
  CSE-ID:
    type: "string"
    description: "CSE-ID"
  M2M-Ext-ID:
    type: "string"
    description: "M2M-Ext-ID"
  Trigger-Recipient-ID:
    type: "string"
    description: "Trigger-Recipient-ID"
  activityPatternElements:
    type: "string"
    description: "activityPatternElements"
  externalGroupID:
    type: "string"
    description: "externalGroupID"
  descendantCSEs:
    type: "string"
    description: "descendantCSEs"
  contentSerialization:
    type: "string"
    description: "contentSerialization"
  multicastCapability:
    type: "string"
    description: "multicastCapability"
  dynamicAuthorizationConsultationcontent:
    type: "string"
    description: "dynamicAuthorizationConsultationcontent"
  source:
    type: "string"
    description: "source"
  target:
    type: "string"
    description: "target"
  lifespan:
    type: "string"
    description: "lifespan"
  eventCat:
    type: "string"
    description: "eventCat"
  deliveryMetaData:
    type: "string"
    description: "deliveryMetaData"
  aggregatedRequest:
    type: "string"
    description: "aggregatedRequest"
  FromId:
    type: "string"
    description: "FromId"
  ToAddress:
    type: "string"
    description: "ToAddress"
  groupName:
    type: "string"
    description: "groupName"
  consistencyStrategy:
    type: "string"
    description: "consistencyStrategy"
  memberTypeValidated:
    type: "string"
    description: "memberTypeValidated"
  membersAccessControlPolicyIDs:
    type: "string"
    description: "membersAccessControlPolicyIDs"
  memberIDs:
    type: "string"
    description: "memberIDs"
  maxNrOfMembers:
    type: "string"
    description: "maxNrOfMembers"
  currentNrOfMembers:
    type: "string"
    description: "currentNrOfMembers"
  memberType:
    type: "string"
    description: "memberType" 
  mgmtDefinition:
    type: "string"
    description: "mgmtDefinition"
  objectIDs:
    type: "string"
    description: "objectIDs"
  objectPaths:
    type: "string"
    description: "objectPaths"
  mgmtLink:
    type: "string"
    description: "mgmtLink"
  objectAttribute:
    type: "string"
    description: "objectAttribute"
  description:
    type: "string"
    description: "description"
  execNumber:
    type: "string"
    description: "execNumber"
  cmdType:
    type: "string"
    description: "cmdType"
  execReqArgs:
    type: "string"
    description: "execReqArgs"
  execEnable:
    type: "string"
    description: "execEnable"
  execTarget:
    type: "string"
    description: "execTarget"
  execFrequency:
    type: "string"
    description: "execFrequency"
  execDelay:
    type: "string"
    description: "execDelay"
  locationSource:
    type: "string"
    description: "locationSource"
  locationUpdatePeriod:
    type: "string"
    description: "locationUpdatePeriod"
  locationTargetID:
    type: "string"
    description: "locationTargetID"
  locationServer:
    type: "string"
    description: "locationServer"
  locationContainerID:
    type: "string"
    description: "locationContainerID"
  locationContainerName:
    type: "string"
    description: "locationContainerName"
  locationStatus:
    type: "string"
    description: "locationStatus"
  eventNotificationCriteria:
    type: "string"
    description: "eventNotificationCriteria"
  expirationCounter:
    type: "string"
    description: "expirationCounter"
  groupID:
    type: "string"
    description: "groupID"
  batchNotify:
    type: "string"
    description: "batchNotify"
  rateLimit:
    type: "string"
    description: "rateLimit"
  preSubscriptionNotify:
    type: "string"
    description: "preSubscriptionNotify"
  pendingNotification:
    type: "string"
    description: "pendingNotification"
  notificationStoragePriority:
    type: "string"
    description: "notificationStoragePriority"
  latestNotify:
    type: "string"
    description: "latestNotify"
  notificationContentType:
    type: "string"
    description: "notificationContentType"
  notificationEventCat:
    type: "string"
    description: "notificationEventCat"
  subscriberURI:
    type: "string"
    description: "notificationEventCat"
  eventID:
    type: "string"
    description: "eventID"
  eventType:
    type: "string"
    description: "eventType"
  eventStart:
    type: "string"
    description: "eventStart"
  eventEnd:
    type: "string"
    description: "eventEnd"
  operationType:
    type: "string"
    description: "operationType"
  dataSize:
    type: "string"
    description: "dataSize"
  statsCollectID:
    type: "string"
    description: "statsCollectID"
  collectingEntityID:
    type: "string"
    description: "collectingEntityID"
  event:
    type: "string"
    description: "event"
  transactionType:
    type: "string"
    description: "transactionType"
  nodeID:
    type: "string"
    description: "nodeID"
  deviceIdentifier:
    type: "string"
    description: "deviceIdentifier"
  ruleLinks:
    type: "string"
    description: "ruleLinks"
  contentInfo:
    type: "string"
    description: "contentInfo"
  contentSize:
    type: "string"
    description: "contentSize"
  requestcontent:
    type: "string"
    description: "requestcontent"
  semanticFanOutPointcontent:
    type: "string"
    description: "semanticFanOutPointcontent"
  accessControlPolicycontent:
    type: "string"
    description: "accessControlPolicycontent"
  groupReqId:
    type: "string"
    description: "groupReqId"
  hostedCSELink:
    type: "string"
    description: "hostedCSELink"
  allowedRole-IDs:
    type: "string"
    description: "allowedRole-IDs"
  conent:
    type: "string"
    description: "content"
  mgmtClientAddress:
    type: "string"
    description: "mgmtClientAddress"
  notificationForwardingURI:
    type: "string"
    description: "notificationForwardingURI"
  notificationURI:
    type: "string"
    description: "notificationURI"
  locationInformationType:
    type: "string"
    description: "locationInformationType"
  geographicalTargetArea:
    type: "string"
    description: "geographicalTargetArea"
  geofenceEventCriteria:
    type: "string"
    description: "geofenceEventCriteria"
  execMode:
    type: "string"
    description: "execMode"
  ResultExpirationTime:
    type: "string"
    description: "ResultExpirationTime"
  semanticSupportIndicator:
    type: "string"
    description: "semanticSupportIndicator"
  notifyAggregation:
    type: "string"
    description: "notifyAggregation"
  triggerReferenceNumber:
    type: "string"
    description: "triggerReferenceNumber"
  maxInstanceAge:
    type: "string"
    description: "maxInstanceAge"
  disableRetrieval:
    type: "string"
    description: "disableRetrieval"
  missingDataDetectTimer:
    type: "string"
    description: "missingDataDetectTimer"
  periodicInterval:
    type: "string"
    description: "periodicInterval"
  missingDataDetect:
    type: "string"
    description: "missingDataDetect"
  missingDataMaxNr:
    type: "string"
    description: "missingDataMaxNr"
  missingDataList:
    type: "string"
    description: "missingDataList"
  missingDataCurrentNr:
    type: "string"
    description: "missingDataCurrentNr"
  descriptorRepresentation:
    type: "string"
    description: "descriptorRepresentation"
  semanticOpExec:
    type: "string"
    description: "semanticOpExec"
  descriptor:
    type: "string"
    description: "descriptor"
  relatedSemantics:
    type: "string"
    description: "relatedSemantics"
  dataGenerationTime:
    type: "string"
    description: "dataGenerationTime"
  sequenceNr:
    type: "string"
    description: "sequenceNr"
  roleID:
    type: "string"
    description: "roleID"
  issuer:
    type: "string"
    description: "issuer"
  holder:
    type: "string"
    description: "holder"
  notBefore:
    type: "string"
    description: "notBefore"
  notAfter:
    type: "string"
    description: "notAfter"
  roleName:
    type: "string"
    description: "roleName"
  tokenLink:
    type: "string"
    description: "tokenLink"
  tokenID:
    type: "string"
    description: "tokenID"
  tokenObject:
    type: "string"
    description: "tokenObject"
  version:
    type: "string"
    description: "version"
  audience:
    type: "string"
    description: "audience"
  tokenName:
    type: "string"
    description: "tokenName"
  permissions:
    type: "string"
    description: "permissions"
  extension:
    type: "string"
    description: "extension"
  providedToNSE:
    type: "string"
    description: "providedToNSE"
  periodicIndicator:
    type: "string"
    description: "periodicIndicator"
  periodicDurationTime:
    type: "string"
    description: "periodicDurationTime"
  periodicIntervalTime:
    type: "string"
    description: "periodicIntervalTime"
  stationaryIndication:
    type: "string"
    description: "stationaryIndication"
  dataSizeIndicator:
    type: "string"
    description: "dataSizeIndicator"
  validityTime:
    type: "string"
    description: "validityTime"
  targetNetwork:
    type: "string"
    description: "targetNetwork"
  dynamicAuthorizationEnabled:
    type: "string"
    description: "dynamicAuthorizationEnabled"
  dynamicAuthorizationPoA:
    type: "string"
    description: "dynamicAuthorizationPoA"
  dynamicAuthorizationLifetime:
    type: "string"
    description: "dynamicAuthorizationLifetime"
  scheduleElement:
    type: "string"
    description: "scheduleElement"
  contentRef:
    type: "string"
    description: "contentRef"
  specializationType:
    type: "string"
    description: "specializationType"
  hostedServiceLinks:
    type: "string"
    description: "hostedServiceLinks"
  networkID:
    type: "string"
    description: "networkID"
  hostedAELinks:
    type: "string"
    description: "hostedAELinks"
  roamingStatus:
    type: "string"
    description: "roamingStatus"
  mgmtSchema:
    type: "string"
    description: "mgmtSchema"
  execResult:
    type: "string"
    description: "execResult"
  execStatus:
    type: "string"
    description: "execStatus"
  execDisable:
    type: "string"
    description: "execDisable"
  authID:
    type: "string"
    description: "authID"
  locationUpdateEventCriteria:
    type: "string"
    description: "locationUpdateEventCriteria"
  retrieveLastKnownLocation:
    type: "string"
    description: "retrieveLastKnownLocation"
  associatedCrossResourceSub:
    type: "string"
    description: "associatedCrossResourceSub"
  eventResourceIDs:
    type: "string"
    description: "eventResourceIDs"
  eventResourceTypes:
    type: "string"
    description: "eventResourceTypes"
  niddRequired:
    type: "string"
    description: "niddRequired"
  networkCoordinated:
    type: "string"
    description: "networkCoordinated"
  accessControlPolicycontent:
    type: "string"
    description: "accessControlPolicycontent"
  decision:
    type: "string"
    description: "decision"
  status:
    type: "string"
    description: "status"
  to:
    type: "string"
    description: "to"
  from:
    type: "string"
    description: "from"
  requestedResourceType:
    type: "string"
    description: "requestedResourceType"
  filterUsage:
    type: "string"
    description: "filterUsage"
  requestTime:
    type: "string"
    description: "requestTime"
  originatorLocation:
    type: "string"
    description: "originatorLocation"
  originatorIP:
    type: "string"
    description: "originatorIP"
  policies:
    type: "string"
    description: "policies"
  combiningAlgorithm:
    type: "string"
    description: "combiningAlgorithm"
  multicastAddress:
    type: "string"
    description: "multicastAddress"
  multicastGroupFanoutTarget:
    type: "string"
    description: "multicastGroupFanoutTarget"
  memberList:
    type: "string"
    description: "memberList"
  responseTarget:
    type: "string"
    description: "responseTarget"
  responseTimeWindow:
    type: "string"
    description: "responseTimeWindow"
  TMGI:
    type: "string"
    description: "TMGI"
  subscriberURI:
    type: "string"
    description: "subscriberURI"
  regularResourcesAsTarget:
    type: "string"
    description: "regularResourcesAsTarget"
  subscriptionResourcesAsTarget:
    type: "string"
    description: "subscriptionResourcesAsTarget"
  timeWindowType:
    type: "string"
    description: "timeWindowType"
  timeWindowSize:
    type: "string"
    description: "timeWindowSize"
  eventNotificationCriteriaSet:
    type: "string"
    description: "eventNotificationCriteriaSet"
  triggerPurpose:
    type: "string"
    description: "triggerPurpose"
  triggerStatus:
    type: "string"
    description: "triggerStatus"
  triggerValidityTime:
    type: "string"
    description: "triggerValidityTime"
  triggerInfoAE-ID:
    type: "string"
    description: "triggerInfoAE-ID"
  triggerInfoAddress:
    type: "string"
    description: "triggerInfoAddress"
  triggerInfoOperation:
    type: "string"
    description: "triggerInfoOperation"
  targetedResourceType:
    type: "string"
    description: "targetedResourceType"
  triggerReference:
    type: "string"
    description: "triggerReference"
  transactionID:
    type: "string"
    description: "transactionID"
  transactionControl:
    type: "string"
    description: "transactionControl"
  transactionState:
    type: "string"
    description: "transactionState"
  transactionLockTime:
    type: "string"
    description: "transactionLockTime"
  transactionExecuteTime:
    type: "string"
    description: "transactionExecuteTime"
  transactionCommitTime:
    type: "string"
    description: "transactionCommitTime"
  transactionLockType:
    type: "string"
    description: "transactionLockType"
  requestPrimitive:
    type: "string"
    description: "requestPrimitive"
  responsePrimitive:
    type: "string"
    description: "responsePrimitive"
  multimediaSessioncontent:
    type: "string"
    description: "multimediaSessioncontent"
  transactionExpirationTime:
    type: "string"
    description: "transactionExpirationTime"
  transactionMode:
    type: "string"
    description: "transactionMode"
  transactionMaxRetries:
    type: "string"
    description: "transactionMaxRetries"
  transactionMgmtHandling:
    type: "string"
    description: "transactionMgmtHandling"
  content:
    type: "string"
    description: "content"
parameters:
  Body.AEInfo:
    in: "body"
    name: "AEInfo"
    description: "AEInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/AEInfo"
  Body.remoteCSEInfo:
    in: "body"
    name: "remoteCSEInfo"
    description: "remoteCSEInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/remoteCSEInfo"
  Body.CSEBaseInfo:
    in: "body"
    name: "CSEBaseInfo"
    description: "CSEBaseInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/CSEBaseInfo"
  Body.containerInfo:
    in: "body"
    name: "containerInfo"
    description: "containerInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/containerInfo"
  Body.deliveryInfo:
    in: "body"
    name: "deliveryInfo"
    description: "deliveryInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/deliveryInfo"
  Body.resourceInfo:
    in: "body"
    name: "resourceInfo"
    description: "resourceInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/resourceInfo"
  Body.groupInfo:
    in: "body"
    name: "groupInfo"
    description: "groupInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/groupInfo"
  Body.fanOutPointInfo:
    in: "body"
    name: "fanOutPointInfo"
    description: "fanOutPointInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/fanOutPointInfo"
  Body.mgmtObjInfo:
    in: "body"
    name: "mgmtObjInfo"
    description: "mgmtObjInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/mgmtObjInfo"
  Body.mgmtCmdInfo:
    in: "body"
    name: "mgmtCmdInfo"
    description: "mgmtCmdInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/mgmtCmdInfo"
  Body.execInstanceInfo:
    in: "body"
    name: "execInstanceInfo"
    description: "execInstanceInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/execInstanceInfo"
  Body.locationPolicyInfo:
    in: "body"
    name: "locationPolicyInfo"
    description: "locationPolicyInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/locationPolicyInfo"
  Body.subscriptionInfo:
    in: "body"
    name: "subscriptionInfo"
    description: "subscriptionInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/subscriptionInfo"
  Body.pollingChannelInfo:
    in: "body"
    name: "pollingChannelInfo"
    description: "pollingChannelInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/pollingChannelInfo"
  Body.nodeInfo:
    in: "body"
    name: "nodeInfo"
    description: "nodeInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/nodeInfo"
  Body.statsConfigInfo:
    in: "body"
    name: "statsConfigInfo"
    description: "statsConfigInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/statsConfigInfo"
  Body.eventConfigInfo:
    in: "body"
    name: "eventConfigInfo"
    description: "eventConfigInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/eventConfigInfo"
  Body.statsCollectInfo:
    in: "body"
    name: "statsCollectInfo"
    description: "statsCollectInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/statsCollectInfo"
  Body.m2mServiceSubscriptionProfileInfo:
    in: "body"
    name: "m2mServiceSubscriptionProfileInfo"
    description: "m2mServiceSubscriptionProfileInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/m2mServiceSubscriptionProfileInfo"
  Body.serviceSubscribedNodeInfo:
    in: "body"
    name: "serviceSubscribedNodeInfo"
    description: "serviceSubscribedNodeInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/serviceSubscribedNodeInfo"
  Body.contentInstanceInfo:
    in: "body"
    name: "contentInstanceInfo"
    description: "contentInstanceInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/contentInstanceInfo"
  Body.accessControlPolicyInfo:
    in: "body"
    name: "accessControlPolicyInfo"
    description: "accessControlPolicyInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/accessControlPolicyInfo"
  Body.serviceSubscribedAppRuleInfo:
    in: "body"
    name: "serviceSubscribedAppRuleInfo"
    description: "serviceSubscribedAppRuleInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/serviceSubscribedAppRuleInfo"
  Body.notificationTargetMgmtPolicyRefInfo:
    in: "body"
    name: "notificationTargetMgmtPolicyRefInfo"
    description: "notificationTargetMgmtPolicyRefInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/notificationTargetMgmtPolicyRefInfo"
  Body.notificationTargetPolicyInfo:
    in: "body"
    name: "notificationTargetPolicyInfo"
    description: "notificationTargetPolicyInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/notificationTargetPolicyInfo"
  Body.policyDeletionRulesInfo:
    in: "body"
    name: "policyDeletionRulesInfo"
    description: "policyDeletionRulesInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/policyDeletionRulesInfo"
  Body.flexContainerInfo:
    in: "body"
    name: "flexContainerInfo"
    description: "flexContainerInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/flexContainerInfo"
  Body.timeSeriesInfo:
    in: "body"
    name: "timeSeriesInfo"
    description: "timeSeriesInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/timeSeriesInfo"
  Body.timeSeriesInstanceInfo:
    in: "body"
    name: "timeSeriesInstanceInfo"
    description: "timeSeriesInstanceInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/timeSeriesInstanceInfo"
  Body.roleInfo:
    in: "body"
    name: "roleInfo"
    description: "roleInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/roleInfo"
  Body.tokenInfo:
    in: "body"
    name: "tokenInfo"
    description: "tokenInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/tokenInfo"
  Body.dynamicAuthorizationConsultationInfo:
    in: "body"
    name: "dynamicAuthorizationConsultationInfo"
    description: "dynamicAuthorizationConsultationInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/dynamicAuthorizationConsultationInfo"
  Body.scheduleInfo:
    in: "body"
    name: "scheduleInfo"
    description: "scheduleInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/scheduleInfo"
  Body.authorizationDecisionInfo:
    in: "body"
    name: "authorizationDecisionInfo"
    description: "authorizationDecisionInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/authorizationDecisionInfo"
  Body.authorizationPolicyInfo:
    in: "body"
    name: "authorizationPolicyInfo"
    description: "authorizationPolicyInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/authorizationPolicyInfo"
  Body.authorizationInformationInfo:
    in: "body"
    name: "authorizationInformationInfo"
    description: "authorizationInformationInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/authorizationInformationInfo"
  Body.localMulticastGroupInfo:
    in: "body"
    name: "localMulticastGroupInfo"
    description: "localMulticastGroupInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/localMulticastGroupInfo"
  Body.crossResourceSubscriptionInfo:
    in: "body"
    name: "crossResourceSubscriptionInfo"
    description: "crossResourceSubscriptionInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/crossResourceSubscriptionInfo"
  Body.triggerRequestInfo:
    in: "body"
    name: "triggerRequestInfo"
    description: "triggerRequestInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/triggerRequestInfo"
  Body.transactionMgmtInfo:
    in: "body"
    name: "transactionMgmtInfo"
    description: "transactionMgmtInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/transactionMgmtInfo"
  Body.transactionInfo:
    in: "body"
    name: "transactionInfo"
    description: "transactionInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/transactionInfo"
  Body.multimediaSessionInfo:
    in: "body"
    name: "multimediaSessionInfo"
    description: "multimediaSessionInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/multimediaSessionInfo"
  Body.backgroundDataTransferInfo:
    in: "body"
    name: "backgroundDataTransferInfo"
    description: "backgroundDataTransferInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/backgroundDataTransferInfo"
externalDocs:
  description: "ETSI MEC015 V1.1.1 Bandwidth Management API"
  url: "http://www.etsi.org/deliver/etsi_gs/MEC/001_099/015/01.01.01_60/gs_MEC015v010101p.pdf"