---
swagger: "2.0"
info:
  description: "The ETSI IOT Bandwidth Management API described using OpenAPI"
  version: "1.1.1"
  title: "IOT API"
host: "127.0.0.1:8080"
basePath: "/iot/example"
schemes:
- "http"
- "https"
consumes:
- "application/json"
produces:
- "application/json"
security:
- OauthSecurity:
  - "all"
paths:
  /AE:
    post:
      description: "This method is used to create a AE resource."
      operationId: "AEPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "AEInfo"
        description: "AEInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/AEInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific AEInfo\
        \ resource. "
      operationId: "AEPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "AEInfo"
        description: "AEInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/AEInfo"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific AEInfo\
        \ resource. "
      operationId: "AEDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of bandwidthAllocation\
        \ resources"
      operationId: "AEGET"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the bandwidthAllocations\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200"
      x-swagger-router-controller: "Default"
  /remoteCSE:
    post:
      description: "This method is used to create a RemoteCSE resource."
      operationId: "RemoteCSEPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "remoteCSEInfo"
        description: "RemoteCSE with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/remoteCSEInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_1"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific RemoteCSE\
        \ resource. "
      operationId: "RemoteCSEPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "remoteCSEInfo"
        description: "RemoteCSE with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/remoteCSEInfo"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_1"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific RemoteCSE\
        \ resource. "
      operationId: "RemoteCSEDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of RemoteCSE\
        \ resources"
      operationId: "RemoteCSEGET"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the CSEBase\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_1"
      x-swagger-router-controller: "Default"
  /CSEBase:
     get:
      description: "This method retrieves information about a list of CSEBase\
        \ resources"
      operationId: "CSEBaseGET"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the CSEBase\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_2"
      x-swagger-router-controller: "Default"
  /container:
    post:
      description: "This method is used to create a container resource."
      operationId: "containerPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "containerInfo"
        description: "container with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/containerInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_container"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific container\
        \ resource. "
      operationId: "containerPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "containerInfo"
        description: "container with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/containerInfo"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_container"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific container\
        \ resource. "
      operationId: "containerDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of container\
        \ resources"
      operationId: "containerGET"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the container\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_container"
      x-swagger-router-controller: "Default"
  /delivery:
    post:
      description: "This method is used to create a delivery resource."
      operationId: "deliveryPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "deliveryInfo"
        description: "delivery with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/deliveryInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_delivery"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific delivery\
        \ resource. "
      operationId: "deliveryPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "deliveryInfo"
        description: "delivery with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/deliveryInfo"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_delivery"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific delivery\
        \ resource. "
      operationId: "deliveryDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of delivery\
        \ resources"
      operationId: "deliveryGET"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the delivery\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_delivery"
      x-swagger-router-controller: "Default"
  /resource:
     get:
      description: "This method retrieves information about a list of resource\
        \ resources"
      operationId: "resourceGET"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the resource\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_resource"
      x-swagger-router-controller: "Default"
  /group:
    post:
      description: "This method is used to create a group resource."
      operationId: "groupPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "groupInfo"
        description: "groupInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/groupInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_group"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific groupInfo\
        \ resource. "
      operationId: "groupPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "groupInfo"
        description: "groupInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/groupInfo"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_group"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific groupInfo\
        \ resource. "
      operationId: "groupDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of group\
        \ resources"
      operationId: "groupGET"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the group\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_group"
      x-swagger-router-controller: "Default"
  /fanOutPoint:
    post:
      description: "This method is used to create a fanOutPoint resource."
      operationId: "fanOutPointPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "fanOutPointInfo"
        description: "fanOutPointInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/fanOutPointInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_fanOutPoint"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific fanOutPointInfo\
        \ resource. "
      operationId: "fanOutPointPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "fanOutPointInfo"
        description: "fanOutPointInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/fanOutPointInfo"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "groupReqId"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_fanOutPoint"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific fanOutPointInfo\
        \ resource. "
      operationId: "fanOutPointDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "groupReqId"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of fanOutPoint\
        \ resources"
      operationId: "fanOutPointGET"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      - name: "groupReqId"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the fanOutPoint\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_fanOutPoint"
      x-swagger-router-controller: "Default"
  /mgmtObj:
    post:
      description: "This method is used to create a mgmtObj resource."
      operationId: "mgmtObjPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "mgmtObjInfo"
        description: "mgmtObjInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/mgmtObjInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_mgmtObj"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific mgmtObjInfo\
        \ resource. "
      operationId: "mgmtObjPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "mgmtObjInfo"
        description: "mgmtObjInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/mgmtObjInfo"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_mgmtObj"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific mgmtObjInfo\
        \ resource. "
      operationId: "mgmtObjDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of mgmtObj\
        \ resources"
      operationId: "mgmtObjGET"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the mgmtObj\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_mgmtObj"
      x-swagger-router-controller: "Default"
  /mgmtCmd:
    post:
      description: "This method is used to create a mgmtCmd resource."
      operationId: "mgmtCmdPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "mgmtCmdInfo"
        description: "mgmtCmdInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/mgmtCmdInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_mgmtCmd"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific mgmtCmdInfo\
        \ resource. "
      operationId: "mgmtCmdPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "mgmtCmdInfo"
        description: "mgmtCmdInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/mgmtCmdInfo"
      - name: "resourceType"
        in: "query"
        required: false
        type: "string"
      - name: "resourceID"
        in: "query"
        required: false
        type: "string"
      - name: "resourceName"
        in: "query"
        required: false
        type: "string"
      - name: "parentID"
        in: "query"
        required: false
        type: "string"
      - name: "expirationTime"
        in: "query"
        required: false
        type: "string"
      - name: "accessControlPolicyIDs"
        in: "query"
        required: false
        type: "string"
      - name: "labels"
        in: "query"
        required: false
        type: "string"
      - name: "creationTime"
        in: "query"
        required: false
        type: "string"
      - name: "execNumber"
        in: "query"
        required: false
        type: "string"
      - name: "lastModifiedTime"
        in: "query"
        required: false
        type: "string"
      - name: "description"
        in: "query"
        required: false
        type: "string"
      - name: "cmdType"
        in: "query"
        required: false
        type: "string"
      - name: "execReqArgs"
        in: "query"
        required: false
        type: "string"
      - name: "execEnable"
        in: "query"
        required: false
        type: "string"
      - name: "execTarget"
        in: "query"
        required: false
        type: "string"
      - name: "execFrequency"
        in: "query"
        required: false
        type: "string"
      - name: "execDelay"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_mgmtCmd"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific mgmtCmdInfo\
        \ resource. "
      operationId: "mgmtCmdDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "resourceType"
        in: "query"
        required: false
        type: "string"
      - name: "resourceID"
        in: "query"
        required: false
        type: "string"
      - name: "resourceName"
        in: "query"
        required: false
        type: "string"
      - name: "parentID"
        in: "query"
        required: false
        type: "string"
      - name: "expirationTime"
        in: "query"
        required: false
        type: "string"
      - name: "accessControlPolicyIDs"
        in: "query"
        required: false
        type: "string"
      - name: "labels"
        in: "query"
        required: false
        type: "string"
      - name: "creationTime"
        in: "query"
        required: false
        type: "string"
      - name: "execNumber"
        in: "query"
        required: false
        type: "string"
      - name: "lastModifiedTime"
        in: "query"
        required: false
        type: "string"
      - name: "description"
        in: "query"
        required: false
        type: "string"
      - name: "cmdType"
        in: "query"
        required: false
        type: "string"
      - name: "execReqArgs"
        in: "query"
        required: false
        type: "string"
      - name: "execEnable"
        in: "query"
        required: false
        type: "string"
      - name: "execTarget"
        in: "query"
        required: false
        type: "string"
      - name: "execFrequency"
        in: "query"
        required: false
        type: "string"
      - name: "execDelay"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of mgmtCmd\
        \ resources"
      operationId: "mgmtCmdGET"
      produces:
      - "application/json"
      parameters:
      - name: "resourceType"
        in: "query"
        required: false
        type: "string"
      - name: "resourceID"
        in: "query"
        required: false
        type: "string"
      - name: "resourceName"
        in: "query"
        required: false
        type: "string"
      - name: "parentID"
        in: "query"
        required: false
        type: "string"
      - name: "expirationTime"
        in: "query"
        required: false
        type: "string"
      - name: "accessControlPolicyIDs"
        in: "query"
        required: false
        type: "string"
      - name: "labels"
        in: "query"
        required: false
        type: "string"
      - name: "creationTime"
        in: "query"
        required: false
        type: "string"
      - name: "execNumber"
        in: "query"
        required: false
        type: "string"
      - name: "lastModifiedTime"
        in: "query"
        required: false
        type: "string"
      - name: "description"
        in: "query"
        required: false
        type: "string"
      - name: "cmdType"
        in: "query"
        required: false
        type: "string"
      - name: "execReqArgs"
        in: "query"
        required: false
        type: "string"
      - name: "execEnable"
        in: "query"
        required: false
        type: "string"
      - name: "execTarget"
        in: "query"
        required: false
        type: "string"
      - name: "execFrequency"
        in: "query"
        required: false
        type: "string"
      - name: "execDelay"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the mgmtCmd\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_mgmtCmd"
      x-swagger-router-controller: "Default"
  /execInstance:
    delete:
      description: "This method delete the information about a specific execInstanceInfo\
        \ resource. "
      operationId: "execInstanceDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "resourceType"
        in: "query"
        required: false
        type: "string"
      - name: "resourceID"
        in: "query"
        required: false
        type: "string"
      - name: "resourceName"
        in: "query"
        required: false
        type: "string"
      - name: "parentID"
        in: "query"
        required: false
        type: "string"
      - name: "expirationTime"
        in: "query"
        required: false
        type: "string"
      - name: "accessControlPolicyIDs"
        in: "query"
        required: false
        type: "string"
      - name: "labels"
        in: "query"
        required: false
        type: "string"
      - name: "creationTime"
        in: "query"
        required: false
        type: "string"
      - name: "execNumber"
        in: "query"
        required: false
        type: "string"
      - name: "lastModifiedTime"
        in: "query"
        required: false
        type: "string"
      - name: "description"
        in: "query"
        required: false
        type: "string"
      - name: "cmdType"
        in: "query"
        required: false
        type: "string"
      - name: "execReqArgs"
        in: "query"
        required: false
        type: "string"
      - name: "execEnable"
        in: "query"
        required: false
        type: "string"
      - name: "execTarget"
        in: "query"
        required: false
        type: "string"
      - name: "execFrequency"
        in: "query"
        required: false
        type: "string"
      - name: "execDelay"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of execInstance\
        \ resources"
      operationId: "execInstanceGET"
      produces:
      - "application/json"
      parameters:
      - name: "resourceType"
        in: "query"
        required: false
        type: "string"
      - name: "resourceID"
        in: "query"
        required: false
        type: "string"
      - name: "resourceName"
        in: "query"
        required: false
        type: "string"
      - name: "parentID"
        in: "query"
        required: false
        type: "string"
      - name: "expirationTime"
        in: "query"
        required: false
        type: "string"
      - name: "accessControlPolicyIDs"
        in: "query"
        required: false
        type: "string"
      - name: "labels"
        in: "query"
        required: false
        type: "string"
      - name: "creationTime"
        in: "query"
        required: false
        type: "string"
      - name: "execNumber"
        in: "query"
        required: false
        type: "string"
      - name: "lastModifiedTime"
        in: "query"
        required: false
        type: "string"
      - name: "description"
        in: "query"
        required: false
        type: "string"
      - name: "cmdType"
        in: "query"
        required: false
        type: "string"
      - name: "execReqArgs"
        in: "query"
        required: false
        type: "string"
      - name: "execEnable"
        in: "query"
        required: false
        type: "string"
      - name: "execTarget"
        in: "query"
        required: false
        type: "string"
      - name: "execFrequency"
        in: "query"
        required: false
        type: "string"
      - name: "execDelay"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the mgmtCmd\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_mgmtCmd"
      x-swagger-router-controller: "Default"
  /locationPolicy:
    post:
      description: "This method is used to create a locationPolicy resource."
      operationId: "locationPolicyPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "locationPolicyInfo"
        description: "locationPolicyInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/locationPolicyInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_locationPolicy"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific locationPolicyInfo\
        \ resource. "
      operationId: "locationPolicyPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "locationPolicyInfo"
        description: "locationPolicyInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/locationPolicyInfo"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_locationPolicy"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific locationPolicyInfo\
        \ resource. "
      operationId: "locationPolicyDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of locationPolicy\
        \ resources"
      operationId: "locationPolicyGET"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the locationPolicy\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_locationPolicy"
      x-swagger-router-controller: "Default"
  /subscription:
    post:
      description: "This method is used to create a subscription resource."
      operationId: "subscriptionPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "subscriptionInfo"
        description: "subscriptionInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/subscriptionInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_subscription"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific subscriptionInfo\
        \ resource. "
      operationId: "subscriptionPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "subscriptionInfo"
        description: "subscriptionInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/subscriptionInfo"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_subscription"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific subscriptionInfo\
        \ resource. "
      operationId: "subscriptionDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of subscription\
        \ resources"
      operationId: "subscriptionGET"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the subscription\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_subscription"
      x-swagger-router-controller: "Default"
  /pollingChannel:
    post:
      description: "This method is used to create a pollingChannel resource."
      operationId: "pollingChannelPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "pollingChannelInfo"
        description: "pollingChannelInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/pollingChannelInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_pollingChannel"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific pollingChannelInfo\
        \ resource. "
      operationId: "pollingChannelPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "pollingChannelInfo"
        description: "pollingChannelInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/pollingChannelInfo"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_pollingChannel"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific pollingChannelInfo\
        \ resource. "
      operationId: "pollingChannelDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of pollingChannel\
        \ resources"
      operationId: "pollingChannelGET"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the pollingChannel\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_pollingChannel"
      x-swagger-router-controller: "Default"
  /pollingChannelURI:
    get:
      description: "This method retrieves information about a list of pollingChannelURI\
        \ resources"
      operationId: "pollingChannelURIGET"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the pollingChannelURI\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_pollingChannel"
      x-swagger-router-controller: "Default"
  /node:
    post:
      description: "This method is used to create a node resource."
      operationId: "nodePOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "nodeInfo"
        description: "nodeInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/nodeInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_node"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific nodeInfo\
        \ resource. "
      operationId: "nodePUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "nodeInfo"
        description: "nodeInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/nodeInfo"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_node"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific nodeInfo\
        \ resource. "
      operationId: "nodeDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of node\
        \ resources"
      operationId: "nodeGET"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the node\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_node"
      x-swagger-router-controller: "Default"
  /statsConfig:
    post:
      description: "This method is used to create a statsConfig resource."
      operationId: "statsConfigPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "statsConfigInfo"
        description: "statsConfigInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/statsConfigInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_statsConfig"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific statsConfigInfo\
        \ resource. "
      operationId: "statsConfigPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "statsConfigInfo"
        description: "statsConfigInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/statsConfigInfo"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_statsConfig"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific statsConfigInfo\
        \ resource. "
      operationId: "statsConfigDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of statsConfig\
        \ resources"
      operationId: "statsConfigGET"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the statsConfig\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_statsConfig"
      x-swagger-router-controller: "Default"
  /eventConfig:
    post:
      description: "This method is used to create a eventConfig resource."
      operationId: "eventConfigPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "eventConfigInfo"
        description: "eventConfigInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/eventConfigInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_eventConfig"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific eventConfigInfo\
        \ resource. "
      operationId: "eventConfigPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "eventConfigInfo"
        description: "eventConfigInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/eventConfigInfo"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_eventConfig"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific eventConfigInfo\
        \ resource. "
      operationId: "eventConfigDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of eventConfig\
        \ resources"
      operationId: "eventConfigGET"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the eventConfig\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_eventConfig"
      x-swagger-router-controller: "Default"
  /statsCollect:
    post:
      description: "This method is used to create a statsCollect resource."
      operationId: "statsCollectPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "statsCollectInfo"
        description: "statsCollectInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/statsCollectInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_statsCollect"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific statsCollectInfo\
        \ resource. "
      operationId: "statsCollectPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "statsCollectInfo"
        description: "statsCollectInfo with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/statsCollectInfo"
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_statsCollect"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific statsCollectInfo\
        \ resource. "
      operationId: "statsCollectDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of statsCollect\
        \ resources"
      operationId: "statsCollectGET"
      produces:
      - "application/json"
      parameters:
      - name: "FromId"
        in: "query"
        required: false
        type: "string"
      - name: "ToAddress"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the statsCollect\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_statsCollect"
      x-swagger-router-controller: "Default"
  /m2mServiceSubscriptionProfile:
    post:
      description: "This method is used to create a m2mServiceSubscriptionProfile resource."
      operationId: "m2mServiceSubscriptionProfilePOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "m2mServiceSubscriptionProfileInfo"
        description: "m2mServiceSubscriptionProfile with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/m2mServiceSubscriptionProfileInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_m2mServiceSubscriptionProfile"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific m2mServiceSubscriptionProfile\
        \ resource. "
      operationId: "m2mServiceSubscriptionProfilePUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "m2mServiceSubscriptionProfileInfo"
        description: "m2mServiceSubscriptionProfile with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/m2mServiceSubscriptionProfileInfo"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_m2mServiceSubscriptionProfile"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific m2mServiceSubscriptionProfile\
        \ resource. "
      operationId: "m2mServiceSubscriptionProfileDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of m2mServiceSubscriptionProfile\
        \ resources"
      operationId: "m2mServiceSubscriptionProfileGET"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the m2mServiceSubscriptionProfile\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_m2mServiceSubscriptionProfile"
      x-swagger-router-controller: "Default"
  /serviceSubscribedNode:
    post:
      description: "This method is used to create a serviceSubscribedNode resource."
      operationId: "serviceSubscribedNodePOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "serviceSubscribedNodeInfo"
        description: "serviceSubscribedNode with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/serviceSubscribedNodeInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_serviceSubscribedNode"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific serviceSubscribedNode\
        \ resource. "
      operationId: "serviceSubscribedNodePUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "serviceSubscribedNodeInfo"
        description: "serviceSubscribedNode with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/serviceSubscribedNodeInfo"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_serviceSubscribedNode"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific serviceSubscribedNode\
        \ resource. "
      operationId: "serviceSubscribedNodeDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of serviceSubscribedNode\
        \ resources"
      operationId: "serviceSubscribedNodeGET"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the serviceSubscribedNode\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_serviceSubscribedNode"
      x-swagger-router-controller: "Default"
  /contentInstance:
    post:
      description: "This method is used to create a contentInstance resource."
      operationId: "contentInstancePOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "contentInstanceInfo"
        description: "contentInstance with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/contentInstanceInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_contentInstance"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific contentInstance\
        \ resource. "
      operationId: "contentInstanceDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of contentInstance\
        \ resources"
      operationId: "contentInstanceGET"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the contentInstance\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_contentInstance"
      x-swagger-router-controller: "Default"
  /request:
    delete:
      description: "This method delete the information about a specific request\
        \ resource. "
      operationId: "requestDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of request\
        \ resources"
      operationId: "requestGET"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the request\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_request"
      x-swagger-router-controller: "Default"
  /accessControlPolicy:
    post:
      description: "This method is used to create a accessControlPolicy resource."
      operationId: "accessControlPolicyPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "accessControlPolicyInfo"
        description: "accessControlPolicy with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/accessControlPolicyInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_accessControlPolicy"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific accessControlPolicy\
        \ resource. "
      operationId: "accessControlPolicyPUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "accessControlPolicyInfo"
        description: "accessControlPolicy with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/accessControlPolicyInfo"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_accessControlPolicy"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific accessControlPolicy\
        \ resource. "
      operationId: "accessControlPolicyDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of accessControlPolicy\
        \ resources"
      operationId: "accessControlPolicyGET"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the accessControlPolicy\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_accessControlPolicy"
      x-swagger-router-controller: "Default"
  /latest:
    delete:
      description: "This method delete the information about a specific latest contentInstance\
        \ resource. "
      operationId: "latestDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "creationTime"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a latest contentInstance\
        \ resources"
      operationId: "latestGET"
      produces:
      - "application/json"
      parameters:
      - name: "creationTime"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing a contentInstance\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_contentInstance"
      x-swagger-router-controller: "Default"
  /oldest:
    delete:
      description: "This method delete the information about a specific oldest contentInstance\
        \ resource. "
      operationId: "oldestDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "creationTime"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a oldest contentInstance\
        \ resources"
      operationId: "oldestGET"
      produces:
      - "application/json"
      parameters:
      - name: "creationTime"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing a contentInstance\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_contentInstance"
      x-swagger-router-controller: "Default"
  /serviceSubscribedAppRule:
    post:
      description: "This method is used to create a serviceSubscribedAppRule resource."
      operationId: "serviceSubscribedAppRulePOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "serviceSubscribedAppRuleInfo"
        description: "serviceSubscribedAppRule with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/serviceSubscribedAppRuleInfo"
      responses:
        201:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_serviceSubscribedAppRule"
      x-swagger-router-controller: "Default"
    put:
      description: "This method updates the information about a specific serviceSubscribedAppRule\
        \ resource. "
      operationId: "serviceSubscribedAppRulePUT"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "serviceSubscribedAppRuleInfo"
        description: "serviceSubscribedAppRule with updated information is included as entity body of\
          \ the request"
        required: true
        schema:
          $ref: "#/definitions/serviceSubscribedAppRuleInfo"
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, the HTTP response shall include a \"Location\"\
            \ HTTP header that contains the resource URI of the created resource."
          schema:
            $ref: "#/definitions/inline_response_200_serviceSubscribedAppRule"
      x-swagger-router-controller: "Default"
    delete:
      description: "This method delete the information about a specific serviceSubscribedAppRule\
        \ resource. "
      operationId: "serviceSubscribedAppRuleDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        204:
          description: "No Content"
      x-swagger-router-controller: "Default"
    get:
      description: "This method retrieves information about a list of serviceSubscribedAppRule\
        \ resources"
      operationId: "serviceSubscribedAppRuleGET"
      produces:
      - "application/json"
      parameters:
      - name: "Operation"
        in: "query"
        required: false
        type: "string"
      - name: "targetAddress"
        in: "query"
        required: false
        type: "string"
      - name: "msgOriginatorId"
        in: "query"
        required: false
        type: "string"
      - name: "RequestId"
        in: "query"
        required: false
        type: "string"
      - name: "ResourceType"
        in: "query"
        required: false
        type: "string"
      - name: "OriginatingTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ReqExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "ResExpirationTimestamp"
        in: "query"
        required: false
        type: "string"
      - name: "EventCategory"
        in: "query"
        required: false
        type: "string"
      - name: "OperationalExecutionTime"
        in: "query"
        required: false
        type: "string"
      - name: "ResponseType"
        in: "query"
        required: false
        type: "string"
      - name: "ResultPersistence"
        in: "query"
        required: false
        type: "string"
      - name: "ResultContent"
        in: "query"
        required: false
        type: "string"
      - name: "DeliveryAggregation"
        in: "query"
        required: false
        type: "string"
      - name: "GroupRequestIdentifier"
        in: "query"
        required: false
        type: "string"
      - name: "FilterCriteria"
        in: "query"
        required: false
        type: "string"
      - name: "DiscoveryResultType"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Upon success, a response body containing an array of the serviceSubscribedAppRule\
            \ is returned."
          schema:
            $ref: "#/definitions/inline_response_200_serviceSubscribedAppRule"
      x-swagger-router-controller: "Default"
definitions:
  inline_response_200_serviceSubscribedAppRule:
    properties:
      serviceSubscribedAppRuleInfo:
        $ref: "#/definitions/serviceSubscribedAppRuleInfo"
    example:
      serviceSubscribedAppRuleInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  serviceSubscribedAppRuleInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      targetAddress:
        $ref: "#/definitions/targetAddress"
      msgOriginatorId:
        $ref: "#/definitions/msgOriginatorId"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/serviceSubscribedAppRulecontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      DiscoveryResultType:
        $ref: "#/definitions/DiscoveryResultType"
    description: "information of serviceSubscribedAppRule resource"
    example:
      serviceSubscribedAppRuleInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          creationTime: ""
          lastModifiedTime: ""
          accessControlPolicyIDs: ""
          labels: ""
          applicableCredIDs: ""
          allowedApp-IDs: ""
          allowedAEs: ""
        ResourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  serviceSubscribedAppRulecontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      creationTime:
        $ref: "#/definitions/creationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      applicableCredIDs:
        $ref: "#/definitions/applicableCredIDs"
      allowedApp-IDs:
        $ref: "#/definitions/allowedApp-IDs"
      allowedAEs:
        $ref: "#/definitions/allowedAEs"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      creationTime: ""
      accessControlPolicyIDs: ""
      lastModifiedTime: ""
      labels: ""
      applicableCredIDs: ""
      allowedApp-IDs: ""
      allowedAEs: ""
  inline_response_200_accessControlPolicy:
    properties:
      accessControlPolicyInfo:
        $ref: "#/definitions/accessControlPolicyInfo"
    example:
      accessControlPolicyInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  accessControlPolicyInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      targetAddress:
        $ref: "#/definitions/targetAddress"
      msgOriginatorId:
        $ref: "#/definitions/msgOriginatorId"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/accessControlPolicycontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      DiscoveryResultType:
        $ref: "#/definitions/DiscoveryResultType"
    description: "information of accessControlPolicy resource"
    example:
      accessControlPolicyInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content: ""
        ResourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  inline_response_200_request:
    properties:
      requestInfo:
        $ref: "#/definitions/requestInfo"
    example:
      requestInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  requestInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      targetAddress:
        $ref: "#/definitions/targetAddress"
      msgOriginatorId:
        $ref: "#/definitions/msgOriginatorId"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/requestcontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      DiscoveryResultType:
        $ref: "#/definitions/DiscoveryResultType"
    description: "information of request resource"
    example:
      requestInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content: ""
        ResourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  inline_response_200_contentInstance:
    properties:
      contentInstanceInfo:
        $ref: "#/definitions/contentInstanceInfo"
    example:
      contentInstanceInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  contentInstanceInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      targetAddress:
        $ref: "#/definitions/targetAddress"
      msgOriginatorId:
        $ref: "#/definitions/msgOriginatorId"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/contentInstancecontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      DiscoveryResultType:
        $ref: "#/definitions/DiscoveryResultType"
    description: "information of contentInstance resource"
    example:
      contentInstanceInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""
          announceTo: ""
          announcedAttribute: ""
          creator: ""
          contentInfo: ""
          contentSize: ""
          ontologyRef: ""
          stateTag: ""
        ResourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  contentInstancecontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      announceTo:
        $ref: "#/definitions/announceTo"
      announcedAttribute:
        $ref: "#/definitions/announcedAttribute"
      creator:
        $ref: "#/definitions/creator"
      contentInfo:
        $ref: "#/definitions/contentInfo"
      contentSize:
        $ref: "#/definitions/contentSize"
      ontologyRef:
        $ref: "#/definitions/ontologyRef"
      stateTag:
        $ref: "#/definitions/stateTag"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
      announceTo: ""
      announcedAttribute: ""
      creator: ""
      contentInfo: ""
      contentSize: ""
      ontologyRef: ""
      stateTag: ""
  inline_response_200_serviceSubscribedNode:
    properties:
      serviceSubscribedNodeInfo:
        $ref: "#/definitions/serviceSubscribedNodeInfo"
    example:
      serviceSubscribedNodeInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  serviceSubscribedNodeInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      targetAddress:
        $ref: "#/definitions/targetAddress"
      msgOriginatorId:
        $ref: "#/definitions/msgOriginatorId"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/serviceSubscribedNodecontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      DiscoveryResultType:
        $ref: "#/definitions/DiscoveryResultType"
    description: "information of serviceSubscribedNode resource"
    example:
      serviceSubscribedNodeInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          accessControlPolicyIDs: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""
          nodeID: ""
          CSE-ID: ""
          deviceIdentifier: ""
          ruleLinks: ""
        ResourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  serviceSubscribedNodecontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      nodeID:
        $ref: "#/definitions/nodeID"
      CSE-ID:
        $ref: "#/definitions/CSE-ID"
      deviceIdentifier:
        $ref: "#/definitions/deviceIdentifier"
      ruleLinks:
        $ref: "#/definitions/ruleLinks"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      accessControlPolicyIDs: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
      nodeID: ""
      CSE-ID: ""
      deviceIdentifier: ""
      ruleLinks: ""
  inline_response_200_m2mServiceSubscriptionProfile:
    properties:
      m2mServiceSubscriptionProfileInfo:
        $ref: "#/definitions/m2mServiceSubscriptionProfileInfo"
    example:
      m2mServiceSubscriptionProfileInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  m2mServiceSubscriptionProfileInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      targetAddress:
        $ref: "#/definitions/targetAddress"
      msgOriginatorId:
        $ref: "#/definitions/msgOriginatorId"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/m2mServiceSubscriptionProfilecontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      DiscoveryResultType:
        $ref: "#/definitions/DiscoveryResultType"
    description: "information of m2mServiceSubscriptionProfile resource"
    example:
      m2mServiceSubscriptionProfileInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          accessControlPolicyIDs: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""
        ResourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  m2mServiceSubscriptionProfilecontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      accessControlPolicyIDs: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
  inline_response_200_statsCollect:
    properties:
      statsCollectInfo:
        $ref: "#/definitions/statsCollectInfo"
    example:
      statsCollectInfo:
        FromId: ""
        ToAddress: ""
        resourceType: ""
        resourceID: ""
        resourceName: ""
        statsCollectID: ""
        collectingEntityID: ""
        event: ""
        eventStart: ""
        eventEnd: ""
        transactionType: ""
        dataSize: ""
  statsCollectInfo:
    type: "object"
    properties:
      FromId:
        $ref: "#/definitions/FromId"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      statsCollectID:
        $ref: "#/definitions/statsCollectID"
      collectingEntityID:
        $ref: "#/definitions/collectingEntityID"
      event:
        $ref: "#/definitions/event"
      eventStart:
        $ref: "#/definitions/eventStart"
      eventEnd:
        $ref: "#/definitions/eventEnd"
      transactionType:
        $ref: "#/definitions/transactionType"
      dataSize:
        $ref: "#/definitions/dataSize"
    description: "information of statsCollect resource"
    example:
      statsCollectInfo:
        FromId: ""
        ToAddress: ""
        resourceType: ""
        resourceID: ""
        resourceName: ""
        parentID: ""
        expirationTime: ""
        accessControlPolicyIDs: ""
        labels: ""
        creationTime: ""
        lastModifiedTime: ""
        creator: ""
        eventID: ""
        eventType: ""
        eventStart: ""
        eventEnd: ""
        operationType: ""
        dataSize: ""
  inline_response_200_eventConfig:
    properties:
      eventConfigInfo:
        $ref: "#/definitions/eventConfigInfo"
    example:
      eventConfigInfo:
        FromId: ""
        ToAddress: ""
        resourceType: ""
        resourceID: ""
        resourceName: ""
        parentID: ""
        expirationTime: ""
        accessControlPolicyIDs: ""
        labels: ""
        creationTime: ""
        lastModifiedTime: ""
        creator: ""
        eventID: ""
        eventType: ""
        eventStart: ""
        eventEnd: ""
        operationType: ""
        dataSize: ""
  eventConfigInfo:
    type: "object"
    properties:
      FromId:
        $ref: "#/definitions/FromId"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      creator:
        $ref: "#/definitions/creator"
      eventID:
        $ref: "#/definitions/eventID"
      eventType:
        $ref: "#/definitions/eventType"
      eventStart:
        $ref: "#/definitions/eventStart"
      eventEnd:
        $ref: "#/definitions/eventEnd"
      operationType:
        $ref: "#/definitions/operationType"
      dataSize:
        $ref: "#/definitions/dataSize"
    description: "information of eventConfig resource"
    example:
      eventConfigInfo:
        FromId: ""
        ToAddress: ""
        resourceType: ""
        resourceID: ""
        resourceName: ""
        parentID: ""
        expirationTime: ""
        accessControlPolicyIDs: ""
        labels: ""
        creationTime: ""
        lastModifiedTime: ""
        creator: ""
        eventID: ""
        eventType: ""
        eventStart: ""
        eventEnd: ""
        operationType: ""
        dataSize: ""
  inline_response_200_statsConfig:
    properties:
      statsConfigInfo:
        $ref: "#/definitions/statsConfigInfo"
    example:
      statsConfigInfo:
        FromId: ""
        ToAddress: ""
        resourceType: ""
        resourceID: ""
        resourceName: ""
        parentID: ""
        expirationTime: ""
        accessControlPolicyIDs: ""
        labels: ""
        creationTime: ""
        lastModifiedTime: ""
        creator: ""
  statsConfigInfo:
    type: "object"
    properties:
      FromId:
        $ref: "#/definitions/FromId"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      creator:
        $ref: "#/definitions/creator"
    description: "information of statsConfig resource"
    example:
      statsConfigInfo:
        FromId: ""
        ToAddress: ""
        resourceType: ""
        resourceID: ""
        resourceName: ""
        parentID: ""
        expirationTime: ""
        accessControlPolicyIDs: ""
        labels: ""
        creationTime: ""
        lastModifiedTime: ""
        creator: ""
  inline_response_200_node:
    properties:
      nodeInfo:
        $ref: "#/definitions/nodeInfo"
    example:
      nodeInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  nodeInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      targetAddress:
        $ref: "#/definitions/targetAddress"
      msgOriginatorId:
        $ref: "#/definitions/msgOriginatorId"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/nodecontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      DiscoveryResultType:
        $ref: "#/definitions/DiscoveryResultType"
    description: "information of AE resource"
    example:
      nodeInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          accessControlPolicyIDs: ""
          hostedCSELink: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""
          announceTo: ""
          announcedAttribute: ""
          nodeID: ""
        ResourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  nodecontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      hostedCSELink:
        $ref: "#/definitions/hostedCSELink"
      announceTo:
        $ref: "#/definitions/announceTo"
      announcedAttribute:
        $ref: "#/definitions/announcedAttribute"
      nodeID:
        $ref: "#/definitions/nodeID"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      accessControlPolicyIDs: ""
      hostedCSELink: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
      announceTo: ""
      announcedAttribute: ""
      nodeID: ""
  inline_response_200_pollingChannel:
    properties:
      pollingChannelInfo:
        $ref: "#/definitions/pollingChannelInfo"
    example:
      pollingChannelInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  pollingChannelInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      targetAddress:
        $ref: "#/definitions/targetAddress"
      msgOriginatorId:
        $ref: "#/definitions/msgOriginatorId"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/pollingChannelcontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      DiscoveryResultType:
        $ref: "#/definitions/DiscoveryResultType"
    description: "information of AE resource"
    example:
      pollingChannelInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""
        ResourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  pollingChannelcontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
  inline_response_200_subscription:
    properties:
      subscriptionInfo:
        $ref: "#/definitions/subscriptionInfo"
    example:
      subscriptionInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  subscriptionInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      targetAddress:
        $ref: "#/definitions/targetAddress"
      msgOriginatorId:
        $ref: "#/definitions/msgOriginatorId"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/subscriptioncontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      DiscoveryResultType:
        $ref: "#/definitions/DiscoveryResultType"
    description: "information of AE resource"
    example:
      subscriptionInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""
          accessControlPolicyIDs: ""
          eventNotificationCriteria: ""
          expirationCounter: ""
          groupID: ""
          batchNotify: ""
          rateLimit: ""
          preSubscriptionNotify: ""
          pendingNotification: ""
          notificationStoragePriority: ""
          latestNotify: ""
          notificationContentType: ""
          notificationEventCat: ""
          creator: ""
          subscriberURI: ""
        ResourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  subscriptioncontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      eventNotificationCriteria:
        $ref: "#/definitions/eventNotificationCriteria"
      expirationCounter:
        $ref: "#/definitions/expirationCounter"
      groupID:
        $ref: "#/definitions/groupID"
      batchNotify:
        $ref: "#/definitions/batchNotify"
      rateLimit:
        $ref: "#/definitions/rateLimit"
      preSubscriptionNotify:
        $ref: "#/definitions/preSubscriptionNotify"
      pendingNotification:
        $ref: "#/definitions/pendingNotification"
      notificationStoragePriority:
        $ref: "#/definitions/notificationStoragePriority"
      latestNotify:
        $ref: "#/definitions/latestNotify"
      notificationContentType:
        $ref: "#/definitions/notificationContentType"
      notificationEventCat:
        $ref: "#/definitions/notificationEventCat"
      creator:
        $ref: "#/definitions/creator"
      subscriberURI:
        $ref: "#/definitions/subscriberURI"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
      accessControlPolicyIDs: ""
      eventNotificationCriteria: ""
      expirationCounter: ""
      groupID: ""
      batchNotify: ""
      rateLimit: ""
      preSubscriptionNotify: ""
      pendingNotification: ""
      notificationStoragePriority: ""
      latestNotify: ""
      notificationContentType: ""
      notificationEventCat: ""
      creator: ""
      subscriberURI: ""
  inline_response_200_locationPolicy:
    properties:
      locationPolicyInfo:
        $ref: "#/definitions/locationPolicyInfo"
    example:
      locationPolicyInfo:
        FromId: ""
        ToAddress: ""
        resourceType: ""
        resourceID: ""
        resourceName: ""
        parentID: ""
        expirationTime: ""
        accessControlPolicyIDs: ""
        labels: ""
        creationTime: ""
        lastModifiedTime: ""
        announceTo: ""
        announcedAttribute: ""
        locationSource: ""
        locationUpdatePeriod: ""
        locationTargetID: ""
        locationServer: ""
        locationContainerID: ""
        locationContainerName: ""
        locationStatus: ""
  locationPolicyInfo:
    type: "object"
    properties:
      FromId:
        $ref: "#/definitions/FromId"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      announceTo:
        $ref: "#/definitions/announceTo"
      announcedAttribute:
        $ref: "#/definitions/announcedAttribute"
      locationSource:
        $ref: "#/definitions/locationSource"
      locationUpdatePeriod:
        $ref: "#/definitions/locationUpdatePeriod"
      locationTargetID:
        $ref: "#/definitions/locationTargetID"
      locationServer:
        $ref: "#/definitions/locationServer"
      locationContainerID:
        $ref: "#/definitions/locationContainerID"
      locationContainerName:
        $ref: "#/definitions/locationContainerName"
      locationStatus:
        $ref: "#/definitions/locationStatus"
    description: "information of group resource"
    example:
      locationPolicyInfo:
        FromId: ""
        ToAddress: ""
        resourceType: ""
        resourceID: ""
        resourceName: ""
        parentID: ""
        expirationTime: ""
        accessControlPolicyIDs: ""
        labels: ""
        creationTime: ""
        lastModifiedTime: ""
        announceTo: ""
        announcedAttribute: ""
        locationSource: ""
        locationUpdatePeriod: ""
        locationTargetID: ""
        locationServer: ""
        locationContainerID: ""
        locationContainerName: ""
        locationStatus: ""
  inline_response_200_mgmtCmd:
    properties:
      mgmtCmdInfo:
        $ref: "#/definitions/mgmtCmdInfo"
    example:
      mgmtCmdInfo:
        resourceType: ""
        resourceID: ""
        resourceName: ""
        parentID: ""
        expirationTime: ""
        accessControlPolicyIDs: ""
        labels: ""
        creationTime: ""
        execNumber: ""
        lastModifiedTime: ""
        description: ""
        cmdType: ""
        execReqArgs: ""
        execEnable: ""
        execTarget: ""
        execFrequency: ""
        execDelay: ""
  mgmtCmdInfo:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      labels:
        $ref: "#/definitions/labels"
      creationTime:
        $ref: "#/definitions/creationTime"
      execNumber:
        $ref: "#/definitions/execNumber"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      description:
        $ref: "#/definitions/description"
      cmdType:
        $ref: "#/definitions/cmdType"
      execReqArgs:
        $ref: "#/definitions/execReqArgs"
      execEnable:
        $ref: "#/definitions/execEnable"
      execTarget:
        $ref: "#/definitions/execTarget"
      execFrequency:
        $ref: "#/definitions/execFrequency"
      execDelay:
        $ref: "#/definitions/execDelay"
    description: "information of mgmtCmdInfo resource"
    example:
      mgmtCmdInfo:
        resourceType: ""
        resourceID: ""
        resourceName: ""
        parentID: ""
        expirationTime: ""
        accessControlPolicyIDs: ""
        labels: ""
        creationTime: ""
        execNumber: ""
        lastModifiedTime: ""
        description: ""
        cmdType: ""
        execReqArgs: ""
        execEnable: ""
        execTarget: ""
        execFrequency: ""
        execDelay: ""
  inline_response_200_mgmtObj:
    properties:
      mgmtObjInfo:
        $ref: "#/definitions/mgmtObjInfo"
    example:
      mgmtObjInfo:
        FromId: ""
        ToAddress: ""
        content: ""
  mgmtObjInfo:
    type: "object"
    properties:
      FromId:
        $ref: "#/definitions/FromId"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      content:
        $ref: "#/definitions/mgmtObjcontent"
    description: "information of group resource"
    example:
      mgmtObjInfo:
        FromId: ""
        ToAddress: ""
        content: 
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          accessControlPolicyIDs: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""        
          announceTo: ""
          announcedAttribute: ""
          mgmtDefinition: ""
          objectIDs: ""
          objectPaths: ""
          mgmtLink: ""
          objectAttribute: ""
          description: ""
  mgmtObjcontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      announceTo:
        $ref: "#/definitions/announceTo"
      announcedAttribute:
        $ref: "#/definitions/announcedAttribute"
      mgmtDefinition:
        $ref: "#/definitions/mgmtDefinition"
      objectIDs:
        $ref: "#/definitions/objectIDs"
      objectPaths:
        $ref: "#/definitions/objectPaths"
      mgmtLink:
        $ref: "#/definitions/mgmtLink"
      objectAttribute:
        $ref: "#/definitions/objectAttribute"
      description:
        $ref: "#/definitions/description"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      accessControlPolicyIDs: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""        
      announceTo: ""
      announcedAttribute: ""
      mgmtDefinition: ""
      objectIDs: ""
      objectPaths: ""
      mgmtLink: ""
      objectAttribute: ""
      description: ""
  inline_response_200_fanOutPoint:
    properties:
      fanOutPointInfo:
        $ref: "#/definitions/fanOutPointInfo"
    example:
      fanOutPointInfo:
        FromId: ""
        ToAddress: ""
        groupReqId: ""
        content: ""
  fanOutPointInfo:
    type: "object"
    properties:
      FromId:
        $ref: "#/definitions/FromId"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      groupReqId:
        $ref: "#/definitions/groupReqId"
      content:
        $ref: "#/definitions/fanOutPointcontent"
    description: "information of group resource"
    example:
      fanOutPointInfo:
        FromId: ""
        ToAddress: ""
        groupReqId: ""
        content: 
          resourceType: ""
          creator: ""
          resourceID: ""
          resourceName: ""
  fanOutPointcontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      creator:
        $ref: "#/definitions/creator"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
    example:
      resourceType: ""
      creator: ""
      resourceID: ""
      resourceName: ""
  inline_response_200_group:
    properties:
      groupInfo:
        $ref: "#/definitions/groupInfo"
    example:
      groupInfo:
        FromId: ""
        ToAddress: ""
        resourceType: ""
        creator: ""
        resourceID: ""
        memberType: ""
        resourceName: ""
        currentNrOfMembers: ""
        parentID: ""
        maxNrOfMembers: ""
        expirationTime: ""
        memberIDs: ""
        accessControlPolicyIDs: ""
        membersAccessControlPolicyIDs: ""
        labels: ""
        memberTypeValidated: ""
        creationTime: ""
        consistencyStrategy: ""
        lastModifiedTime: ""
        groupName: ""
        announceTo: ""
        announcedAttribute: ""
  groupInfo:
    type: "object"
    properties:
      FromId:
        $ref: "#/definitions/FromId"
      ToAddress:
        $ref: "#/definitions/ToAddress"
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      announceTo:
        $ref: "#/definitions/announceTo"
      announcedAttribute:
        $ref: "#/definitions/announcedAttribute"
      memberType:
        $ref: "#/definitions/memberType"
      creator:
        $ref: "#/definitions/creator"
      maxNrOfMembers:
        $ref: "#/definitions/maxNrOfMembers"
      currentNrOfMembers:
        $ref: "#/definitions/currentNrOfMembers"
      memberIDs:
        $ref: "#/definitions/memberIDs"
      membersAccessControlPolicyIDs:
        $ref: "#/definitions/membersAccessControlPolicyIDs"
      memberTypeValidated:
        $ref: "#/definitions/memberTypeValidated"
      consistencyStrategy:
        $ref: "#/definitions/consistencyStrategy"
      groupName:
        $ref: "#/definitions/groupName"
    description: "information of group resource"
    example:
      groupInfo:
        FromId: ""
        ToAddress: ""
        resourceType: ""
        creator: ""
        resourceID: ""
        memberType: ""
        resourceName: ""
        currentNrOfMembers: ""
        parentID: ""
        maxNrOfMembers: ""
        expirationTime: ""
        memberIDs: ""
        accessControlPolicyIDs: ""
        membersAccessControlPolicyIDs: ""
        labels: ""
        memberTypeValidated: ""
        creationTime: ""
        consistencyStrategy: ""
        lastModifiedTime: ""
        groupName: ""
        announceTo: ""
        announcedAttribute: ""
  inline_response_200_container:
    properties:
      containerInfo:
        $ref: "#/definitions/containerInfo"
    example:
      containerInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  containerInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      targetAddress:
        $ref: "#/definitions/targetAddress"
      msgOriginatorId:
        $ref: "#/definitions/msgOriginatorId"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/containercontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      DiscoveryResultType:
        $ref: "#/definitions/DiscoveryResultType"
    description: "information of AE resource"
    example:
      containerInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          accessControlPolicyIDs: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""
          announceTo: ""
          announcedAttribute: ""
          stateTag: ""
          creator: ""
          maxNrOfInstances: ""
          maxByteSize: ""
          ontologyRef: ""
          currentNrOfInstances: ""
          currentByteSize: ""
          locationID: ""
        ResourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  containercontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      announceTo:
        $ref: "#/definitions/announceTo"
      announcedAttribute:
        $ref: "#/definitions/announcedAttribute"
      stateTag:
        $ref: "#/definitions/stateTag"
      creator:
        $ref: "#/definitions/creator"
      maxNrOfInstances:
        $ref: "#/definitions/maxNrOfInstances"
      ontologyRef:
        $ref: "#/definitions/ontologyRef"
      maxByteSize:
        $ref: "#/definitions/maxByteSize"
      currentNrOfInstances:
        $ref: "#/definitions/currentNrOfInstances"
      currentByteSize:
        $ref: "#/definitions/currentByteSize"
      locationID:
        $ref: "#/definitions/locationID"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      accessControlPolicyIDs: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
      announceTo: ""
      announcedAttribute: ""
      stateTag: ""
      creator: ""
      maxNrOfInstances: ""
      maxByteSize: ""
      ontologyRef: ""
      currentNrOfInstances: ""
      currentByteSize: ""
      locationID: ""
  inline_response_200_delivery:
    properties:
      deliveryInfo:
        $ref: "#/definitions/deliveryInfo"
    example:
      deliveryInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  deliveryInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      targetAddress:
        $ref: "#/definitions/targetAddress"
      msgOriginatorId:
        $ref: "#/definitions/msgOriginatorId"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/deliverycontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      DiscoveryResultType:
        $ref: "#/definitions/DiscoveryResultType"
    description: "information of AE resource"
    example:
      deliveryInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          accessControlPolicyIDs: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""
          stateTag: ""
          source: ""
          target: ""
          lifespan: ""
          eventCat: ""
          deliveryMetaData: ""
          aggregatedRequest: ""
        ResourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  deliverycontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      stateTag:
        $ref: "#/definitions/stateTag"
      source:
        $ref: "#/definitions/source"
      target:
        $ref: "#/definitions/target"
      lifespan:
        $ref: "#/definitions/lifespan"
      eventCat:
        $ref: "#/definitions/eventCat"
      deliveryMetaData:
        $ref: "#/definitions/deliveryMetaData"
      aggregatedRequest:
        $ref: "#/definitions/aggregatedRequest"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      accessControlPolicyIDs: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
      stateTag: ""
      source: ""
      target: ""
      lifespan: ""
      eventCat: ""
      deliveryMetaData: ""
      aggregatedRequest: ""
  inline_response_200:
    properties:
      AEInfo:
        $ref: "#/definitions/AEInfo"
    example:
      AEInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  AEInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      targetAddress:
        $ref: "#/definitions/targetAddress"
      msgOriginatorId:
        $ref: "#/definitions/msgOriginatorId"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/AEcontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      DiscoveryResultType:
        $ref: "#/definitions/DiscoveryResultType"
    description: "information of AE resource"
    example:
      AEInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content:
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          expirationTime: ""
          accessControlPolicyIDs: ""
          creationTime: ""
          lastModifiedTime: ""
          labels: ""
          announceTo: ""
          announcedAttribute: ""
          appName: ""
          App-ID: ""
          AE-ID: ""
          pointOfAccess: ""
          ontologyRef: ""
          requestReachability: ""
          nodeLink: ""
          contentSerialization: ""
        ResourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  Operation:
    type: "string"
    description: "Operation"
  targetAddress:
    type: "string"
    description: "targetAddress"
  msgOriginatorId:
    type: "string"
    description: "msgOriginatorId"
  RequestId:
    type: "string"
    description: "RequestId"
  ResourceType:
    type: "string"
    description: "resourceType"
  OriginatingTimestamp:
    type: "string"
    description: "OriginatingTimestamp"
  ReqExpirationTimestamp:
    type: "string"
    description: "ReqExpirationTimestamp"
  ResExpirationTimestamp:
    type: "string"
    description: "ResExpirationTimestamp"
  EventCategory:
    type: "string"
    description: "EventCategory"
  OperationalExecutionTime:
    type: "string"
    description: "OperationalExecutionTime"
  ResponseType:
    type: "string"
    description: "ResponseType"
  ResultPersistence:
    type: "string"
    description: "ResultPersistence"
  ResultContent:
    type: "string"
    description: "ResultContent"
  DeliveryAggregation:
    type: "string"
    description: "DeliveryAggregation"
  GroupRequestIdentifier:
    type: "string"
    description: "GroupRequestIdentifier"
  FilterCriteria:
    type: "string"
    description: "FilterCriteria"
  DiscoveryResultType:
    type: "string"
    description: "DiscoveryResultType"
  AEcontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      announceTo:
        $ref: "#/definitions/announceTo"
      announcedAttribute:
        $ref: "#/definitions/announcedAttribute"
      appName:
        $ref: "#/definitions/appName"
      App-ID:
        $ref: "#/definitions/App-ID"
      AE-ID:
        $ref: "#/definitions/AE-ID"
      pointOfAccess:
        $ref: "#/definitions/pointOfAccess"
      ontologyRef:
        $ref: "#/definitions/ontologyRef"
      requestReachability:
        $ref: "#/definitions/requestReachability"
      nodeLink:
        $ref: "#/definitions/nodeLink"
      contentSerialization:
        $ref: "#/definitions/contentSerialization"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      accessControlPolicyIDs: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
      announceTo: ""
      announcedAttribute: ""
      appName: ""
      App-ID: ""
      AE-ID: ""
      pointOfAccess: ""
      ontologyRef: ""
      requestReachability: ""
      nodeLink: ""
      contentSerialization: ""
  resourceType:
    type: "string"
    description: "resourceType"
  resourceID:
    type: "string"
    description: "resourceID"
  resourceName:
    type: "string"
    description: "resourceName"
  parentID:
    type: "string"
    description: "parentID"
  expirationTime:
    type: "string"
    description: "expirationTime"
  accessControlPolicyIDs:
    type: "string"
    description: "accessControlPolicyIDs"
  creationTime:
    type: "string"
    description: "creationTime"
  lastModifiedTime:
    type: "string"
    description: "lastModifiedTime"
  labels:
    type: "string"
    description: "labels"
  announceTo:
    type: "string"
    description: "announceTo"
  announcedAttribute:
    type: "string"
    description: "announcedAttribute"
  appName:
    type: "string"
    description: "appName"
  App-ID:
    type: "string"
    description: "App-ID"
  AE-ID:
    type: "string"
    description: "AE-ID"
  pointOfAccess:
    type: "string"
    description: "pointOfAccess"
  ontologyRef:
    type: "string"
    description: "ontologyRef"
  requestReachability:
    type: "string"
    description: "requestReachability"
  nodeLink:
    type: "string"
    description: "nodeLink"
  contentSerialization:
    type: "string"
    description: "contentSerialization"
  stateTag:
    type: "string"
    description: "stateTag"
  creator:
    type: "string"
    description: "creator"
  maxNrOfInstances:
    type: "string"
    description: "maxNrOfInstances"
  maxByteSize:
    type: "string"
    description: "maxByteSize"
  currentNrOfInstances:
    type: "string"
    description: "currentNrOfInstances"
  currentByteSize:
    type: "string"
    description: "currentByteSize"
  locationID:
    type: "string"
    description: "locationID"
  inline_response_200_1:
    properties:
      remoteCSEInfo:
        $ref: "#/definitions/remoteCSEInfo"
    example:
      remoteCSEInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  inline_response_200_2:
    properties:
      CSEBaseInfo:
        $ref: "#/definitions/CSEBaseInfo"
    example:
      CSEBaseInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  inline_response_200_resource:
    properties:
      resourceInfo:
        $ref: "#/definitions/resourceInfo"
    example:
      resourceInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content: ""
        resourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  remoteCSEInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      targetAddress:
        $ref: "#/definitions/targetAddress"
      msgOriginatorId:
        $ref: "#/definitions/msgOriginatorId"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/remoteCSEcontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      DiscoveryResultType:
        $ref: "#/definitions/DiscoveryResultType"
    description: "information of AE resource"
    example:
      remoteCSEInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content: 
          resourceType: ""
          resourceID: ""
          resourceName: ""
          parentID: ""
          creationTime: ""
          lastModifiedTime: ""
          expirationTime: ""
          accessControlPolicyIDs: ""
          labels: ""
          announceTo: ""
          announcedAttribute: ""
          cseType: ""
          CSEBase: ""
          CSE-ID: ""
          M2M-Ext-ID: ""
          Trigger-Recipient-ID: ""
          requestReachability: ""
          nodeLink: ""
        ResourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  CSEBaseInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      targetAddress:
        $ref: "#/definitions/targetAddress"
      msgOriginatorId:
        $ref: "#/definitions/msgOriginatorId"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/CSEBaseInfocontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      DiscoveryResultType:
        $ref: "#/definitions/DiscoveryResultType"
    description: "information of CSEBaseInfo resource"
    example:
      CSEBaseInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content: ""
        ResourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  resourceInfo:
    type: "object"
    properties:
      Operation:
        $ref: "#/definitions/Operation"
      targetAddress:
        $ref: "#/definitions/targetAddress"
      msgOriginatorId:
        $ref: "#/definitions/msgOriginatorId"
      RequestId:
        $ref: "#/definitions/RequestId"
      content:
        $ref: "#/definitions/resourcecontent"
      resourceType:
        $ref: "#/definitions/ResourceType"
      OriginatingTimestamp:
        $ref: "#/definitions/OriginatingTimestamp"
      ReqExpirationTimestamp:
        $ref: "#/definitions/ReqExpirationTimestamp"
      ResExpirationTimestamp:
        $ref: "#/definitions/ResExpirationTimestamp"
      EventCategory:
        $ref: "#/definitions/EventCategory"
      OperationalExecutionTime:
        $ref: "#/definitions/OperationalExecutionTime"
      ResponseType:
        $ref: "#/definitions/ResponseType"
      ResultPersistence:
        $ref: "#/definitions/ResultPersistence"
      ResultContent:
        $ref: "#/definitions/ResultContent"
      DeliveryAggregation:
        $ref: "#/definitions/DeliveryAggregation"
      GroupRequestIdentifier:
        $ref: "#/definitions/GroupRequestIdentifier"
      FilterCriteria:
        $ref: "#/definitions/FilterCriteria"
      DiscoveryResultType:
        $ref: "#/definitions/DiscoveryResultType"
    description: "information of CSEBaseInfo resource"
    example:
      resourceInfo:
        Operation : ""
        targetAddress: ""
        msgOriginatorId: ""
        RequestId: ""
        content: ""
        ResourceType: ""
        OriginatingTimestamp: ""
        ReqExpirationTimestamp: ""
        ResExpirationTimestamp: ""
        EventCategory: ""
        OperationalExecutionTime: ""
        ResponseType: ""
        ResultPersistence: ""
        ResultContent: ""
        DeliveryAggregation: ""
        GroupRequestIdentifier: ""
        FilterCriteria: ""
        DiscoveryResultType: ""
  CSEBaseInfocontent: 
    type: "string"
    description: "CSEBaseInfocontent"
  resourcecontent: 
    type: "string"
    description: "resourcecontent"
  remoteCSEcontent:
    type: "object"
    properties:
      resourceType:
        $ref: "#/definitions/resourceType"
      resourceID:
        $ref: "#/definitions/resourceID"
      resourceName:
        $ref: "#/definitions/resourceName"
      parentID:
        $ref: "#/definitions/parentID"
      expirationTime:
        $ref: "#/definitions/expirationTime"
      accessControlPolicyIDs:
        $ref: "#/definitions/accessControlPolicyIDs"
      creationTime:
        $ref: "#/definitions/creationTime"
      lastModifiedTime:
        $ref: "#/definitions/lastModifiedTime"
      labels:
        $ref: "#/definitions/labels"
      announceTo:
        $ref: "#/definitions/announceTo"
      announcedAttribute:
        $ref: "#/definitions/announcedAttribute"
      cseType:
        $ref: "#/definitions/cseType"
      CSEBase:
        $ref: "#/definitions/CSEBase"
      CSE-ID:
        $ref: "#/definitions/CSE-ID"
      M2M-Ext-ID:
        $ref: "#/definitions/M2M-Ext-ID"
      Trigger-Recipient-ID:
        $ref: "#/definitions/Trigger-Recipient-ID"
      requestReachability:
        $ref: "#/definitions/requestReachability"
      nodeLink:
        $ref: "#/definitions/nodeLink"
    example:
      resourceType: ""
      resourceID: ""
      resourceName: ""
      parentID: ""
      expirationTime: ""
      accessControlPolicyIDs: ""
      creationTime: ""
      lastModifiedTime: ""
      labels: ""
      announceTo: ""
      announcedAttribute: ""
      cseType: ""
      CSEBase: ""
      CSE-ID: ""
      M2M-Ext-ID: ""
      Trigger-Recipient-ID: ""
      requestReachability: ""
      nodeLink: ""
      contentSerialization: ""
  cseType:
    type: "string"
    description: "cseType"
  CSEBase:
    type: "string"
    description: "CSEBase"
  CSE-ID:
    type: "string"
    description: "CSE-ID"
  M2M-Ext-ID:
    type: "string"
    description: "M2M-Ext-ID"
  Trigger-Recipient-ID:
    type: "string"
    description: "Trigger-Recipient-ID"
  source:
    type: "string"
    description: "source"
  target:
    type: "string"
    description: "target"
  lifespan:
    type: "string"
    description: "lifespan"
  eventCat:
    type: "string"
    description: "eventCat"
  deliveryMetaData:
    type: "string"
    description: "deliveryMetaData"
  aggregatedRequest:
    type: "string"
    description: "aggregatedRequest"
  FromId:
    type: "string"
    description: "FromId"
  ToAddress:
    type: "string"
    description: "ToAddress"
  groupName:
    type: "string"
    description: "groupName"
  consistencyStrategy:
    type: "string"
    description: "consistencyStrategy"
  memberTypeValidated:
    type: "string"
    description: "memberTypeValidated"
  membersAccessControlPolicyIDs:
    type: "string"
    description: "membersAccessControlPolicyIDs"
  memberIDs:
    type: "string"
    description: "memberIDs"
  maxNrOfMembers:
    type: "string"
    description: "maxNrOfMembers"
  currentNrOfMembers:
    type: "string"
    description: "currentNrOfMembers"
  memberType:
    type: "string"
    description: "memberType" 
  mgmtDefinition:
    type: "string"
    description: "mgmtDefinition"
  objectIDs:
    type: "string"
    description: "objectIDs"
  objectPaths:
    type: "string"
    description: "objectPaths"
  mgmtLink:
    type: "string"
    description: "mgmtLink"
  objectAttribute:
    type: "string"
    description: "objectAttribute"
  description:
    type: "string"
    description: "description"
  execNumber:
    type: "string"
    description: "execNumber"
  cmdType:
    type: "string"
    description: "cmdType"
  execReqArgs:
    type: "string"
    description: "execReqArgs"
  execEnable:
    type: "string"
    description: "execEnable"
  execTarget:
    type: "string"
    description: "execTarget"
  execFrequency:
    type: "string"
    description: "execFrequency"
  execDelay:
    type: "string"
    description: "execDelay"
  locationSource:
    type: "string"
    description: "locationSource"
  locationUpdatePeriod:
    type: "string"
    description: "locationUpdatePeriod"
  locationTargetID:
    type: "string"
    description: "locationTargetID"
  locationServer:
    type: "string"
    description: "locationServer"
  locationContainerID:
    type: "string"
    description: "locationContainerID"
  locationContainerName:
    type: "string"
    description: "locationContainerName"
  locationStatus:
    type: "string"
    description: "locationStatus"
  eventNotificationCriteria:
    type: "string"
    description: "eventNotificationCriteria"
  expirationCounter:
    type: "string"
    description: "expirationCounter"
  groupID:
    type: "string"
    description: "groupID"
  batchNotify:
    type: "string"
    description: "batchNotify"
  rateLimit:
    type: "string"
    description: "rateLimit"
  preSubscriptionNotify:
    type: "string"
    description: "preSubscriptionNotify"
  pendingNotification:
    type: "string"
    description: "pendingNotification"
  notificationStoragePriority:
    type: "string"
    description: "notificationStoragePriority"
  latestNotify:
    type: "string"
    description: "latestNotify"
  notificationContentType:
    type: "string"
    description: "notificationContentType"
  notificationEventCat:
    type: "string"
    description: "notificationEventCat"
  subscriberURI:
    type: "string"
    description: "notificationEventCat"
  eventID:
    type: "string"
    description: "eventID"
  eventType:
    type: "string"
    description: "eventType"
  eventStart:
    type: "string"
    description: "eventStart"
  eventEnd:
    type: "string"
    description: "eventEnd"
  operationType:
    type: "string"
    description: "operationType"
  dataSize:
    type: "string"
    description: "dataSize"
  statsCollectID:
    type: "string"
    description: "statsCollectID"
  collectingEntityID:
    type: "string"
    description: "collectingEntityID"
  event:
    type: "string"
    description: "event"
  transactionType:
    type: "string"
    description: "transactionType"
  nodeID:
    type: "string"
    description: "nodeID"
  deviceIdentifier:
    type: "string"
    description: "deviceIdentifier"
  ruleLinks:
    type: "string"
    description: "ruleLinks"
  contentInfo:
    type: "string"
    description: "contentInfo"
  contentSize:
    type: "string"
    description: "contentSize"
  requestcontent:
    type: "string"
    description: "requestcontent"
  accessControlPolicycontent:
    type: "string"
    description: "accessControlPolicycontent"
  groupReqId:
    type: "string"
    description: "groupReqId"
  hostedCSELink:
    type: "string"
    description: "hostedCSELink"
parameters:
  Body.AEInfo:
    in: "body"
    name: "AEInfo"
    description: "AEInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/AEInfo"
  Body.remoteCSEInfo:
    in: "body"
    name: "remoteCSEInfo"
    description: "remoteCSEInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/remoteCSEInfo"
  Body.CSEBaseInfo:
    in: "body"
    name: "CSEBaseInfo"
    description: "CSEBaseInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/CSEBaseInfo"
  Body.containerInfo:
    in: "body"
    name: "containerInfo"
    description: "containerInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/containerInfo"
  Body.deliveryInfo:
    in: "body"
    name: "deliveryInfo"
    description: "deliveryInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/deliveryInfo"
  Body.resourceInfo:
    in: "body"
    name: "resourceInfo"
    description: "resourceInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/resourceInfo"
  Body.groupInfo:
    in: "body"
    name: "groupInfo"
    description: "groupInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/groupInfo"
  Body.fanOutPointInfo:
    in: "body"
    name: "fanOutPointInfo"
    description: "fanOutPointInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/fanOutPointInfo"
  Body.mgmtObjInfo:
    in: "body"
    name: "mgmtObjInfo"
    description: "mgmtObjInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/mgmtObjInfo"
  Body.mgmtCmdInfo:
    in: "body"
    name: "mgmtCmdInfo"
    description: "mgmtCmdInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/mgmtCmdInfo"
  Body.locationPolicyInfo:
    in: "body"
    name: "locationPolicyInfo"
    description: "locationPolicyInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/locationPolicyInfo"
  Body.subscriptionInfo:
    in: "body"
    name: "subscriptionInfo"
    description: "subscriptionInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/subscriptionInfo"
  Body.pollingChannelInfo:
    in: "body"
    name: "pollingChannelInfo"
    description: "pollingChannelInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/pollingChannelInfo"
  Body.nodeInfo:
    in: "body"
    name: "nodeInfo"
    description: "nodeInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/nodeInfo"
  Body.statsConfigInfo:
    in: "body"
    name: "statsConfigInfo"
    description: "statsConfigInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/statsConfigInfo"
  Body.eventConfigInfo:
    in: "body"
    name: "eventConfigInfo"
    description: "eventConfigInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/eventConfigInfo"
  Body.statsCollectInfo:
    in: "body"
    name: "statsCollectInfo"
    description: "statsCollectInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/statsCollectInfo"
  Body.m2mServiceSubscriptionProfileInfo:
    in: "body"
    name: "m2mServiceSubscriptionProfileInfo"
    description: "m2mServiceSubscriptionProfileInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/m2mServiceSubscriptionProfileInfo"
  Body.serviceSubscribedNodeInfo:
    in: "body"
    name: "serviceSubscribedNodeInfo"
    description: "serviceSubscribedNodeInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/serviceSubscribedNodeInfo"
  Body.contentInstanceInfo:
    in: "body"
    name: "contentInstanceInfo"
    description: "contentInstanceInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/contentInstanceInfo"
  Body.accessControlPolicyInfo:
    in: "body"
    name: "accessControlPolicyInfo"
    description: "accessControlPolicyInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/accessControlPolicyInfo"
  Body.serviceSubscribedAppRuleInfo:
    in: "body"
    name: "serviceSubscribedAppRuleInfo"
    description: "serviceSubscribedAppRuleInfo with updated information is included as entity body of the\
      \ request"
    required: true
    schema:
      $ref: "#/definitions/serviceSubscribedAppRuleInfo"
externalDocs:
  description: "ETSI MEC015 V1.1.1 Bandwidth Management API"
  url: "http://www.etsi.org/deliver/etsi_gs/MEC/001_099/015/01.01.01_60/gs_MEC015v010101p.pdf"